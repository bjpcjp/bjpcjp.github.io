# v20220818

- title: basics (Write code that looks like Ruby)
  url: https://github.com/cocoa/eloquent-ruby/tree/master/chapter_01
  tags: ruby language
  px: 
  source: eloquent ruby (pdf)
  notes: 
    - <a href="/pdfs/ruby/er-ch01-basics.pdf">book notes</a><br>
    - format<br>
    - comments<br>
    - camel case & snake case<br>
    - parentheses<br>
    - semicolons & line folds<br>
    - avoiding trouble; wrapup

- title: control structures
  url: /pdfs/ruby/er-ch02-control-structs.pdf
  tags: ruby language
  px: 
  source: eloquent ruby (pdf)
  notes: 
    - if, unless, while, until<br>
    - modifiers<br>
    - each, not for<br>
    - case<br>
    - avoiding trouble; in the wild; wrapup

- title: collections
  url: /pdfs/ruby/er-ch03-collections.pdf
  tags: ruby language
  px: 
  source: eloquent ruby (pdf)
  notes: 
    - literal shortcuts<br>
    - arrays & hashes from method calls<br>
    - running through your collection<br>
    - beware the bang!<br>
    - hash ordering<br>
    - avoiding trouble; in the wild; wrapup
  
- title: strings
  url: /pdfs/ruby/er-ch04-strings.pdf
  tags: ruby language
  px: 
  source: eloquent ruby (pdf)
  notes: 
    - syntax<br>
    - string methods<br>
    - lines, characters & bytes<br>
    - avoiding trouble; in the wild; wrapup
  
- title: regexes
  url: /pdfs/ruby/er-ch05-regexes.pdf
  tags: ruby language
  px: 
  source: eloquent ruby (pdf)
  notes: 
    - single-character matches<br>
    - sets, ranges, alternatives<br>
    - the asterik, aka star<br>
    - Ruby regexes<br>
    - beginnings & endings<br>
    - avoiding trouble; in the wild; wrapup
  
- title: symbols
  url: /pdfs/ruby/er-ch06-symbols.pdf
  tags: ruby language
  px: 
  source: eloquent ruby (pdf)
  notes: 
    - two faces of strings<br>
    - not quite a string<br>
    - symbols "stand for something"<br>
    - avoiding trouble; in the wild; wrapup
  
- title: objects
  url: /pdfs/ruby/er-ch07-objects.pdf
  tags: ruby language
  px: 
  source: eloquent ruby (pdf)
  notes: 
    - review - classes, instances, methods<br>
    - objects all the way down<br>
    - importance of being an object<br>
    - public, private, protected objects<br>
    - in the wild; wrapup
  
- title: dynamic datatypes
  url: /pdfs/ruby/er-ch08-dynamic-typing.pdf
  tags: ruby language
  px: 
  source: eloquent ruby (pdf)
  notes: 
    - shorter programs - not the way you expect<br>
    - decoupling<br>
    - ceremony vs clarity<br>
    - avoiding trouble; in the wild; wrapup
  
- title: specs & testing
  url: /pdfs/ruby/er-ch09-specs-testing.pdf
  tags: ruby language
  px: 
  source: eloquent ruby (pdf)
  notes: 
    - <strong>test::unit</strong><br>
    - assertions<br>
    - don't test it - spec it<br>    
    - readability<br>
    - stubs & mocks<br>
    - avoiding trouble; in the wild; wrapup
  
- title: classes & methods
  url: /pdfs/ruby/er-ch10-classes-methods.pdf
  tags: ruby language
  px: 
  source: eloquent ruby (pdf)
  notes:
    - compressing specs<br>
    - methods for humans<br>
    - ruby methods<br>
    - one way out?<br>
    - avoiding trouble; in the wild; wrapup
  
- title: operators
  url: /pdfs/ruby/er-ch11-operators.pdf
  tags: ruby language
  px: 
  source: eloquent ruby (pdf)
  notes: 
    - defining operators<br>
    - examples<br>
    - operating across classes<br>
    - avoiding trouble; in the wild; wrapup
  
- title: objects & equality
  url: /pdfs/ruby/er-ch12-object-equality.pdf
  tags: ruby language
  px: 
  source: eloquent ruby (pdf)
  notes: 
    - document identifiers<br>
    - multiple equality methods<br>
    - <strong>==</strong><br>
    - more <strong>==</strong> uses<br>
    - well-behaved equality<br>
    - <strong>===</strong> for case statements<br>
    - <strong>eql?</strong> and hashes<br>
    - well-behaved hash keys<br>
    - avoiding trouble; in the wild; wrapup
  
- title: singletons
  url: /pdfs/ruby/er-ch13-singletons.pdf
  tags: ruby language
  px: /px/ruby/singleton.png
  source: eloquent ruby (pdf)
  notes: 
    - a puzzle<br>
    - a hidden, but real, class<br>
    - class methods<br>
    - avoiding trouble; in the wild; wrapup
  
- title: class instance variables (@@instvarname)
  url: /pdfs/ruby/er-ch14-class-instance-vars.pdf
  tags: ruby language
  px: 
  source: eloquent ruby (pdf)
  notes: 
    - quick review<br>
    - wandering variables<br>
    - controlling data in your class<br>
    - class instance variables & subclasses<br>
    - convenience helpers<br>
    - avoiding trouble; in the wild; wrapup
  
- title: modules & namespaces
  url: /pdfs/ruby/er-ch15-modules-namespaces.pdf
  tags: ruby language
  px: 
  source: eloquent ruby (pdf)
  notes: 
    - a place for your stuff<br>
    - a home for utility methods<br>
    - construction<br>
    - modules are objects<br>
    - avoiding trouble; in the wild; wrapup

  
- title: modules & mixins
  url: /pdfs/ruby/er-ch16-modules-mixins.pdf
  tags: ruby language
  px: 
  source: eloquent ruby (pdf)
  notes: 
    - better books with modules<br>
    - mixin modules<br>
    - module extensions<br>
    - avoiding trouble; in the wild; wrapup
  
- title: blocks & iteration
  url: /pdfs/ruby/er-ch17-blocks-iteration.pdf
  tags: ruby language
  px: 
  source: eloquent ruby (pdf)
  notes: 
    - quick review<br>
    - one word after another<br>
    - as many iterators as you want<br>
    - iterating over the ethereal<br>
    - Enumerable - your iterator on steroids<br>
    - avoiding trouble; in the wild; wrapup
  
- title: blocks & wrappers
  url: /pdfs/ruby/er-ch18-blocks-execute-around.pdf
  tags: ruby language
  px:
  source: eloquent ruby (pdf)
  notes: 
    - logging<br>
    - when something absolutely MUST happen<br>
    - initialization blocks<br>
    - dragging your scope along with the block<br>
    - carrying the answers back<br>
    - avoiding trouble; in the wild; wrapup

- title: blocks - deferred execution
  url: /pdfs/ruby/er-ch19-blocks-deferred-execution.pdf
  tags: ruby language
  px:
  source: eloquent ruby (pdf)
  notes: 
    - explicit blocks<br>
    - callback problems<br>
    - banking blocks<br>
    - saving blocks for lazy initialization<br>
    - instant block objects<br>
    - avoiding trouble; in the wild; wrapup

- title: metaprogramming - hooks
  url: /pdfs/ruby/er-ch20-metaprogramming-hooks.pdf
  tags: ruby language
  px:
  source: eloquent ruby (pdf)
  notes: 
    - waking up to a new subclass<br>
    - modules want to be heard too<br>
    - knowing when time is up<br>
    - ...and a cast of thousands<br>
    - avoiding trouble; in the wild; wrapup
  
- title: method_missing
  url: /pdfs/ruby/er-ch21-metaprogramming-method_missing.pdf
  tags: ruby language
  px:
  source: eloquent ruby (pdf)
  notes: 
    - meeting those methods<br>
    - handling document errors<br>
    - coping with constants<br>
    - in the wild; wrapup
  
- title: method_missing - delegation
  url: /pdfs/ruby/er-ch22-metaprogramming-method_missing-delegation.pdf
  tags: ruby language
  px:
  source: eloquent ruby (pdf)
  notes: 
    - intro<br>
    - challenges<br>
    - <strong>method_missing</strong><br>
    - more discriminating delegation<br>
    - in the wild; wrapup
  
- title: method_missing - APIs
  url: /pdfs/ruby/er-ch23-metaprogramming-method_missing-apis.pdf
  tags: ruby language
  px:
  source: eloquent ruby (pdf)
  notes: 
    - form letters - one word at a time<br>
    - <strong>method_missing</strong and magic methods<br>
    - its the users that count<br>
    - in the wild; wrapup
  
- title: metaprogramming - monkey patching
  url: /pdfs/ruby/er-ch24-metaprogramming-monkeypatching.pdf
  tags: ruby language
  px:
  source: eloquent ruby (pdf)
  notes: 
    - classes are wide-open<br>
    - fixing a broken class<br>
    - improving classes<br>
    - <strong>alias_method</strong><br>
    - do anyting, anytime, to any class<br>
    - avoiding trouble; in the wild; wrapup
  
- title: metaprogramming - self-modifying classes
  url: /pdfs/ruby/er-ch25-metaprogramming-self-modify-classes.pdf
  tags: ruby language
  px:
  source: eloquent ruby (pdf)
  notes: 
    - open classes<br>
    - logic in classes<br>
    - class methods that change their class<br>
    - avoiding trouble; in the wild; wrapup
  
- title: metaprogramming - modifying subclasses
  url: /pdfs/ruby/er-ch26-metaprogramming-self-modify-subclasses.pdf
  tags: ruby language
  px:
  source: eloquent ruby (pdf)
  notes: 
    - a document of paragraphs<br>
    - subclassing challenges<br>
    - class methods that build instance methods<br>
    - <strong>define_method</strong><br>
    - advanced modification ideas<br>
    - avoiding trouble; in the wild; wrapup
  
- title: inventing internal DSLs
  url: /pdfs/ruby/er-ch27-building-dsls.pdf
  tags: ruby language
  px:
  source: eloquent ruby (pdf)
  notes:
    - little languages for big problems<br>
    - dealing with XML<br>
    - stepping over the line<br>
    - pulling out the stops<br>
    - in the wild - avoiding trouble - wrapup<br>
  
- title: external DSLs
  url: /pdfs/ruby/er-ch28-external-dsls.pdf
  tags: ruby language
  px:
  source: eloquent ruby (pdf)
  notes: 
    - the trouble with Ripper<br>
    - internal is not the only DSL<br>
    - regexes & parsing<br>
    - <a href="https://rubygems.org/gems/treetop/versions/1.6.11">treetop</a><br>
    - avoiding trouble; in the wild; wrapup
  
- title: rubygem package building
  url: /pdfs/ruby/er-ch29-gem-packaging.pdf
  tags: ruby language
  px:
  source: eloquent ruby (pdf)
  notes: 
    - using gems<br>
    - gem versions<br>
    - nuts & bolts<br>
    - construction<br>
    - uploading to a repository<br>
    - automation<br>
    - avoiding trouble; in the wild; wrapup
  
- title: ruby implementations (variants)
  url: /pdfs/ruby/er-ch30-ruby-implementations.pdf
  tags: ruby language
  px:
  source: eloquent ruby (pdf)
  notes: 
    - quick list of variants<br>
    - MRI<br>
    - YARV (next-gen MRI)<br>
    - JRuby<br>
    - Rubinius<br>
    - avoiding trouble; in the wild; wrapup
  
# v20220817

- title: Core classes & methods, v3.1.2
  url: https://ruby-doc.org/core-3.1.2/
  tags: ruby language
  px: https://upload.wikimedia.org/wikipedia/commons/thumb/7/73/Ruby_logo.svg/121px-Ruby_logo.svg.png
  source: ruby-doc
  notes: 

- title: Standard library v3.1.2
  url: https://ruby-doc.org/stdlib-3.1.2/
  tags: ruby language
  px: https://upload.wikimedia.org/wikipedia/commons/thumb/7/73/Ruby_logo.svg/121px-Ruby_logo.svg.png
  source: ruby-doc
  notes:
    - see <code>lib/</code> in Ruby source code, or<br>
    - <code>lib/ruby/version/</code> of an installation.

- title: metaprogramming
  url: https://akshaykhot.com/books/metaprogramming-ruby
  tags: metaprogramming
  px: https://akshaykhot.com/images/books/metaprogramming_ruby.jpeg
  source: akshaykhot
  notes: 
    - the object model<br>
    - open classes & monkeypatching<br>
    - instance variables vs instance methods<br>
    - classes are objects<br>
    - method calls<br>
    - <strong>kernel</strong> module<br>
    - <strong>self</strong> keyword<br>
    - dynamic definitions<br>
    - dynamic method calls<br>
    - <strong>method_missing</strong><br>
    - <strong>instance_eval</strong><br>
    - <strong>class_eval</strong><br>
    - singleton methods & classes<br>