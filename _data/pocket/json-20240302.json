{"status": 1, "complete": 1, "list": {"389747": {"item_id": "389747", "resolved_id": "2810939768", "given_url": "http://json.org/", "given_title": "", "favorite": "0", "status": "1", "time_added": "1638240363", "time_updated": "1639700296", "time_read": "1639700296", "time_favorited": "0", "sort_id": 0, "resolved_title": "Introducing JSON", "resolved_url": "https://www.json.org/json-en.html", "excerpt": "JSON (JavaScript Object Notation) is a lightweight data-interchange format. It is easy for humans to read and write. It is easy for machines to parse and generate. It is based on a subset of the JavaScript Programming Language Standard ECMA-262 3rd Edition - December 1999.", "is_article": "1", "is_index": "0", "has_video": "0", "has_image": "1", "word_count": "344", "lang": "en", "tags": {"json": {"item_id": "389747", "tag": "json"}}, "image": {"item_id": "389747", "src": "https://www.json.org/img/object.png", "width": "0", "height": "0"}, "images": {"1": {"item_id": "389747", "image_id": "1", "src": "https://www.json.org/img/object.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "2": {"item_id": "389747", "image_id": "2", "src": "https://www.json.org/img/array.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "3": {"item_id": "389747", "image_id": "3", "src": "https://www.json.org/img/value.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "4": {"item_id": "389747", "image_id": "4", "src": "https://www.json.org/img/string.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "5": {"item_id": "389747", "image_id": "5", "src": "https://www.json.org/img/number.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "6": {"item_id": "389747", "image_id": "6", "src": "https://www.json.org/img/whitespace.png", "width": "0", "height": "0", "credit": "", "caption": ""}}, "listen_duration_estimate": 133}, "349572158": {"item_id": "349572158", "resolved_id": "349572158", "given_url": "http://jsonapi.org/", "given_title": "", "favorite": "0", "status": "1", "time_added": "1638240363", "time_updated": "1639535530", "time_read": "1639535529", "time_favorited": "0", "sort_id": 1, "resolved_title": "JSON:API", "resolved_url": "https://jsonapi.org/", "excerpt": "If you’ve ever argued with your team about the way your JSON responses should be formatted, JSON:API can be your anti-bikeshedding tool. By following shared conventions, you can increase productivity, take advantage of generalized tooling, and focus on what matters: your application.", "is_article": "0", "is_index": "1", "has_video": "0", "has_image": "0", "word_count": "559", "lang": "", "tags": {"json": {"item_id": "349572158", "tag": "json"}}, "listen_duration_estimate": 216}, "3827358672": {"item_id": "3827358672", "resolved_id": "3827358672", "given_url": "https://dev.to/lenra/why-yaml-is-better-than-json-read-before-screaming-39m8", "given_title": "Why YAML is better than JSON (read before screaming)", "favorite": "0", "status": "1", "time_added": "1679058306", "time_updated": "1679338361", "time_read": "1679338361", "time_favorited": "0", "sort_id": 2, "resolved_title": "Why YAML is better than JSON (read before screaming)", "resolved_url": "https://dev.to/lenra/why-yaml-is-better-than-json-read-before-screaming-39m8", "excerpt": "You have probably seen or used the YAML format in configuration files. YAML (a recursive acronym for “YAML Ain’t Markup Language”) is a human-friendly data serialization language for all programming languages, like the JSON format.", "is_article": "1", "is_index": "0", "has_video": "0", "has_image": "1", "word_count": "979", "lang": "en", "time_to_read": 4, "top_image_url": "https://res.cloudinary.com/practicaldev/image/fetch/s--uLgxs3nC--/c_imagga_scale,f_auto,fl_progressive,h_500,q_auto,w_1000/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ovpe8egg6tvo41rqtp01.png", "tags": {"databases": {"item_id": "3827358672", "tag": "databases"}, "jekyll": {"item_id": "3827358672", "tag": "jekyll"}, "json": {"item_id": "3827358672", "tag": "json"}, "yaml": {"item_id": "3827358672", "tag": "yaml"}}, "image": {"item_id": "3827358672", "src": "https://res.cloudinary.com/practicaldev/image/fetch/s--YXObFEs0--/c_imagga_scale,f_auto,fl_progressive,h_420,q_auto,w_1000/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ovpe8egg6tvo41rqtp01.png", "width": "1000", "height": "420"}, "images": {"1": {"item_id": "3827358672", "image_id": "1", "src": "https://res.cloudinary.com/practicaldev/image/fetch/s--YXObFEs0--/c_imagga_scale,f_auto,fl_progressive,h_420,q_auto,w_1000/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ovpe8egg6tvo41rqtp01.png", "width": "1000", "height": "420", "credit": "", "caption": ""}}, "domain_metadata": {"name": "The Practical Dev", "logo": "https://logo.clearbit.com/dev.to?size=800", "greyscale_logo": "https://logo.clearbit.com/dev.to?size=800&greyscale=true"}, "listen_duration_estimate": 379}, "2836305894": {"item_id": "2836305894", "resolved_id": "2836305894", "given_url": "https://duckduckgo.com/?q=json+linter&t=canonical&ia=answer", "given_title": "json linter at DuckDuckGo", "favorite": "0", "status": "1", "time_added": "1577566751", "time_updated": "1608304095", "time_read": "1582143051", "time_favorited": "0", "sort_id": 3, "resolved_title": "json linter at DuckDuckGo", "resolved_url": "https://duckduckgo.com/?q=json+linter&t=canonical&ia=answer", "excerpt": "DuckDuckGo. Privacy, Simplified.", "is_article": "0", "is_index": "0", "has_video": "0", "has_image": "0", "word_count": "0", "lang": "en", "tags": {"json": {"item_id": "2836305894", "tag": "json"}}, "domain_metadata": {"name": "DuckDuckGo", "logo": "https://logo.clearbit.com/duckduckgo.com?size=800", "greyscale_logo": "https://logo.clearbit.com/duckduckgo.com?size=800&greyscale=true"}, "listen_duration_estimate": 0}, "2411726209": {"item_id": "2411726209", "resolved_id": "2411726209", "given_url": "https://genius.engineering/faster-and-simpler-with-the-command-line-deep-comparing-two-5gb-json-files-3x-faster-by-ditching-the-code/", "given_title": "", "favorite": "0", "status": "1", "time_added": "1638240363", "time_updated": "1691367343", "time_read": "1643055152", "time_favorited": "0", "sort_id": 4, "resolved_title": "Faster and simpler with the command line: deep-comparing two 5GB JSON files 3X faster by ditching the code", "resolved_url": "https://genius.engineering/faster-and-simpler-with-the-command-line-deep-comparing-two-5gb-json-files-3x-faster-by-ditching-the-code/", "excerpt": "As part of our recently announced deal with Apple Music, you can now view Genius lyrics for your favorite music within the Apple Music app. We deliver our lyrics to Apple via a nightly export of newline-delimited JSON objects.", "is_article": "1", "is_index": "0", "has_video": "0", "has_image": "0", "word_count": "1814", "lang": "en", "time_to_read": 8, "top_image_url": "https://genius.engineering/content/images/2018/12/Artboard-1.png", "tags": {"json": {"item_id": "2411726209", "tag": "json"}}, "listen_duration_estimate": 702}, "2863791776": {"item_id": "2863791776", "resolved_id": "2863791776", "given_url": "https://gist.github.com/jessefogarty/b0f2d4ea6bdd770e5e9e94d54154c751", "given_title": "", "favorite": "1", "status": "1", "time_added": "1645480192", "time_updated": "1645486231", "time_read": "1645486231", "time_favorited": "1645486213", "sort_id": 5, "resolved_title": "Simple JSON to CSV Method for Twitter Archive Data", "resolved_url": "https://gist.github.com/jessefogarty/b0f2d4ea6bdd770e5e9e94d54154c751", "excerpt": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters.", "is_article": "1", "is_index": "0", "has_video": "0", "has_image": "0", "word_count": "39", "lang": "en", "top_image_url": "https://github.githubassets.com/images/modules/gists/gist-og-image.png", "tags": {"csv": {"item_id": "2863791776", "tag": "csv"}, "json": {"item_id": "2863791776", "tag": "json"}, "twitter": {"item_id": "2863791776", "tag": "twitter"}}, "authors": {"55835546": {"item_id": "2863791776", "author_id": "55835546", "name": "262588213843476", "url": ""}}, "domain_metadata": {"name": "GitHub", "logo": "https://logo.clearbit.com/github.com?size=800", "greyscale_logo": "https://logo.clearbit.com/github.com?size=800&greyscale=true"}, "listen_duration_estimate": 15}, "2067714060": {"item_id": "2067714060", "resolved_id": "2067714060", "given_url": "https://github.com/mikefarah/yq", "given_title": "", "favorite": "0", "status": "1", "time_added": "1675547549", "time_updated": "1706833159", "time_read": "1675807753", "time_favorited": "0", "sort_id": 6, "resolved_title": "yq", "resolved_url": "https://github.com/mikefarah/yq", "excerpt": "a lightweight and portable command-line YAML processor. yq uses jq like syntax but works with yaml files as well as json. It doesn't yet support everything jq does - but it does support the most common operations and functions, and more is being added continuously.", "is_article": "1", "is_index": "1", "has_video": "0", "has_image": "1", "word_count": "938", "lang": "en", "time_to_read": 4, "top_image_url": "https://opengraph.githubassets.com/24ba7f64a1f502a77e1edd94716451a1b1715af628dac2a1a7e53dcb19db9ad7/mikefarah/yq", "tags": {"csv": {"item_id": "2067714060", "tag": "csv"}, "json": {"item_id": "2067714060", "tag": "json"}, "linux": {"item_id": "2067714060", "tag": "linux"}, "programming": {"item_id": "2067714060", "tag": "programming"}}, "authors": {"23919601": {"item_id": "2067714060", "author_id": "23919601", "name": "Tuan Hoang", "url": ""}}, "image": {"item_id": "2067714060", "src": "https://github.com/mikefarah/yq/workflows/Build/badge.svg", "width": "0", "height": "0"}, "images": {"1": {"item_id": "2067714060", "image_id": "1", "src": "https://github.com/mikefarah/yq/workflows/Build/badge.svg", "width": "0", "height": "0", "credit": "", "caption": ""}, "2": {"item_id": "2067714060", "image_id": "2", "src": "https://camo.githubusercontent.com/8b5878aaff796a87e677f801f71328cefbeb3f271667fa905985723edb0edc62/68747470733a2f2f696d672e736869656c64732e696f2f646f636b65722f70756c6c732f6d696b6566617261682f79712e737667", "width": "0", "height": "0", "credit": "", "caption": ""}, "3": {"item_id": "2067714060", "image_id": "3", "src": "https://camo.githubusercontent.com/7df9a0536eaceb68de3acf49da40d8b5af4e8f5002519415ecd52fe79a69a1ed/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f646f776e6c6f6164732f6d696b6566617261682f79712f746f74616c2e737667", "width": "0", "height": "0", "credit": "", "caption": ""}, "4": {"item_id": "2067714060", "image_id": "4", "src": "https://camo.githubusercontent.com/48d8e37115639a6bc4f8de92965f06b5c087c3e7e509d27af3b17bde59d787f8/68747470733a2f2f676f7265706f7274636172642e636f6d2f62616467652f6769746875622e636f6d2f6d696b6566617261682f7971", "width": "0", "height": "0", "credit": "", "caption": ""}, "5": {"item_id": "2067714060", "image_id": "5", "src": "https://camo.githubusercontent.com/7d1cbe70e1d4a7cff0b92d11ba4a858c66bbec7578b7ebc499c00aac7f197913/68747470733a2f2f696d672e736869656c64732e696f2f63686f636f6c617465792f762f79712e737667", "width": "0", "height": "0", "credit": "", "caption": ""}, "6": {"item_id": "2067714060", "image_id": "6", "src": "https://camo.githubusercontent.com/75136104b08a67055fa40ef9b29333b0a29387c641ccbb82be5347378601c273/68747470733a2f2f696d672e736869656c64732e696f2f63686f636f6c617465792f64742f79712e737667", "width": "0", "height": "0", "credit": "", "caption": ""}}, "domain_metadata": {"name": "GitHub", "logo": "https://logo.clearbit.com/github.com?size=800", "greyscale_logo": "https://logo.clearbit.com/github.com?size=800&greyscale=true"}, "listen_duration_estimate": 363}, "3510309562": {"item_id": "3510309562", "resolved_id": "3510309562", "given_url": "https://github.com/wader/fq", "given_title": "wader/fq: jq for binary formats", "favorite": "0", "status": "1", "time_added": "1640567199", "time_updated": "1706833159", "time_read": "1640623194", "time_favorited": "0", "sort_id": 7, "resolved_title": "wader/fq", "resolved_url": "https://github.com/wader/fq", "excerpt": "Tool, language and decoders for working with binary data. Basic usage is fq . file or fq d file.", "is_article": "1", "is_index": "1", "has_video": "0", "has_image": "1", "word_count": "1145", "lang": "en", "time_to_read": 5, "top_image_url": "https://repository-images.githubusercontent.com/336895436/f606ea6d-35b2-4f4c-a14c-c171cd27ccf7", "tags": {"json": {"item_id": "3510309562", "tag": "json"}, "linux": {"item_id": "3510309562", "tag": "linux"}, "programming": {"item_id": "3510309562", "tag": "programming"}}, "authors": {"179403546": {"item_id": "3510309562", "author_id": "179403546", "name": "wader", "url": "https://github.com/wader/fq/commits?author=wader"}}, "image": {"item_id": "3510309562", "src": "https://github.com/wader/fq/raw/master/doc/demo.svg", "width": "0", "height": "0"}, "images": {"1": {"item_id": "3510309562", "image_id": "1", "src": "https://github.com/wader/fq/raw/master/doc/demo.svg", "width": "0", "height": "0", "credit": "", "caption": ""}}, "domain_metadata": {"name": "GitHub", "logo": "https://logo.clearbit.com/github.com?size=800", "greyscale_logo": "https://logo.clearbit.com/github.com?size=800&greyscale=true"}, "listen_duration_estimate": 443}, "6188724": {"item_id": "6188724", "resolved_id": "6188724", "given_url": "https://jsonformatter.curiousconcept.com/", "given_title": "JSON Formatter & Validator", "favorite": "0", "status": "1", "time_added": "1583411876", "time_updated": "1706833159", "time_read": "1583428038", "time_favorited": "0", "sort_id": 8, "resolved_title": "", "resolved_url": "https://jsonformatter.curiousconcept.com/", "excerpt": "", "is_article": "0", "is_index": "0", "has_video": "0", "has_image": "0", "word_count": "0", "lang": "en", "tags": {"json": {"item_id": "6188724", "tag": "json"}, "programming": {"item_id": "6188724", "tag": "programming"}}, "listen_duration_estimate": 0}, "1941526": {"item_id": "1941526", "resolved_id": "1941526", "given_url": "https://jsonlint.com/", "given_title": "", "favorite": "0", "status": "1", "time_added": "1638240363", "time_updated": "1639700327", "time_read": "1639700328", "time_favorited": "0", "sort_id": 9, "resolved_title": "- The JSON Validator", "resolved_url": "https://jsonlint.com", "excerpt": "JSONLint is a validator and reformatter for JSON, a lightweight data-interchange format. Copy and paste, directly type, or input a URL in the editor above and let JSONLint tidy and validate your messy JSON code.", "is_article": "0", "is_index": "1", "has_video": "0", "has_image": "0", "word_count": "895", "lang": "", "top_image_url": "https://jsonlint.com/icons/icon-hires.png", "tags": {"json": {"item_id": "1941526", "tag": "json"}}, "listen_duration_estimate": 346}, "2226775674": {"item_id": "2226775674", "resolved_id": "1941526", "given_url": "https://jsonlint.com/?json=", "given_title": "JSONLint - The JSON Validator", "favorite": "0", "status": "1", "time_added": "1583412960", "time_updated": "1706833159", "time_read": "1583428035", "time_favorited": "0", "sort_id": 10, "resolved_title": "- The JSON Validator", "resolved_url": "https://jsonlint.com", "excerpt": "JSONLint is a validator and reformatter for JSON, a lightweight data-interchange format. Copy and paste, directly type, or input a URL in the editor above and let JSONLint tidy and validate your messy JSON code.", "is_article": "0", "is_index": "1", "has_video": "0", "has_image": "0", "word_count": "895", "lang": "", "top_image_url": "https://jsonlint.com/icons/icon-hires.png", "tags": {"json": {"item_id": "2226775674", "tag": "json"}, "programming": {"item_id": "2226775674", "tag": "programming"}}, "listen_duration_estimate": 346}, "2751170692": {"item_id": "2751170692", "resolved_id": "2751170692", "given_url": "https://morepypy.blogspot.com/2019/10/pypys-new-json-parser.html", "given_title": "PyPy's New JSON Parser", "favorite": "0", "status": "1", "time_added": "1570541754", "time_updated": "1608338010", "time_read": "1570658530", "time_favorited": "0", "sort_id": 11, "resolved_title": "PyPy's new JSON parser", "resolved_url": "https://morepypy.blogspot.com/2019/10/pypys-new-json-parser.html", "excerpt": "Introduction In the last year or two I have worked on and off on making PyPy's JSON faster, particularly when parsing large JSON files. In this post I am going to document those techniques and measure their performance impact.", "is_article": "1", "is_index": "0", "has_video": "0", "has_image": "1", "word_count": "3141", "lang": "en", "time_to_read": 14, "top_image_url": "https://2.bp.blogspot.com/-Jv_p8rFIq8Y/XZubp3WVptI/AAAAAAAAwuY/rhTCqXJpoMUdtEf22tzqK64dcEJmBE6fwCPcBGAYYCw/w1200-h630-p-k-no-nu/2019_json_nytimes.png", "tags": {"json": {"item_id": "2751170692", "tag": "json"}, "python": {"item_id": "2751170692", "tag": "python"}}, "authors": {"82248049": {"item_id": "2751170692", "author_id": "82248049", "name": "Carl Friedrich Bolz-Tereick", "url": ""}}, "image": {"item_id": "2751170692", "src": "https://2.bp.blogspot.com/-Jv_p8rFIq8Y/XZubp3WVptI/AAAAAAAAwuY/rhTCqXJpoMUdtEf22tzqK64dcEJmBE6fwCPcBGAYYCw/s1600/2019_json_nytimes.png", "width": "400", "height": "310"}, "images": {"1": {"item_id": "2751170692", "image_id": "1", "src": "https://2.bp.blogspot.com/-Jv_p8rFIq8Y/XZubp3WVptI/AAAAAAAAwuY/rhTCqXJpoMUdtEf22tzqK64dcEJmBE6fwCPcBGAYYCw/s1600/2019_json_nytimes.png", "width": "400", "height": "310", "credit": "", "caption": ""}, "2": {"item_id": "2751170692", "image_id": "2", "src": "https://docs.google.com/uc?id=1oqsebLsZH8pj4exAVbDthaRhERXqg8mN", "width": "800", "height": "0", "credit": "", "caption": ""}, "3": {"item_id": "2751170692", "image_id": "3", "src": "https://docs.google.com/uc?id=1_3UuTihT0A6wfM-F3sj8j9M9IoQuvcCt", "width": "800", "height": "0", "credit": "", "caption": ""}, "4": {"item_id": "2751170692", "image_id": "4", "src": "https://docs.google.com/uc?id=1Q-aFNXE-sWJi5kSKTwmQNLz5LI3DDgtm", "width": "800", "height": "0", "credit": "", "caption": ""}, "5": {"item_id": "2751170692", "image_id": "5", "src": "https://docs.google.com/uc?id=1sgGyqp93_czrxN4IYkXeZ-jFWCAs37bu", "width": "800", "height": "0", "credit": "", "caption": ""}}, "listen_duration_estimate": 1216}, "2920850690": {"item_id": "2920850690", "resolved_id": "2920850690", "given_url": "https://mosermichael.github.io/jq-illustrated/dir/content.html", "given_title": "", "favorite": "0", "status": "1", "time_added": "1638240363", "time_updated": "1691367343", "time_read": "1642372919", "time_favorited": "0", "sort_id": 12, "resolved_title": "", "resolved_url": "https://mosermichael.github.io/jq-illustrated/dir/content.html", "excerpt": "Illustrated jq tutorial The concept of pipes Unix pipelines were invented in 1973 by Douglas McIlroy as a novel way of stringing together programs, where the output of one program is the input of the next one; It's a way of creating a new program out of combining basic building blocks, McIlroy descr", "is_article": "0", "is_index": "0", "has_video": "0", "has_image": "0", "word_count": "835", "lang": "", "tags": {"json": {"item_id": "2920850690", "tag": "json"}}, "listen_duration_estimate": 323}, "1372529496": {"item_id": "1372529496", "resolved_id": "1372529496", "given_url": "https://shapeshed.com/jq-json/", "given_title": "JSON on the Command Line with Jq", "favorite": "0", "status": "1", "time_added": "1577043654", "time_updated": "1691367343", "time_read": "1577120201", "time_favorited": "0", "sort_id": 13, "resolved_title": "JSON on the command line with jq", "resolved_url": "https://shapeshed.com/jq-json/", "excerpt": "jq is a fantastic command-line JSON processor. It plays nice with UNIX pipes and offers extensive functionality for interrogating, manipulating and working with JSON file.", "is_article": "0", "is_index": "0", "has_video": "0", "has_image": "1", "word_count": "661", "lang": "", "top_image_url": "https://shapeshed.com/images/articles/jq.png", "tags": {"json": {"item_id": "1372529496", "tag": "json"}}, "authors": {"1453491": {"item_id": "1372529496", "author_id": "1453491", "name": "George Ornbo", "url": ""}}, "image": {"item_id": "1372529496", "src": "https://shapeshed.com/images/articles/jq.png", "width": "0", "height": "0"}, "images": {"1": {"item_id": "1372529496", "image_id": "1", "src": "https://shapeshed.com/images/articles/jq.png", "width": "0", "height": "0", "credit": "", "caption": ""}}, "listen_duration_estimate": 256}, "2750014045": {"item_id": "2750014045", "resolved_id": "2679064195", "given_url": "https://sheet.best/?utm_source=UX+Links&utm_campaign=46a54ba0c4-UX_Collective&utm_medium=email&utm_term=0_44948c461b-46a54ba0c4-106101433", "given_title": "", "favorite": "0", "status": "1", "time_added": "1570450611", "time_updated": "1608338139", "time_read": "1577120468", "time_favorited": "0", "sort_id": 14, "resolved_title": "Turn your google sheets into a REST API", "resolved_url": "https://sheet.best", "excerpt": "Sheet.best turns spreadsheets into REST APIs. Connect a gsheet or a csv to anything. Builds applications faster without worrying about a backend. Start now and see the possibilities. Turn your spreadsheet into an API in less than 30 seconds and use it anywhere.", "is_article": "0", "is_index": "1", "has_video": "0", "has_image": "0", "word_count": "348", "lang": "", "top_image_url": "https://sheet.best", "tags": {"json": {"item_id": "2750014045", "tag": "json"}}, "listen_duration_estimate": 135}, "3666152570": {"item_id": "3666152570", "resolved_id": "3666152570", "given_url": "https://www.cyberciti.biz/faq/how-to-convert-json-to-csv-using-linux-unix-shell/?utm_source=pocket_mylist", "given_title": "How to convert JSON to CSV using Linux / Unix shell - nixCraft", "favorite": "0", "status": "1", "time_added": "1658517150", "time_updated": "1706833159", "time_read": "1658517179", "time_favorited": "0", "sort_id": 15, "resolved_title": "", "resolved_url": "https://www.cyberciti.biz/faq/how-to-convert-json-to-csv-using-linux-unix-shell/?utm_source=pocket_mylist", "excerpt": "", "is_article": "0", "is_index": "0", "has_video": "0", "has_image": "0", "word_count": "0", "lang": "", "tags": {"csv": {"item_id": "3666152570", "tag": "csv"}, "json": {"item_id": "3666152570", "tag": "json"}, "linux": {"item_id": "3666152570", "tag": "linux"}, "programming": {"item_id": "3666152570", "tag": "programming"}}, "listen_duration_estimate": 0}, "3426664338": {"item_id": "3426664338", "resolved_id": "3426664338", "given_url": "https://www.cyberciti.biz/open-source/command-line-hacks/using-htmlq-to-extract-content-from-html-files-on-linux-unix/", "given_title": "How to use htmlq to extract content from HTML files on Linux, macOS or Free", "favorite": "0", "status": "1", "time_added": "1631106457", "time_updated": "1706833159", "time_read": "1631106954", "time_favorited": "0", "sort_id": 16, "resolved_title": "", "resolved_url": "https://www.cyberciti.biz/open-source/command-line-hacks/using-htmlq-to-extract-content-from-html-files-on-linux-unix/", "excerpt": "", "is_article": "0", "is_index": "0", "has_video": "0", "has_image": "0", "word_count": "0", "lang": "", "tags": {"json": {"item_id": "3426664338", "tag": "json"}, "linux": {"item_id": "3426664338", "tag": "linux"}, "programming": {"item_id": "3426664338", "tag": "programming"}, "webdev": {"item_id": "3426664338", "tag": "webdev"}}, "listen_duration_estimate": 0}, "3845227": {"item_id": "3845227", "resolved_id": "3845227", "given_url": "https://www.json.com/", "given_title": "", "favorite": "0", "status": "1", "time_added": "1638240363", "time_updated": "1639535514", "time_read": "1639535514", "time_favorited": "0", "sort_id": 17, "resolved_title": "Home", "resolved_url": "https://json.com/", "excerpt": "JSON.com has existed on the Web since 2006. It’s changed hands a number of time looking for a sustainable home. BigBlueHat has most recently offered to curate a community via the collaborative awesome of GitHub.", "is_article": "0", "is_index": "1", "has_video": "0", "has_image": "0", "word_count": "1458", "lang": "", "tags": {"json": {"item_id": "3845227", "tag": "json"}}, "listen_duration_estimate": 564}, "4002638570": {"item_id": "4002638570", "resolved_id": "4002520943", "given_url": "https://www.kdnuggets.com/converting-jsons-to-pandas-dataframes-parsing-them-the-right-way?fbclid=IwAR3qZQqd4097kaNQovLB551ydGCLPGViw0RGaudPSG-pnu5qxDLz5Jw6ovo", "given_title": "Converting JSONs to Pandas DataFrames: Parsing Them the Right Way", "favorite": "0", "status": "1", "time_added": "1706899511", "time_updated": "1706928824", "time_read": "1706928824", "time_favorited": "0", "sort_id": 18, "resolved_title": "Converting JSONs to Pandas DataFrames: Parsing Them the Right Way", "resolved_url": "https://www.kdnuggets.com/converting-jsons-to-pandas-dataframes-parsing-them-the-right-way", "excerpt": "Diving into the world of data science and machine learning, one of the fundamental skills you'll encounter is the art of reading data.", "is_article": "1", "is_index": "0", "has_video": "0", "has_image": "1", "word_count": "928", "lang": "en", "time_to_read": 4, "top_image_url": "https://www.kdnuggets.com/wp-content/uploads/ferrer_converting_jsons_pandas_dataframes_parsing_right_way_51.png", "tags": {"json": {"item_id": "4002638570", "tag": "json"}, "pandas": {"item_id": "4002638570", "tag": "pandas"}}, "authors": {"180550859": {"item_id": "4002638570", "author_id": "180550859", "name": "Josep Ferrer", "url": "https://www.kdnuggets.com/author/josep-ferrer"}}, "image": {"item_id": "4002638570", "src": "https://www.kdnuggets.com/wp-content/uploads/ferrer_converting_jsons_pandas_dataframes_parsing_right_way_51.png", "width": "100", "height": "0"}, "images": {"1": {"item_id": "4002638570", "image_id": "1", "src": "https://www.kdnuggets.com/wp-content/uploads/ferrer_converting_jsons_pandas_dataframes_parsing_right_way_51.png", "width": "100", "height": "0", "credit": "", "caption": ""}, "2": {"item_id": "4002638570", "image_id": "2", "src": "https://www.kdnuggets.com/wp-content/uploads/ferrer_converting_jsons_pandas_dataframes_parsing_right_way_2.png", "width": "100", "height": "0", "credit": "", "caption": ""}, "3": {"item_id": "4002638570", "image_id": "3", "src": "https://www.kdnuggets.com/wp-content/uploads/ferrer_converting_jsons_pandas_dataframes_parsing_right_way_4.png", "width": "60", "height": "0", "credit": "", "caption": ""}, "4": {"item_id": "4002638570", "image_id": "4", "src": "https://www.kdnuggets.com/wp-content/uploads/ferrer_converting_jsons_pandas_dataframes_parsing_right_way_1.png", "width": "100", "height": "0", "credit": "", "caption": ""}, "5": {"item_id": "4002638570", "image_id": "5", "src": "https://www.kdnuggets.com/wp-content/uploads/ferrer_converting_jsons_pandas_dataframes_parsing_right_way_6.png", "width": "100", "height": "0", "credit": "", "caption": ""}, "6": {"item_id": "4002638570", "image_id": "6", "src": "https://www.kdnuggets.com/wp-content/uploads/ferrer_converting_jsons_pandas_dataframes_parsing_right_way_3.png", "width": "100", "height": "0", "credit": "", "caption": ""}}, "domain_metadata": {"name": "KDnuggets", "logo": "https://logo.clearbit.com/kdnuggets.com?size=800", "greyscale_logo": "https://logo.clearbit.com/kdnuggets.com?size=800&greyscale=true"}, "listen_duration_estimate": 359}, "2524148620": {"item_id": "2524148620", "resolved_id": "2524148620", "given_url": "https://www.ostechnix.com/how-to-parse-and-pretty-print-json-with-linux-commandline-tools/", "given_title": "How To Parse And Pretty Print JSON With Linux Commandline Tools", "favorite": "0", "status": "1", "time_added": "1583402090", "time_updated": "1608259173", "time_read": "1583428045", "time_favorited": "0", "sort_id": 19, "resolved_title": "How To Parse And Pretty Print JSON With Linux Commandline Tools", "resolved_url": "https://ostechnix.com/how-to-parse-and-pretty-print-json-with-linux-commandline-tools/", "excerpt": "JSON is a lightweight and language independent data storage format, easy to integrate with most programming languages and also easy to understand by humans, of course when properly formatted.", "is_article": "1", "is_index": "0", "has_video": "0", "has_image": "0", "word_count": "1046", "lang": "en", "time_to_read": 5, "top_image_url": "https://ostechnix.com/wp-content/uploads/2019/03/json.png", "tags": {"json": {"item_id": "2524148620", "tag": "json"}, "linux": {"item_id": "2524148620", "tag": "linux"}}, "authors": {"140838999": {"item_id": "2524148620", "author_id": "140838999", "name": "editor", "url": "https://ostechnix.com/author/editor/"}}, "listen_duration_estimate": 405}}, "error": nil, "search_meta": {"search_type": "normal"}, "since": 1709419394}