{"status": 1, "complete": 1, "list": {"3633526483": {"item_id": "3633526483", "resolved_id": "3624320488", "given_url": "https://blog.tensorflow.org/2022/05/real-time-sku-detection-in-browser.html?linkId=8068696&m=1", "given_title": "", "favorite": "0", "status": "1", "time_added": "1654427426", "time_updated": "1654616408", "time_read": "1654616408", "time_favorited": "0", "sort_id": 0, "resolved_title": "Real-time SKU detection in the browser using TensorFlow.js", "resolved_url": "https://blog.tensorflow.org/2022/05/real-time-sku-detection-in-browser.html", "excerpt": "Last year, I published an article on how to train custom object detection in the browser using TensorFlow.js. This received lots of interest from developers from all over the world who tried to apply the solution to their personal or business projects.", "is_article": "1", "is_index": "0", "has_video": "0", "has_image": "1", "word_count": "2361", "lang": "en", "time_to_read": 11, "top_image_url": "https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiXJKi_ujdUUveIPpH2BeriYxl3K7TzTUfsocSRD1xKulteBDQZkZYmQBB1z_yW4C6orHg825mRAhFCJTEuOrtHjpMFpVUVcBUCQ33OYwkmPRDKdTs9oH4RBHrb2Ay9p_j3bDhsIfjwzukA1Sr-uT0uSXA_kpXnJSi62XSi0bHPDsaPMlQZZyGReTiB/w1200-h630-p-k-no-nu/image7.png", "tags": {"image-classification": {"item_id": "3633526483", "tag": "image-classification"}, "javascript": {"item_id": "3633526483", "tag": "javascript"}, "tensorflow": {"item_id": "3633526483", "tag": "tensorflow"}}, "authors": {"167898416": {"item_id": "3633526483", "author_id": "167898416", "name": "Hugo Zanini", "url": "https://www.linkedin.com/in/hugozanini/?locale=en_US"}}, "image": {"item_id": "3633526483", "src": "https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhsTYleef2QUeRdcScNczV1XV50dtvAvS3M9jh47bAwfMEG0zJIOt0VJvlteFAaoPvA7D2U21L1zxmo_41WG6QVf46l4hnIsbCPn63EWCw4Dp_qSTEL2O9FIUOzPMElANPmlkMFd64ZFzD7eOrtkDqpu8_-CM4R5OM-v8VPtd9606_i1dzTjjD8NvSC/s1600/image3.png", "width": "0", "height": "0"}, "images": {"1": {"item_id": "3633526483", "image_id": "1", "src": "https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhsTYleef2QUeRdcScNczV1XV50dtvAvS3M9jh47bAwfMEG0zJIOt0VJvlteFAaoPvA7D2U21L1zxmo_41WG6QVf46l4hnIsbCPn63EWCw4Dp_qSTEL2O9FIUOzPMElANPmlkMFd64ZFzD7eOrtkDqpu8_-CM4R5OM-v8VPtd9606_i1dzTjjD8NvSC/s1600/image3.png", "width": "0", "height": "0", "credit": "", "caption": "Object Detection Model Production Pipeline"}, "2": {"item_id": "3633526483", "image_id": "2", "src": "https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEi4k_zpucjpl8y6HA_I4lB-wH41VY_Eg9awRHYD9kZCE7sPDJpAareh0sOhzi0Mbaeae1cxSK2vuR_zn3ZAHrat0_r5Dk3ttFUXIPoBopVPJCefHsj_3DyhVqsBM4F9aCvAauEjwfQ9s_aG0asu8k9JGCZf4D6W6DlgKAIbLAjCgZgVLnLRZutj8etf/s1600/image9.png", "width": "0", "height": "0", "credit": "", "caption": "Total training loss"}, "3": {"item_id": "3633526483", "image_id": "3", "src": "https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhIuzWSK8B52q9FIJJ0ARUu4Y--esT101VSCIkUEg9JMTm5H0zy1r9PmkOkLTHl9ve-3DWWKa09876MB0TGYkzJXgRGMpSgriZZmOivA7fK4FJ7z_hXkEsiMkiGJBSgpfrD-MYBUlowijEKqECWHUEKxGxon9JDwqIllWlFuOD0qbEwBrblrnWDuToP/s1600/image8.png", "width": "0", "height": "0", "credit": "", "caption": "Main evaluation metrics"}, "4": {"item_id": "3633526483", "image_id": "4", "src": "https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjMqCki32tUqEILujT0zrG-28wt9CxxQP1IQBwpWYi0hAQfix9TLFHcz9otuK_-kFn1KZbx068Z44cNtzfZ0zr-N6gev0SHhpQbDLt-PE5LeIInTphf9KN1FPPMUaTa14uRREpwhFJQuwy6mZd9oS7ZC5YT2yjrHGTTotKVt5vx6vJ0uGuFQtM9zdt9/s1600/image10.png", "width": "0", "height": "0", "credit": "Full resolution image here", "caption": "Model conversion using TensorFlow.js Converter"}}, "listen_duration_estimate": 914}, "2475064074": {"item_id": "2475064074", "resolved_id": "2475064074", "given_url": "https://paperswithcode.com/task/image-classification", "given_title": "Browse the State-of-the-Art in Machine Learning | Papers With Code", "favorite": "0", "status": "1", "time_added": "1608572392", "time_updated": "1638708525", "time_read": "1608572406", "time_favorited": "0", "sort_id": 1, "resolved_title": "Image Classification", "resolved_url": "https://paperswithcode.com/task/image-classification", "excerpt": "Image Classification is a fundamental task that attempts to comprehend an entire image as a whole. The goal is to classify the image by assigning it to a specific label. Typically, Image Classification refers to images in which only one object appears and is analyzed.", "is_article": "1", "is_index": "0", "has_video": "0", "has_image": "0", "word_count": "79", "lang": "en", "top_image_url": "https://production-media.paperswithcode.com/tasks/1fTQtXyApxWPoW2vzSEk_Pw_t41Ubes.png", "tags": {"deep-learning": {"item_id": "2475064074", "tag": "deep-learning"}, "image-classification": {"item_id": "2475064074", "tag": "image-classification"}}, "listen_duration_estimate": 31}, "3646292274": {"item_id": "3646292274", "resolved_id": "3646292300", "given_url": "https://towardsdatascience.com/how-to-build-an-image-captioning-model-in-pytorch-29b9d8fe2f8c?source=rss----7f60cf5620c9---4", "given_title": "How to Build an Image-Captioning Model in Pytorch", "favorite": "0", "status": "1", "time_added": "1656013225", "time_updated": "1656013465", "time_read": "1656013465", "time_favorited": "0", "sort_id": 2, "resolved_title": "How to Build an Image-Captioning Model in Pytorch", "resolved_url": "https://towardsdatascience.com/how-to-build-an-image-captioning-model-in-pytorch-29b9d8fe2f8c", "excerpt": "In this article, I will explain how you can build an image captioning model architecture using the Pytorch deep learning library. In addition to explaining the intuition behind the model architectures, I will also provide the Pytorch code for the models.", "is_article": "1", "is_index": "0", "has_video": "0", "has_image": "1", "word_count": "1636", "lang": "en", "time_to_read": 7, "top_image_url": "https://miro.medium.com/max/1200/0*9chjZxFWwGxc0gDh", "tags": {"deep-learning": {"item_id": "3646292274", "tag": "deep-learning"}, "image-classification": {"item_id": "3646292274", "tag": "image-classification"}, "pytorch": {"item_id": "3646292274", "tag": "pytorch"}}, "authors": {"145605341": {"item_id": "3646292274", "author_id": "145605341", "name": "Saketh Kotamraju", "url": "https://medium.com/@saketh.kotamraju"}}, "image": {"item_id": "3646292274", "src": "https://miro.medium.com/max/1400/0*9chjZxFWwGxc0gDh", "width": "700", "height": "1050"}, "images": {"1": {"item_id": "3646292274", "image_id": "1", "src": "https://miro.medium.com/max/1400/0*9chjZxFWwGxc0gDh", "width": "700", "height": "1050", "credit": "Adam Dutton on Unsplash", "caption": ""}, "2": {"item_id": "3646292274", "image_id": "2", "src": "https://miro.medium.com/max/1400/0*HxBDFFqwpjShEnyb", "width": "700", "height": "467", "credit": "LyAn Voyages on Unsplash", "caption": ""}, "3": {"item_id": "3646292274", "image_id": "3", "src": "https://miro.medium.com/max/1248/1*MqsV98FA4XA99QFs7BXldg.jpeg", "width": "624", "height": "219", "credit": "", "caption": "Image by Author"}}, "domain_metadata": {"name": "Towards Data Science", "logo": "https://logo.clearbit.com/towardsdatascience.com?size=800", "greyscale_logo": "https://logo.clearbit.com/towardsdatascience.com?size=800&greyscale=true"}, "listen_duration_estimate": 633}, "2396187448": {"item_id": "2396187448", "resolved_id": "2396187448", "given_url": "https://dev.to/rosejcday/learning-the-differences-between-softmax-and-sigmoid-for-image-classification--59c", "given_title": "Learning the Differences between Softmax and Sigmoid for Image Classificati", "favorite": "0", "status": "1", "time_added": "1542898968", "time_updated": "1673901884", "time_read": "1567133190", "time_favorited": "0", "sort_id": 3, "resolved_title": "Learning the Differences between Softmax and Sigmoid for Image Classification", "resolved_url": "https://dev.to/rosejcday/learning-the-differences-between-softmax-and-sigmoid-for-image-classification--59c", "excerpt": "Happy second week of the #100DaysofCode challenge and Happy Thanksgiving, check out week one where I discussed parsing CSV rows into separate text files.", "is_article": "1", "is_index": "0", "has_video": "0", "has_image": "1", "word_count": "732", "lang": "en", "time_to_read": 3, "top_image_url": "https://res.cloudinary.com/practicaldev/image/fetch/s--WfZlM2pz--/c_imagga_scale,f_auto,fl_progressive,h_500,q_auto,w_1000/https://images6.alphacoders.com/368/368992.jpg", "tags": {"activations": {"item_id": "2396187448", "tag": "activations"}, "deep-learning": {"item_id": "2396187448", "tag": "deep-learning"}, "image-classification": {"item_id": "2396187448", "tag": "image-classification"}}, "authors": {"2638393": {"item_id": "2396187448", "author_id": "2638393", "name": "work", "url": ""}, "3260078": {"item_id": "2396187448", "author_id": "3260078", "name": "Follow", "url": ""}, "3359946": {"item_id": "2396187448", "author_id": "3359946", "name": "Education", "url": ""}, "3607719": {"item_id": "2396187448", "author_id": "3607719", "name": "Rose Day", "url": ""}, "9646810": {"item_id": "2396187448", "author_id": "9646810", "name": "Joined", "url": ""}, "149114589": {"item_id": "2396187448", "author_id": "149114589", "name": "・4 min read", "url": ""}, "152303384": {"item_id": "2396187448", "author_id": "152303384", "name": "Mar 7, 2018", "url": ""}, "152376551": {"item_id": "2396187448", "author_id": "152376551", "name": "Nov 22, 2018", "url": ""}, "152517871": {"item_id": "2396187448", "author_id": "152517871", "name": "Senior Engineer in Applied Data Science", "url": ""}, "152517872": {"item_id": "2396187448", "author_id": "152517872", "name": "MS in Data Science, BS in Computer Engineering", "url": ""}, "155660373": {"item_id": "2396187448", "author_id": "155660373", "name": "Love working on data science, software engineering and documentation. My interests include IoT, gree", "url": ""}}, "image": {"item_id": "2396187448", "src": "https://res.cloudinary.com/practicaldev/image/fetch/s--xNpTNR1i--/c_imagga_scale,f_auto,fl_progressive,h_420,q_auto,w_1000/https://images6.alphacoders.com/368/368992.jpg", "width": "1000", "height": "420"}, "images": {"1": {"item_id": "2396187448", "image_id": "1", "src": "https://res.cloudinary.com/practicaldev/image/fetch/s--xNpTNR1i--/c_imagga_scale,f_auto,fl_progressive,h_420,q_auto,w_1000/https://images6.alphacoders.com/368/368992.jpg", "width": "1000", "height": "420", "credit": "", "caption": ""}, "2": {"item_id": "2396187448", "image_id": "2", "src": "https://res.cloudinary.com/practicaldev/image/fetch/s--axbIW3Ez--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://latex.codecogs.com/svg.latex%3F%255CLarge%26space%3By%255E%257B%28i%29%257D%2520%255Cin%2520%255Cleft%2520%255C%257B%2520%25201%2C%2520...%2520k%2520%255Cright%2520%255C%257D", "width": "0", "height": "0", "credit": "", "caption": ""}}, "domain_metadata": {"name": "The Practical Dev", "logo": "https://logo.clearbit.com/dev.to?size=800", "greyscale_logo": "https://logo.clearbit.com/dev.to?size=800&greyscale=true"}, "listen_duration_estimate": 283}, "2179807346": {"item_id": "2179807346", "resolved_id": "2178841574", "given_url": "https://www.pyimagesearch.com/2018/05/07/multi-label-classification-with-keras/?__s=ttpjwjuwzwekhqhqdrsq", "given_title": "Multi-label classification with Keras - PyImageSearch", "favorite": "0", "status": "1", "time_added": "1525775507", "time_updated": "1609554670", "time_read": "1526093730", "time_favorited": "0", "sort_id": 4, "resolved_title": "Multi-label classification with Keras", "resolved_url": "https://www.pyimagesearch.com/2018/05/07/multi-label-classification-with-keras/", "excerpt": "Today’s blog post on multi-label classification with Keras was inspired from an email I received last week from PyImageSearch reader, Switaj. Hi Adrian, thanks for the PyImageSearch blog and sharing your knowledge each week.", "is_article": "1", "is_index": "0", "has_video": "0", "has_image": "1", "word_count": "5644", "lang": "en", "time_to_read": 26, "top_image_url": "https://www.pyimagesearch.com/wp-content/uploads/2018/04/keras_multi_label_output_01.png", "tags": {"image-classification": {"item_id": "2179807346", "tag": "image-classification"}, "images": {"item_id": "2179807346", "tag": "images"}}, "authors": {"76030979": {"item_id": "2179807346", "author_id": "76030979", "name": "Adrian Rosebrock", "url": "https://www.pyimagesearch.com/author/adrian/"}}, "image": {"item_id": "2179807346", "src": "https://pyimagesearch.com/wp-content/uploads/2018/05/keras_multi_label_animation.gif", "width": "450", "height": "507"}, "images": {"1": {"item_id": "2179807346", "image_id": "1", "src": "https://pyimagesearch.com/wp-content/uploads/2018/05/keras_multi_label_animation.gif", "width": "450", "height": "507", "credit": "", "caption": ""}, "2": {"item_id": "2179807346", "image_id": "2", "src": "https://www.pyimagesearch.com/wp-content/uploads/2020/01/source-code-icon.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "3": {"item_id": "2179807346", "image_id": "3", "src": "https://pyimagesearch.com/wp-content/uploads/2018/04/keras_multi_label_dataset.jpg", "width": "600", "height": "352", "credit": "", "caption": "Figure 1: A montage of a multi-class deep learning dataset. We’ll be using Keras to train a multi-label classifier to predict both the color and the type of clothing."}, "4": {"item_id": "2179807346", "image_id": "4", "src": "https://pyimagesearch.com/wp-content/uploads/2018/04/cnn_keras_smallervggnet.png", "width": "600", "height": "504", "credit": "", "caption": "Figure 2: A VGGNet-like network that I’ve dubbed “SmallerVGGNet” will be used for training a multi-label deep learning classifier with Keras."}, "5": {"item_id": "2179807346", "image_id": "5", "src": "https://www.pyimagesearch.com/wp-content/uploads/2018/05/keras_multi_label_plot.png", "width": "600", "height": "450", "credit": "", "caption": "Figure 3: Our Keras deep learning multi-label classification accuracy/loss graph on the training and validation data."}, "6": {"item_id": "2179807346", "image_id": "6", "src": "https://pyimagesearch.com/wp-content/uploads/2018/04/keras_multi_label_output_01.png", "width": "308", "height": "450", "credit": "", "caption": "Figure 4: The image of a red dress has correctly been classified as “red” and “dress” by our Keras multi-label classification deep learning script."}, "7": {"item_id": "2179807346", "image_id": "7", "src": "https://pyimagesearch.com/wp-content/uploads/2018/04/keras_multi_label_output_02.png", "width": "308", "height": "450", "credit": "", "caption": "Figure 5: The “blue” and “dress” class labels are correctly applied in our second test of our Keras multi-label image classification project."}, "8": {"item_id": "2179807346", "image_id": "8", "src": "https://pyimagesearch.com/wp-content/uploads/2018/04/keras_multi_label_output_03.png", "width": "314", "height": "450", "credit": "", "caption": "Figure 6: With 100% confidence, our deep learning multi-label classification script has correctly classified this red shirt."}, "9": {"item_id": "2179807346", "image_id": "9", "src": "https://pyimagesearch.com/wp-content/uploads/2018/04/keras_multi_label_output_04.png", "width": "400", "height": "450", "credit": "", "caption": "Figure 7: Deep learning + multi-label + Keras classification of a blue shirt is correctly calculated."}, "10": {"item_id": "2179807346", "image_id": "10", "src": "https://pyimagesearch.com/wp-content/uploads/2018/04/keras_multi_label_output_05.png", "width": "313", "height": "450", "credit": "", "caption": "Figure 8: This deep learning multi-label classification result proves that blue jeans can be correctly classified as both “blue” and “jeans”."}, "11": {"item_id": "2179807346", "image_id": "11", "src": "https://pyimagesearch.com/wp-content/uploads/2018/04/keras_multi_label_output_06.png", "width": "357", "height": "450", "credit": "", "caption": "Figure 9: Both labels, “jeans” and “black” are correct in this Keras multi-label classification deep learning experiment."}, "12": {"item_id": "2179807346", "image_id": "12", "src": "https://pyimagesearch.com/wp-content/uploads/2018/04/keras_multi_label_output_07.png", "width": "288", "height": "450", "credit": "", "caption": "Figure 10: What happened here? Our multi-class labels are incorrect. Color is marked as “black” but the classifier had a higher confidence that this was an image of “jeans” than a “dress”. The reason is that our neural network never saw this combination in its training data. See the “Summary” below for further explanation."}, "13": {"item_id": "2179807346", "image_id": "13", "src": "https://www.pyimagesearch.com/wp-content/uploads/2020/01/cta-source-guide-1.png", "width": "0", "height": "0", "credit": "", "caption": ""}}, "listen_duration_estimate": 2185}, "1858207521": {"item_id": "1858207521", "resolved_id": "1854171020", "given_url": "http://blog.paralleldots.com/technology/deep-learning/must-read-path-breaking-papers-about-image-classification/?utm_source=forum&utm_medium=group_post&utm_campaign=Hacker%20News%20", "given_title": "Must-read breakthrough research papers about Image Classification", "favorite": "1", "status": "1", "time_added": "1502890242", "time_updated": "1611280237", "time_read": "1502931977", "time_favorited": "1502931977", "sort_id": 5, "resolved_title": "Must-read Path-breaking Papers About Image Classification", "resolved_url": "http://blog.paralleldots.com/technology/deep-learning/must-read-path-breaking-papers-about-image-classification/", "excerpt": "Deep Learning models for Image Classification have achieved an exponential decline in error rate through last few years. Since then, Deep Learning has become prime focus area for AI research. However, Deep Learning has been around for a few decades now.", "is_article": "1", "is_index": "0", "has_video": "0", "has_image": "1", "word_count": "1510", "lang": "en", "time_to_read": 7, "top_image_url": "http://blog.paralleldots.com/wp-content/uploads/2017/08/Image-Classification-graph-2.png", "tags": {"image-classification": {"item_id": "1858207521", "tag": "image-classification"}}, "authors": {"76665727": {"item_id": "1858207521", "author_id": "76665727", "name": "Parth Srivastava", "url": "http://blog.paralleldots.com/author/parth/"}}, "image": {"item_id": "1858207521", "src": "http://blog.paralleldots.com/wp-content/uploads/2017/08/Image-Classification-VGG.png", "width": "533", "height": "293"}, "images": {"1": {"item_id": "1858207521", "image_id": "1", "src": "http://blog.paralleldots.com/wp-content/uploads/2017/08/Image-Classification-VGG.png", "width": "533", "height": "293", "credit": "", "caption": "Macro-architecture of VGG Net. Credits: Davi Fossard"}, "2": {"item_id": "1858207521", "image_id": "2", "src": "http://blog.paralleldots.com/wp-content/uploads/2017/08/Image-Classification-resnet.png", "width": "222", "height": "399", "credit": "", "caption": "A residual block in ResNet architecture."}, "3": {"item_id": "1858207521", "image_id": "3", "src": "http://blog.paralleldots.com/wp-content/uploads/2017/08/Image-Classification-resnext-1.png", "width": "597", "height": "266", "credit": "right", "caption": "A block of ResNeXt"}, "4": {"item_id": "1858207521", "image_id": "4", "src": "http://blog.paralleldots.com/wp-content/uploads/2017/08/Image-Classification-densenet.png", "width": "587", "height": "369", "credit": "", "caption": "A 5-layer dense block. Each layer takes all preceding feature-maps as input."}, "5": {"item_id": "1858207521", "image_id": "5", "src": "http://blog.paralleldots.com/wp-content/uploads/2017/08/Image-Classification-SENets.png", "width": "671", "height": "301", "credit": "", "caption": "A schematic representation of SENet model: Squeeze, Excitation and Scaling Operations"}, "6": {"item_id": "1858207521", "image_id": "6", "src": "http://blog.paralleldots.com/wp-content/uploads/2017/08/Image-Classification-AttentionNetworks.png", "width": "517", "height": "270", "credit": "", "caption": "Residual Attention Network Classification Illustration: Selected images illustrating that different features have different corresponding attention masks in Residual Attention Network. The sky mask diminishes low-level background blue color features. The balloon instance mask highlights high-level balloon bottom part features."}}, "listen_duration_estimate": 585}}, "error": nil, "search_meta": {"search_type": "normal"}, "since": 1709934680}