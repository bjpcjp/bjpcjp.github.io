{"status": 1, "complete": 1, "list": {"2754710043": {"item_id": "2754710043", "resolved_id": "2754710043", "given_url": "https://towardsdatascience.com/facebook-has-been-quietly-open-sourcing-some-amazing-deep-learning-capabilities-for-pytorch-a7ed5bc71f26", "given_title": "", "favorite": "0", "status": "1", "time_added": "1572905859", "time_updated": "1608334435", "time_read": "1576355563", "time_favorited": "0", "sort_id": 0, "resolved_title": "", "resolved_url": "https://towardsdatascience.com/facebook-has-been-quietly-open-sourcing-some-amazing-deep-learning-capabilities-for-pytorch-a7ed5bc71f26", "excerpt": "", "is_article": "0", "is_index": "0", "has_video": "0", "has_image": "0", "word_count": "0", "lang": "en", "tags": {"pytorch": {"item_id": "2754710043", "tag": "pytorch"}}, "domain_metadata": {"name": "Towards Data Science", "logo": "https://logo.clearbit.com/towardsdatascience.com?size=800", "greyscale_logo": "https://logo.clearbit.com/towardsdatascience.com?size=800&greyscale=true"}, "listen_duration_estimate": 0}, "3052306988": {"item_id": "3052306988", "resolved_id": "3052306988", "given_url": "https://medium.com/@sagnik2019/matrix-operations-using-pytorch-a-beginners-guide-d4ced61ea240", "given_title": "", "favorite": "0", "status": "1", "time_added": "1595067905", "time_updated": "1597023198", "time_read": "1597023197", "time_favorited": "0", "sort_id": 1, "resolved_title": "Matrix Operations using PyTorch- A Beginner’s Guide", "resolved_url": "https://medium.com/@sagnik2019/matrix-operations-using-pytorch-a-beginners-guide-d4ced61ea240", "excerpt": "In this blog, we will discuss a few of the most commonly used PyTorch functions used to perform different types of matrix operations. PyTorch is an open-source machine learning library.", "is_article": "1", "is_index": "0", "has_video": "0", "has_image": "1", "word_count": "726", "lang": "en", "time_to_read": 3, "top_image_url": "https://miro.medium.com/max/1200/1*0SaBxURdGLX8bnMiRwnxAQ.png", "tags": {"pytorch": {"item_id": "3052306988", "tag": "pytorch"}}, "authors": {"137168367": {"item_id": "3052306988", "author_id": "137168367", "name": "Sagnik Mukhopadhyay", "url": "https://medium.com/@sagnik2019"}}, "image": {"item_id": "3052306988", "src": "https://miro.medium.com/max/3200/1*0SaBxURdGLX8bnMiRwnxAQ.png", "width": "1600", "height": "900"}, "images": {"1": {"item_id": "3052306988", "image_id": "1", "src": "https://miro.medium.com/max/3200/1*0SaBxURdGLX8bnMiRwnxAQ.png", "width": "1600", "height": "900", "credit": "", "caption": ""}}, "domain_metadata": {"name": "Medium", "logo": "https://logo.clearbit.com/medium.com?size=800", "greyscale_logo": "https://logo.clearbit.com/medium.com?size=800&greyscale=true"}, "listen_duration_estimate": 281}, "2985686349": {"item_id": "2985686349", "resolved_id": "2985686349", "given_url": "https://www.learnopencv.com/federated-learning-using-pytorch-and-pysyft/", "given_title": "", "favorite": "0", "status": "1", "time_added": "1590429682", "time_updated": "1706624319", "time_read": "1591030054", "time_favorited": "0", "sort_id": 2, "resolved_title": "Federated Learning using PyTorch and PySyft", "resolved_url": "https://learnopencv.com/federated-learning-using-pytorch-and-pysyft/", "excerpt": "This is a a gentle introduction to federated learning — a technique that makes machine learning more secure by training on decentralized data. We will also cover a real-life example of federated learning. As the field of machine learning grows, so does the major data privacy concerns with it.", "is_article": "1", "is_index": "0", "has_video": "1", "has_image": "1", "word_count": "3572", "lang": "", "top_image_url": "https://learnopencv.com/wp-content/uploads/2017/12/favicon.png", "tags": {"federated-learning": {"item_id": "2985686349", "tag": "federated-learning"}, "machine-learning": {"item_id": "2985686349", "tag": "machine-learning"}, "pytorch": {"item_id": "2985686349", "tag": "pytorch"}}, "authors": {"157678079": {"item_id": "2985686349", "author_id": "157678079", "name": "Leave a Comment", "url": "https://learnopencv.com/federated-learning-using-pytorch-and-pysyft/#disqus_thread"}}, "image": {"item_id": "2985686349", "src": "https://learnopencv.com/wp-content/uploads/2020/05/jess-bailey-q10VITrVYUM-unsplash-1024x768.jpg", "width": "512", "height": "384"}, "images": {"1": {"item_id": "2985686349", "image_id": "1", "src": "https://learnopencv.com/wp-content/uploads/2020/05/jess-bailey-q10VITrVYUM-unsplash-1024x768.jpg", "width": "512", "height": "384", "credit": "", "caption": ""}, "2": {"item_id": "2985686349", "image_id": "2", "src": "https://learnopencv.com/wp-content/uploads/2020/05/blur-car-cellphone-contemporary-230554-1-1024x684.jpg", "width": "512", "height": "342", "credit": "", "caption": ""}, "3": {"item_id": "2985686349", "image_id": "3", "src": "https://learnopencv.com/wp-content/uploads/2020/05/PySyftArch.png", "width": "426", "height": "357", "credit": "", "caption": ""}, "4": {"item_id": "2985686349", "image_id": "4", "src": "https://learnopencv.com/wp-content/uploads/2020/05/coding-computer-data-depth-of-field-577585-1024x768.jpg", "width": "512", "height": "384", "credit": "", "caption": ""}, "5": {"item_id": "2985686349", "image_id": "5", "src": "https://learnopencv.com/wp-content/uploads/2020/05/auditorium-benches-chairs-class-207691-1024x731.jpg", "width": "512", "height": "366", "credit": "", "caption": ""}, "6": {"item_id": "2985686349", "image_id": "6", "src": "https://learnopencv.com/wp-content/uploads/2020/05/close-up-photography-of-yellow-green-red-and-brown-plastic-163064-1024x683.jpg", "width": "512", "height": "342", "credit": "", "caption": ""}, "7": {"item_id": "2985686349", "image_id": "7", "src": "https://learnopencv.com/wp-content/uploads/2020/05/Diagram.png", "width": "626", "height": "340", "credit": "", "caption": ""}, "8": {"item_id": "2985686349", "image_id": "8", "src": "https://learnopencv.com/wp-content/uploads/2020/05/barbell-on-the-floor-1552252-1-1024x680.jpg", "width": "512", "height": "340", "credit": "", "caption": ""}, "9": {"item_id": "2985686349", "image_id": "9", "src": "https://learnopencv.com/wp-content/uploads/2020/05/clear-glass-with-red-sand-grainer-39396-scaled.jpg", "width": "512", "height": "386", "credit": "", "caption": ""}}, "videos": {"1": {"item_id": "2985686349", "video_id": "1", "src": "https://www.youtube.com/embed/hdDBKxJSAHQ?start=275", "width": "640", "height": "420", "type": "1", "vid": "hdDBKxJSAHQ", "length": "0"}}, "listen_duration_estimate": 1383}, "3063485014": {"item_id": "3063485014", "resolved_id": "3063485014", "given_url": "https://medium.com/swlh/automate-your-neural-network-training-with-pytorch-lightning-1d7a981322d1", "given_title": "", "favorite": "0", "status": "1", "time_added": "1596485597", "time_updated": "1597018311", "time_read": "1597018311", "time_favorited": "0", "sort_id": 3, "resolved_title": "Automate Your Neural Network Training With PyTorch Lightning", "resolved_url": "https://medium.com/swlh/automate-your-neural-network-training-with-pytorch-lightning-1d7a981322d1", "excerpt": "PyTorch Lightning is the lightweight PyTorch wrapper for ML researchers. it helps you to scale your models and write less boilerplate while maintaining your code clean and flexible to scale up. Its help researchers more to focus to solve the problem than writing engineering code.", "is_article": "1", "is_index": "0", "has_video": "0", "has_image": "1", "word_count": "1215", "lang": "en", "time_to_read": 6, "top_image_url": "https://miro.medium.com/max/1200/1*wxjsZuZyIGPvtEcZZDG7Uw.png", "tags": {"pytorch": {"item_id": "3063485014", "tag": "pytorch"}}, "authors": {"142213785": {"item_id": "3063485014", "author_id": "142213785", "name": "Erfandi Maula Yusnu, Lalu", "url": "https://nunenuh.medium.com"}}, "image": {"item_id": "3063485014", "src": "https://miro.medium.com/max/1600/1*wxjsZuZyIGPvtEcZZDG7Uw.png", "width": "700", "height": "394"}, "images": {"1": {"item_id": "3063485014", "image_id": "1", "src": "https://miro.medium.com/max/1600/1*wxjsZuZyIGPvtEcZZDG7Uw.png", "width": "700", "height": "394", "credit": "", "caption": "Image Created By Author, Source of Background and Logo from PyTorch and PyTorch Lightning Official Site"}, "2": {"item_id": "3063485014", "image_id": "2", "src": "https://miro.medium.com/max/1600/0*Rd6iiQwMS9FrST3r.png", "width": "700", "height": "576", "credit": "", "caption": "Image is taken from PyTorch Lightning Github Repository"}, "3": {"item_id": "3063485014", "image_id": "3", "src": "https://miro.medium.com/max/1600/0*MO9EGZV-5F8_QSg9.png", "width": "700", "height": "576", "credit": "", "caption": "Image is taken from PyTorch Lightning Github Repository"}, "4": {"item_id": "3063485014", "image_id": "4", "src": "https://miro.medium.com/max/1600/1*381UiGmaT3BAjpsw_WsAwg.png", "width": "700", "height": "322", "credit": "", "caption": "Image screenshot by Author From Author Google Collab File"}}, "domain_metadata": {"name": "Medium", "logo": "https://logo.clearbit.com/medium.com?size=800", "greyscale_logo": "https://logo.clearbit.com/medium.com?size=800&greyscale=true"}, "listen_duration_estimate": 470}, "3131820715": {"item_id": "3131820715", "resolved_id": "3131820715", "given_url": "https://github.com/lucidrains/vit-pytorch", "given_title": "", "favorite": "0", "status": "1", "time_added": "1671369674", "time_updated": "1671403223", "time_read": "1671403222", "time_favorited": "0", "sort_id": 4, "resolved_title": "lucidrains/vit-pytorch", "resolved_url": "https://github.com/lucidrains/vit-pytorch", "excerpt": "Implementation of Vision Transformer, a simple way to achieve SOTA in vision classification with only a single transformer encoder, in Pytorch. Significance is further explained in Yannic Kilcher's video.", "is_article": "1", "is_index": "0", "has_video": "0", "has_image": "1", "word_count": "2899", "lang": "en", "time_to_read": 13, "top_image_url": "https://opengraph.githubassets.com/e225c022a1f8272134515bd1488ec8fb876695df81a4b08ea2057d7bc9cc877e/lucidrains/vit-pytorch", "tags": {"deep-learning": {"item_id": "3131820715", "tag": "deep-learning"}, "machine-vision": {"item_id": "3131820715", "tag": "machine-vision"}, "pytorch": {"item_id": "3131820715", "tag": "pytorch"}, "transformers": {"item_id": "3131820715", "tag": "transformers"}}, "image": {"item_id": "3131820715", "src": "https://github.com/lucidrains/vit-pytorch/raw/main/images/vit.gif", "width": "500", "height": "0"}, "images": {"1": {"item_id": "3131820715", "image_id": "1", "src": "https://github.com/lucidrains/vit-pytorch/raw/main/images/vit.gif", "width": "500", "height": "0", "credit": "", "caption": ""}, "2": {"item_id": "3131820715", "image_id": "2", "src": "https://github.com/lucidrains/vit-pytorch/blob/main/images/distill.png", "width": "300", "height": "0", "credit": "", "caption": ""}, "3": {"item_id": "3131820715", "image_id": "3", "src": "https://github.com/lucidrains/vit-pytorch/blob/main/images/t2t.png", "width": "400", "height": "0", "credit": "", "caption": ""}, "4": {"item_id": "3131820715", "image_id": "4", "src": "https://github.com/lucidrains/vit-pytorch/blob/main/images/cross_vit.png", "width": "400", "height": "0", "credit": "", "caption": ""}, "5": {"item_id": "3131820715", "image_id": "5", "src": "https://github.com/lucidrains/vit-pytorch/blob/main/images/pit.png", "width": "400", "height": "0", "credit": "", "caption": ""}, "6": {"item_id": "3131820715", "image_id": "6", "src": "https://github.com/lucidrains/vit-pytorch/blob/main/images/levit.png", "width": "300", "height": "0", "credit": "", "caption": ""}, "7": {"item_id": "3131820715", "image_id": "7", "src": "https://github.com/lucidrains/vit-pytorch/blob/main/images/cvt.png", "width": "400", "height": "0", "credit": "", "caption": ""}, "8": {"item_id": "3131820715", "image_id": "8", "src": "https://github.com/lucidrains/vit-pytorch/blob/main/images/twins_svt.png", "width": "400", "height": "0", "credit": "", "caption": ""}, "9": {"item_id": "3131820715", "image_id": "9", "src": "https://github.com/lucidrains/vit-pytorch/blob/main/images/nest.png", "width": "400", "height": "0", "credit": "", "caption": ""}, "10": {"item_id": "3131820715", "image_id": "10", "src": "https://github.com/lucidrains/vit-pytorch/blob/main/images/dino.png", "width": "350", "height": "0", "credit": "", "caption": ""}}, "domain_metadata": {"name": "GitHub", "logo": "https://logo.clearbit.com/github.com?size=800", "greyscale_logo": "https://logo.clearbit.com/github.com?size=800&greyscale=true"}, "listen_duration_estimate": 1122}, "3245504894": {"item_id": "3245504894", "resolved_id": "3245504894", "given_url": "https://vissl.ai/", "given_title": "", "favorite": "0", "status": "1", "time_added": "1615994217", "time_updated": "1616443122", "time_read": "1616443122", "time_favorited": "0", "sort_id": 5, "resolved_title": "VISSL · A library for state-of-the-art self-supervised learning", "resolved_url": "https://vissl.ai/", "excerpt": "Built on top of PyTorch which allows using all of its components. Reproducible reference implementation of SOTA self-supervision approaches (like SimCLR, MoCo, PIRL, SwAV etc) and their components that can we reused. Also supports supervised trainings.", "is_article": "0", "is_index": "1", "has_video": "0", "has_image": "1", "word_count": "106", "lang": "", "top_image_url": "https://vissl.ai/img/vissllogo.svg", "tags": {"machine-learning": {"item_id": "3245504894", "tag": "machine-learning"}, "pytorch": {"item_id": "3245504894", "tag": "pytorch"}, "self-supervised": {"item_id": "3245504894", "tag": "self-supervised"}}, "image": {"item_id": "3245504894", "src": "https://vissl.ai/img/Logo_Color_Light_BG.png", "width": "0", "height": "0"}, "images": {"1": {"item_id": "3245504894", "image_id": "1", "src": "https://vissl.ai/img/Logo_Color_Light_BG.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "2": {"item_id": "3245504894", "image_id": "2", "src": "https://vissl.ai/img/pytorch.svg", "width": "0", "height": "0", "credit": "", "caption": ""}, "3": {"item_id": "3245504894", "image_id": "3", "src": "https://vissl.ai/img/ssl_approaches.svg", "width": "0", "height": "0", "credit": "", "caption": ""}, "4": {"item_id": "3245504894", "image_id": "4", "src": "https://vissl.ai/img/benchmark_suite.svg", "width": "0", "height": "0", "credit": "", "caption": ""}, "5": {"item_id": "3245504894", "image_id": "5", "src": "https://vissl.ai/img/scalable.svg", "width": "0", "height": "0", "credit": "", "caption": ""}}, "listen_duration_estimate": 41}, "2899763458": {"item_id": "2899763458", "resolved_id": "2899763458", "given_url": "https://github.com/fastai/fastbook", "given_title": "", "favorite": "0", "status": "1", "time_added": "1658673596", "time_updated": "1658676478", "time_read": "1658676478", "time_favorited": "0", "sort_id": 6, "resolved_title": "fastai/fastbook", "resolved_url": "https://github.com/fastai/fastbook", "excerpt": "These notebooks cover an introduction to deep learning, fastai, and PyTorch. fastai is a layered API for deep learning; for more information, see the fastai paper. Everything in this repo is copyright Jeremy Howard and Sylvain Gugger, 2020 onwards.", "is_article": "1", "is_index": "1", "has_video": "0", "has_image": "0", "word_count": "480", "lang": "en", "top_image_url": "https://opengraph.githubassets.com/8e454e433f543cf8e8d56503e19cd03d7101e1354e0ccdceaca39abacf678ce1/fastai/fastbook", "tags": {"books": {"item_id": "2899763458", "tag": "books"}, "deep-learning": {"item_id": "2899763458", "tag": "deep-learning"}, "pytorch": {"item_id": "2899763458", "tag": "pytorch"}}, "domain_metadata": {"name": "GitHub", "logo": "https://logo.clearbit.com/github.com?size=800", "greyscale_logo": "https://logo.clearbit.com/github.com?size=800&greyscale=true"}, "listen_duration_estimate": 186}, "2898927446": {"item_id": "2898927446", "resolved_id": "2898927446", "given_url": "https://towardsdatascience.com/from-pytorch-to-pytorch-lightning-a-gentle-introduction-b371b7caaf09", "given_title": "", "favorite": "0", "status": "1", "time_added": "1596478641", "time_updated": "1597018330", "time_read": "1597018329", "time_favorited": "0", "sort_id": 7, "resolved_title": "From PyTorch to PyTorch Lightning — A gentle introduction", "resolved_url": "https://towardsdatascience.com/from-pytorch-to-pytorch-lightning-a-gentle-introduction-b371b7caaf09", "excerpt": "This post answers the most frequent question about why you need Lightning if you’re using PyTorch. PyTorch is extremely easy to use to build complex AI models.", "is_article": "1", "is_index": "0", "has_video": "0", "has_image": "1", "word_count": "1672", "lang": "en", "time_to_read": 8, "top_image_url": "https://miro.medium.com/max/951/1*DgYiXo_5v3Zp68qGONosWw.png", "tags": {"pytorch": {"item_id": "2898927446", "tag": "pytorch"}}, "authors": {"143974353": {"item_id": "2898927446", "author_id": "143974353", "name": "William Falcon", "url": "https://william-falcon.medium.com"}}, "image": {"item_id": "2898927446", "src": "https://miro.medium.com/fit/c/56/56/2*5MyOk9_y7SuFWEI8iHD5VA.jpeg", "width": "28", "height": "28"}, "images": {"1": {"item_id": "2898927446", "image_id": "1", "src": "https://miro.medium.com/fit/c/56/56/2*5MyOk9_y7SuFWEI8iHD5VA.jpeg", "width": "28", "height": "28", "credit": "", "caption": ""}, "2": {"item_id": "2898927446", "image_id": "2", "src": "https://miro.medium.com/max/1062/1*oEkULsraelP7wNH6F8_zGg.png", "width": "531", "height": "147", "credit": "", "caption": "PyTorch Lightning was created while doing PhD research at both NYU and FAIR"}, "3": {"item_id": "2898927446", "image_id": "3", "src": "https://miro.medium.com/max/1400/1*9fnIoPevuZHJnvNqlte40g.jpeg", "width": "700", "height": "470", "credit": "", "caption": ""}, "4": {"item_id": "2898927446", "image_id": "4", "src": "https://miro.medium.com/max/1400/1*SjW_ILtdER7gbBMIzxicLA.png", "width": "700", "height": "48", "credit": "", "caption": ""}, "5": {"item_id": "2898927446", "image_id": "5", "src": "https://miro.medium.com/max/1400/1*EMpOIboMGGz9F1mNtQGp_g.png", "width": "700", "height": "289", "credit": "", "caption": ""}, "6": {"item_id": "2898927446", "image_id": "6", "src": "https://miro.medium.com/max/1400/1*b81_j__xv8M0Bb6nFTXbAA.png", "width": "700", "height": "354", "credit": "", "caption": ""}, "7": {"item_id": "2898927446", "image_id": "7", "src": "https://miro.medium.com/max/1040/1*wS0o4efr2DQnDN6NJUTMvg.png", "width": "520", "height": "654", "credit": "", "caption": ""}, "8": {"item_id": "2898927446", "image_id": "8", "src": "https://miro.medium.com/max/1400/1*DgYiXo_5v3Zp68qGONosWw.png", "width": "700", "height": "461", "credit": "illustration by: William Falcon", "caption": "3-layer network"}, "9": {"item_id": "2898927446", "image_id": "9", "src": "https://miro.medium.com/max/994/1*oq6G91hMTqHlvxgGfsgtcw.png", "width": "497", "height": "66", "credit": "", "caption": ""}, "10": {"item_id": "2898927446", "image_id": "10", "src": "https://miro.medium.com/max/1400/1*_mbNZKVOUQLLAAxMSl9bfg.png", "width": "700", "height": "448", "credit": "", "caption": ""}, "11": {"item_id": "2898927446", "image_id": "11", "src": "https://miro.medium.com/max/1288/1*clq_bui-z1xi3Y-Ih_qhFg.png", "width": "644", "height": "237", "credit": "", "caption": ""}, "12": {"item_id": "2898927446", "image_id": "12", "src": "https://miro.medium.com/max/1400/1*01K8BlcocePCGmxtEBziwg.jpeg", "width": "700", "height": "100", "credit": "", "caption": ""}, "13": {"item_id": "2898927446", "image_id": "13", "src": "https://miro.medium.com/max/1188/0*XGBPxYSO2-hGEXNV.png", "width": "594", "height": "361", "credit": "", "caption": "Source: Wikipedia"}, "14": {"item_id": "2898927446", "image_id": "14", "src": "https://miro.medium.com/max/1400/1*ZAk4hLZgq8M71YAV6jborA.png", "width": "700", "height": "369", "credit": "", "caption": ""}, "15": {"item_id": "2898927446", "image_id": "15", "src": "https://miro.medium.com/max/1400/1*r9w_K-bagPGRHIi_TgwjLQ.jpeg", "width": "700", "height": "120", "credit": "", "caption": ""}, "16": {"item_id": "2898927446", "image_id": "16", "src": "https://miro.medium.com/max/1400/1*Zf3m5rYC8RbKuFhtsWjskA.png", "width": "700", "height": "145", "credit": "", "caption": ""}, "17": {"item_id": "2898927446", "image_id": "17", "src": "https://miro.medium.com/max/1400/1*_b5KEGf9bclvvUL2RdO-fA.jpeg", "width": "700", "height": "181", "credit": "", "caption": ""}, "18": {"item_id": "2898927446", "image_id": "18", "src": "https://miro.medium.com/max/606/1*4Rsl15bCoTpDmXFFpWw1hw.png", "width": "303", "height": "40", "credit": "", "caption": "in math"}, "19": {"item_id": "2898927446", "image_id": "19", "src": "https://miro.medium.com/max/696/1*1cNPyK4x4tz99-iFsu7Wfg.png", "width": "348", "height": "59", "credit": "", "caption": "in code"}, "20": {"item_id": "2898927446", "image_id": "20", "src": "https://miro.medium.com/max/196/1*ctKs6MsUkuELI7MPCyhRgA.png", "width": "98", "height": "43", "credit": "", "caption": "in math"}, "21": {"item_id": "2898927446", "image_id": "21", "src": "https://miro.medium.com/max/560/1*ksSlgg3TDunDm5NUBpni6A.png", "width": "280", "height": "33", "credit": "", "caption": "in code"}, "22": {"item_id": "2898927446", "image_id": "22", "src": "https://miro.medium.com/max/212/1*jaWtm-TYJN32oTZiiNQHhg.png", "width": "106", "height": "41", "credit": "", "caption": "in math"}, "23": {"item_id": "2898927446", "image_id": "23", "src": "https://miro.medium.com/max/394/1*rQiaY9ySkLvP_u2Ivrndjg.png", "width": "197", "height": "40", "credit": "", "caption": "the code"}, "24": {"item_id": "2898927446", "image_id": "24", "src": "https://miro.medium.com/max/470/1*9X7vyV74yr6raF91RVsIcg.png", "width": "235", "height": "85", "credit": "", "caption": "in math"}, "25": {"item_id": "2898927446", "image_id": "25", "src": "https://miro.medium.com/max/810/1*vsqOLu_QZRMNEcWrsNK30A.png", "width": "405", "height": "39", "credit": "", "caption": "in code"}, "26": {"item_id": "2898927446", "image_id": "26", "src": "https://miro.medium.com/max/514/1*d_5muKpCN1N8RKB4oCrOJQ.png", "width": "257", "height": "68", "credit": "", "caption": "in math"}, "27": {"item_id": "2898927446", "image_id": "27", "src": "https://miro.medium.com/max/354/1*CL05a4uMji6PwZoEAlR63g.png", "width": "177", "height": "31", "credit": "", "caption": "in code"}, "28": {"item_id": "2898927446", "image_id": "28", "src": "https://miro.medium.com/max/382/1*kS7nrQYzDhogIC0Iw_134Q.png", "width": "191", "height": "36", "credit": "", "caption": "in math"}, "29": {"item_id": "2898927446", "image_id": "29", "src": "https://miro.medium.com/max/374/1*I6WNFV1KpbutsrL5NxX0og.png", "width": "187", "height": "35", "credit": "", "caption": "in code"}, "30": {"item_id": "2898927446", "image_id": "30", "src": "https://miro.medium.com/max/1134/1*0kIo7fsTwm5xFvTILazing.png", "width": "567", "height": "335", "credit": "", "caption": ""}, "31": {"item_id": "2898927446", "image_id": "31", "src": "https://miro.medium.com/max/1400/1*nYwSqPWq4PPnAB4hw5n7gg.png", "width": "700", "height": "400", "credit": "", "caption": ""}, "32": {"item_id": "2898927446", "image_id": "32", "src": "https://miro.medium.com/max/1400/1*kswFi_ipCKuwR9vWpYlqxg.jpeg", "width": "700", "height": "436", "credit": "", "caption": ""}, "33": {"item_id": "2898927446", "image_id": "33", "src": "https://miro.medium.com/max/1358/1*kmG3OaNt1pjqC9SRB6N9Kw.png", "width": "679", "height": "105", "credit": "", "caption": ""}, "34": {"item_id": "2898927446", "image_id": "34", "src": "https://miro.medium.com/max/574/1*MqY59LhJ9urAcR-V6K7YUA.png", "width": "287", "height": "89", "credit": "", "caption": ""}, "35": {"item_id": "2898927446", "image_id": "35", "src": "https://miro.medium.com/max/1400/1*GWVf6anY8VnDlKnBIMKcqg.png", "width": "700", "height": "705", "credit": "", "caption": ""}, "36": {"item_id": "2898927446", "image_id": "36", "src": "https://miro.medium.com/max/912/1*pqTMd72wZJ0ULC0b5A03rQ.png", "width": "456", "height": "69", "credit": "", "caption": ""}, "37": {"item_id": "2898927446", "image_id": "37", "src": "https://miro.medium.com/max/1400/1*O_sKeBowpM_XV1osFZU1ug.gif", "width": "700", "height": "357", "credit": "credits: Neptune.ai", "caption": "Logging with Neptune.AI"}, "38": {"item_id": "2898927446", "image_id": "38", "src": "https://miro.medium.com/max/1400/1*ojvcqQf4jAyF8JXVJ85Exw.png", "width": "700", "height": "335", "credit": "", "caption": "Logging with Comet.ml"}, "39": {"item_id": "2898927446", "image_id": "39", "src": "https://miro.medium.com/max/594/1*InjZqqlEVET0zCbDEgC1uQ.png", "width": "297", "height": "43", "credit": "", "caption": ""}, "40": {"item_id": "2898927446", "image_id": "40", "src": "https://miro.medium.com/max/1256/1*fVMoQU6hjgYHSHwr6UN_QQ.png", "width": "628", "height": "282", "credit": "", "caption": ""}, "41": {"item_id": "2898927446", "image_id": "41", "src": "https://miro.medium.com/max/656/1*7ycXPIEJndXxrkLT34roWg.png", "width": "328", "height": "52", "credit": "", "caption": ""}, "42": {"item_id": "2898927446", "image_id": "42", "src": "https://miro.medium.com/max/1390/1*cw8OKKih9PxS9AHkgzc6VQ.png", "width": "695", "height": "334", "credit": "", "caption": ""}, "43": {"item_id": "2898927446", "image_id": "43", "src": "https://miro.medium.com/max/1354/1*YZJjv8uBzJ4n4BOgfhpxEw.png", "width": "677", "height": "63", "credit": "", "caption": ""}, "44": {"item_id": "2898927446", "image_id": "44", "src": "https://miro.medium.com/max/1400/1*Qmi7yHLL63UGzLrUhnodVg.png", "width": "700", "height": "106", "credit": "", "caption": ""}, "45": {"item_id": "2898927446", "image_id": "45", "src": "https://miro.medium.com/max/1400/1*ZZldF5Wv-a73VTNrpt_uwg.png", "width": "700", "height": "771", "credit": "", "caption": ""}, "46": {"item_id": "2898927446", "image_id": "46", "src": "https://miro.medium.com/max/1400/1*KXOcANQDslOeOViUpObAAw.png", "width": "700", "height": "224", "credit": "", "caption": ""}, "47": {"item_id": "2898927446", "image_id": "47", "src": "https://miro.medium.com/max/1400/1*BjOAwCdcNcEKFQXkUYlY4w.png", "width": "700", "height": "385", "credit": "", "caption": ""}, "48": {"item_id": "2898927446", "image_id": "48", "src": "https://miro.medium.com/max/1400/1*iMK5AehGEL6kgreM6yliBA.png", "width": "700", "height": "140", "credit": "", "caption": ""}, "49": {"item_id": "2898927446", "image_id": "49", "src": "https://miro.medium.com/max/1400/1*OWvQ78_I5IUS8J_bCaMc0A.png", "width": "700", "height": "372", "credit": "", "caption": "PyTorch Lightning Callback"}, "50": {"item_id": "2898927446", "image_id": "50", "src": "https://miro.medium.com/max/1400/1*_XoPKjwzW3vJKv76bvi2NQ.png", "width": "700", "height": "49", "credit": "", "caption": ""}, "51": {"item_id": "2898927446", "image_id": "51", "src": "https://miro.medium.com/max/1400/1*160lmx0S6rTQfwem6ZM85Q.png", "width": "700", "height": "113", "credit": "", "caption": ""}}, "domain_metadata": {"name": "Towards Data Science", "logo": "https://logo.clearbit.com/towardsdatascience.com?size=800", "greyscale_logo": "https://logo.clearbit.com/towardsdatascience.com?size=800&greyscale=true"}, "listen_duration_estimate": 647}, "3945875967": {"item_id": "3945875967", "resolved_id": "3945875967", "given_url": "https://www.hpcwire.com/2023/10/05/how-amd-may-get-across-the-cuda-moat/", "given_title": "", "favorite": "0", "status": "1", "time_added": "1696636049", "time_updated": "1696674512", "time_read": "1696674512", "time_favorited": "0", "sort_id": 8, "resolved_title": "", "resolved_url": "https://www.hpcwire.com/2023/10/05/how-amd-may-get-across-the-cuda-moat/", "excerpt": "", "is_article": "0", "is_index": "0", "has_video": "0", "has_image": "0", "word_count": "0", "lang": "", "tags": {"cuda": {"item_id": "3945875967", "tag": "cuda"}, "gpus": {"item_id": "3945875967", "tag": "gpus"}, "pytorch": {"item_id": "3945875967", "tag": "pytorch"}, "tensorflow": {"item_id": "3945875967", "tag": "tensorflow"}}, "listen_duration_estimate": 0}, "3303426550": {"item_id": "3303426550", "resolved_id": "3303426550", "given_url": "https://tanelp.github.io/posts/a-bug-that-plagues-thousands-of-open-source-ml-projects/", "given_title": "", "favorite": "0", "status": "1", "time_added": "1618136759", "time_updated": "1618172563", "time_read": "1618172562", "time_favorited": "0", "sort_id": 9, "resolved_title": "Using PyTorch + NumPy? You're making a mistake.", "resolved_url": "https://tanelp.github.io/posts/a-bug-that-plagues-thousands-of-open-source-ml-projects/", "excerpt": "Update: The problem is now fixed in Pytorch but can still happen in tensorflow-keras. Discussion on reddit. Bugs in ML code are notoriously hard to fix - they don’t cause compile errors but silently regress accuracy.", "is_article": "1", "is_index": "0", "has_video": "0", "has_image": "1", "word_count": "1195", "lang": "en", "time_to_read": 5, "tags": {"numpy": {"item_id": "3303426550", "tag": "numpy"}, "python": {"item_id": "3303426550", "tag": "python"}, "pytorch": {"item_id": "3303426550", "tag": "pytorch"}}, "authors": {"149240460": {"item_id": "3303426550", "author_id": "149240460", "name": "Tanel Pärnamaa", "url": ""}}, "image": {"item_id": "3303426550", "src": "https://tanelp.github.io/images/pytorch_tutorial.png", "width": "0", "height": "0"}, "images": {"1": {"item_id": "3303426550", "image_id": "1", "src": "https://tanelp.github.io/images/pytorch_tutorial.png", "width": "0", "height": "0", "credit": "batch size 8, num_workers 2, random crop augmentation", "caption": ""}, "2": {"item_id": "3303426550", "image_id": "2", "src": "https://tanelp.github.io/images/openai_ebm.png", "width": "0", "height": "0", "credit": "the first corrupted image in batch 1 and 2", "caption": ""}}, "listen_duration_estimate": 463}, "2834549467": {"item_id": "2834549467", "resolved_id": "2834345445", "given_url": "https://github.com/Tessellate-Imaging/Pytorch_Tutorial?utm_source=share&utm_medium=ios_app&utm_name=iossmf", "given_title": "", "favorite": "0", "status": "1", "time_added": "1577408213", "time_updated": "1608303422", "time_read": "1582142895", "time_favorited": "0", "sort_id": 10, "resolved_title": "Pytorch_Tutorial", "resolved_url": "https://github.com/Tessellate-Imaging/Pytorch_Tutorial", "excerpt": "Pytorch_Tutorial A set of jupyter notebooks on pytorch functions with examples Contents A) RoadMap 1 - Torch Main 1 - Basic Tensor functions.ipynb B) RoadMap 2 - Torch Main2 - Mathematical Operators.ipynb C) RoadMap 3 - Torch Main 3 - Linear Algebraic Operations.", "is_article": "1", "is_index": "0", "has_video": "0", "has_image": "1", "word_count": "350", "lang": "en", "top_image_url": "https://opengraph.githubassets.com/0832930b125dcbfad4c98b596330fdc0e17c7d56f9daa90952226e8953ac8385/Tessellate-Imaging/Pytorch_Tutorial", "tags": {"pytorch": {"item_id": "2834549467", "tag": "pytorch"}}, "image": {"item_id": "2834549467", "src": "https://camo.githubusercontent.com/87dd1a309fa23300bd31493aacdab57389b6b1a3921f8738bd36313b19e23b3d/68747470733a2f2f696d672e736869656c64732e696f2f747769747465722f75726c2f68747470732f6769746875622e636f6d2f74746572622f687964652e7376673f7374796c653d736f6369616c", "width": "0", "height": "0"}, "images": {"1": {"item_id": "2834549467", "image_id": "1", "src": "https://camo.githubusercontent.com/87dd1a309fa23300bd31493aacdab57389b6b1a3921f8738bd36313b19e23b3d/68747470733a2f2f696d672e736869656c64732e696f2f747769747465722f75726c2f68747470732f6769746875622e636f6d2f74746572622f687964652e7376673f7374796c653d736f6369616c", "width": "0", "height": "0", "credit": "", "caption": ""}, "2": {"item_id": "2834549467", "image_id": "2", "src": "https://camo.githubusercontent.com/a0ab2c8ebda4926775045eadbfcc2b8607e4d2ddf8c9d4c691897c1106d6d037/687474703a2f2f686974732e6477796c2e696f2f54657373656c6c6174652d496d6167696e672f5079746f7263685f5475746f7269616c2e737667", "width": "0", "height": "0", "credit": "", "caption": ""}, "3": {"item_id": "2834549467", "image_id": "3", "src": "https://github.com/Tessellate-Imaging/Pytorch_Tutorial/raw/master/demo.gif", "width": "0", "height": "0", "credit": "", "caption": ""}}, "domain_metadata": {"name": "GitHub", "logo": "https://logo.clearbit.com/github.com?size=800", "greyscale_logo": "https://logo.clearbit.com/github.com?size=800&greyscale=true"}, "listen_duration_estimate": 135}, "3322333081": {"item_id": "3322333081", "resolved_id": "3322333107", "given_url": "https://towardsdatascience.com/beginner-guide-to-variational-autoencoders-vae-with-pytorch-lightning-part-2-6b79ad697c79?source=rss----7f60cf5620c9---4", "given_title": "", "favorite": "0", "status": "1", "time_added": "1620047400", "time_updated": "1673901753", "time_read": "1620052748", "time_favorited": "0", "sort_id": 11, "resolved_title": "Beginner guide to Variational Autoencoders (VAE) with PyTorch Lightning (Part 2)", "resolved_url": "https://towardsdatascience.com/beginner-guide-to-variational-autoencoders-vae-with-pytorch-lightning-part-2-6b79ad697c79", "excerpt": "In Part 1, we looked at the variational autoencoder, a model based on the autoencoder but allows for data generation. We learned about the overall architecture and the implementation details that allow it to learn successfully.", "is_article": "1", "is_index": "0", "has_video": "0", "has_image": "1", "word_count": "1289", "lang": "en", "time_to_read": 6, "top_image_url": "https://miro.medium.com/max/1200/0*eFzoUZatvbK4m3zK", "tags": {"autoencoders": {"item_id": "3322333081", "tag": "autoencoders"}, "deep-learning": {"item_id": "3322333081", "tag": "deep-learning"}, "pytorch": {"item_id": "3322333081", "tag": "pytorch"}}, "authors": {"126262743": {"item_id": "3322333081", "author_id": "126262743", "name": "reo neo", "url": "https://medium.com/@reoneo97"}}, "image": {"item_id": "3322333081", "src": "https://miro.medium.com/fit/c/56/56/1*HD8pJNnA7NpdzOc2JxgcMQ.jpeg", "width": "28", "height": "28"}, "images": {"1": {"item_id": "3322333081", "image_id": "1", "src": "https://miro.medium.com/fit/c/56/56/1*HD8pJNnA7NpdzOc2JxgcMQ.jpeg", "width": "28", "height": "28", "credit": "", "caption": ""}, "2": {"item_id": "3322333081", "image_id": "2", "src": "https://miro.medium.com/max/11910/0*eFzoUZatvbK4m3zK", "width": "5955", "height": "3350", "credit": "Marc-Olivier Jodoin on Unsplash", "caption": ""}, "3": {"item_id": "3322333081", "image_id": "3", "src": "https://miro.medium.com/max/1052/1*IDWKLfpuiZ6cYCJmPy97Bg.png", "width": "526", "height": "436", "credit": "", "caption": "Tracking loss function using TensorBoard"}, "4": {"item_id": "3322333081", "image_id": "4", "src": "https://miro.medium.com/max/484/1*TwErmNaLLFdRHWcwtamgAg.png", "width": "242", "height": "242", "credit": "", "caption": ""}, "5": {"item_id": "3322333081", "image_id": "5", "src": "https://miro.medium.com/max/484/1*0yLwZQEs6b8Ni40SqfQqzA.png", "width": "242", "height": "242", "credit": "Left", "caption": "Comparing image sample during first epoch"}}, "domain_metadata": {"name": "Towards Data Science", "logo": "https://logo.clearbit.com/towardsdatascience.com?size=800", "greyscale_logo": "https://logo.clearbit.com/towardsdatascience.com?size=800&greyscale=true"}, "listen_duration_estimate": 499}, "3335081777": {"item_id": "3335081777", "resolved_id": "3335081777", "given_url": "https://ai.facebook.com/blog/pytorchvideo-a-deep-learning-library-for-video-understanding/", "given_title": "", "favorite": "0", "status": "1", "time_added": "1621427197", "time_updated": "1638708525", "time_read": "1621465460", "time_favorited": "0", "sort_id": 12, "resolved_title": "PyTorchVideo: A deep learning library for video understanding", "resolved_url": "https://ai.facebook.com/blog/pytorchvideo-a-deep-learning-library-for-video-understanding/", "excerpt": "PyTorchVideo is a deep learning library for research and applications in video understanding. It provides easy-to-use, efficient, and reproducible implementations of state-of-the-art video models, data sets, transforms, and tools in PyTorch.", "is_article": "1", "is_index": "0", "has_video": "0", "has_image": "1", "word_count": "605", "lang": "en", "time_to_read": 3, "tags": {"deep-learning": {"item_id": "3335081777", "tag": "deep-learning"}, "python": {"item_id": "3335081777", "tag": "python"}, "pytorch": {"item_id": "3335081777", "tag": "pytorch"}, "video": {"item_id": "3335081777", "tag": "video"}}, "image": {"item_id": "3335081777", "src": "https://scontent-lga3-2.xx.fbcdn.net/v/t39.2365-6/185917599_1453878801615224_1414293669561819038_n.png?_nc_cat=102&ccb=1-3&_nc_sid=ad8a9d&_nc_ohc=zBtDNQ2truAAX_IWypr&_nc_ht=scontent-lga3-2.xx&oh=c292392753a182066cc36216db5cb5e4&oe=60C8B916", "width": "0", "height": "0"}, "images": {"1": {"item_id": "3335081777", "image_id": "1", "src": "https://scontent-lga3-2.xx.fbcdn.net/v/t39.2365-6/185917599_1453878801615224_1414293669561819038_n.png?_nc_cat=102&ccb=1-3&_nc_sid=ad8a9d&_nc_ohc=zBtDNQ2truAAX_IWypr&_nc_ht=scontent-lga3-2.xx&oh=c292392753a182066cc36216db5cb5e4&oe=60C8B916", "width": "0", "height": "0", "credit": "", "caption": ""}}, "listen_duration_estimate": 234}, "2595311616": {"item_id": "2595311616", "resolved_id": "2595311616", "given_url": "http://blog.ezyang.com/2019/05/pytorch-internals/", "given_title": "", "favorite": "0", "status": "1", "time_added": "1583011108", "time_updated": "1583785007", "time_read": "1583785007", "time_favorited": "0", "sort_id": 13, "resolved_title": "PyTorch internals", "resolved_url": "http://blog.ezyang.com/2019/05/pytorch-internals/", "excerpt": "This post is a long form essay version of a talk about PyTorch internals, that I gave at the PyTorch NYC meetup on May 14, 2019. Hi everyone! Today I want to talk about the internals of PyTorch.", "is_article": "1", "is_index": "0", "has_video": "0", "has_image": "1", "word_count": "5384", "lang": "en", "time_to_read": 24, "tags": {"python": {"item_id": "2595311616", "tag": "python"}, "pytorch": {"item_id": "2595311616", "tag": "pytorch"}}, "image": {"item_id": "2595311616", "src": "http://blog.ezyang.com/img/pytorch-internals/slide-01.png", "width": "0", "height": "0"}, "images": {"1": {"item_id": "2595311616", "image_id": "1", "src": "http://blog.ezyang.com/img/pytorch-internals/slide-01.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "2": {"item_id": "2595311616", "image_id": "2", "src": "http://blog.ezyang.com/img/pytorch-internals/slide-02.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "3": {"item_id": "2595311616", "image_id": "3", "src": "http://blog.ezyang.com/img/pytorch-internals/slide-03.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "4": {"item_id": "2595311616", "image_id": "4", "src": "http://blog.ezyang.com/img/pytorch-internals/slide-04.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "5": {"item_id": "2595311616", "image_id": "5", "src": "http://blog.ezyang.com/img/pytorch-internals/slide-05.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "6": {"item_id": "2595311616", "image_id": "6", "src": "http://blog.ezyang.com/img/pytorch-internals/slide-06.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "7": {"item_id": "2595311616", "image_id": "7", "src": "http://blog.ezyang.com/img/pytorch-internals/slide-07.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "8": {"item_id": "2595311616", "image_id": "8", "src": "http://blog.ezyang.com/img/pytorch-internals/slide-08.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "9": {"item_id": "2595311616", "image_id": "9", "src": "http://blog.ezyang.com/img/pytorch-internals/slide-09.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "10": {"item_id": "2595311616", "image_id": "10", "src": "http://blog.ezyang.com/img/pytorch-internals/slide-10.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "11": {"item_id": "2595311616", "image_id": "11", "src": "http://blog.ezyang.com/img/pytorch-internals/slide-11.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "12": {"item_id": "2595311616", "image_id": "12", "src": "http://blog.ezyang.com/img/pytorch-internals/slide-12.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "13": {"item_id": "2595311616", "image_id": "13", "src": "http://blog.ezyang.com/img/pytorch-internals/slide-13.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "14": {"item_id": "2595311616", "image_id": "14", "src": "http://blog.ezyang.com/img/pytorch-internals/slide-14.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "15": {"item_id": "2595311616", "image_id": "15", "src": "http://blog.ezyang.com/img/pytorch-internals/slide-15.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "16": {"item_id": "2595311616", "image_id": "16", "src": "http://blog.ezyang.com/img/pytorch-internals/slide-16.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "17": {"item_id": "2595311616", "image_id": "17", "src": "http://blog.ezyang.com/img/pytorch-internals/slide-17.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "18": {"item_id": "2595311616", "image_id": "18", "src": "http://blog.ezyang.com/img/pytorch-internals/slide-18.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "19": {"item_id": "2595311616", "image_id": "19", "src": "http://blog.ezyang.com/img/pytorch-internals/slide-19.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "20": {"item_id": "2595311616", "image_id": "20", "src": "http://blog.ezyang.com/img/pytorch-internals/slide-20.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "21": {"item_id": "2595311616", "image_id": "21", "src": "http://blog.ezyang.com/img/pytorch-internals/slide-21.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "22": {"item_id": "2595311616", "image_id": "22", "src": "http://blog.ezyang.com/img/pytorch-internals/slide-22.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "23": {"item_id": "2595311616", "image_id": "23", "src": "http://blog.ezyang.com/img/pytorch-internals/slide-23.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "24": {"item_id": "2595311616", "image_id": "24", "src": "http://blog.ezyang.com/img/pytorch-internals/slide-24.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "25": {"item_id": "2595311616", "image_id": "25", "src": "http://blog.ezyang.com/img/pytorch-internals/slide-25.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "26": {"item_id": "2595311616", "image_id": "26", "src": "http://blog.ezyang.com/img/pytorch-internals/slide-26.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "27": {"item_id": "2595311616", "image_id": "27", "src": "http://blog.ezyang.com/img/pytorch-internals/slide-27.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "28": {"item_id": "2595311616", "image_id": "28", "src": "http://blog.ezyang.com/img/pytorch-internals/slide-28.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "29": {"item_id": "2595311616", "image_id": "29", "src": "http://blog.ezyang.com/img/pytorch-internals/slide-29.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "30": {"item_id": "2595311616", "image_id": "30", "src": "http://blog.ezyang.com/img/pytorch-internals/slide-30.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "31": {"item_id": "2595311616", "image_id": "31", "src": "http://blog.ezyang.com/img/pytorch-internals/slide-31.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "32": {"item_id": "2595311616", "image_id": "32", "src": "http://blog.ezyang.com/img/pytorch-internals/slide-32.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "33": {"item_id": "2595311616", "image_id": "33", "src": "http://blog.ezyang.com/img/pytorch-internals/slide-33.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "34": {"item_id": "2595311616", "image_id": "34", "src": "http://blog.ezyang.com/img/pytorch-internals/slide-34.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "35": {"item_id": "2595311616", "image_id": "35", "src": "http://blog.ezyang.com/img/pytorch-internals/slide-35.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "36": {"item_id": "2595311616", "image_id": "36", "src": "http://blog.ezyang.com/img/pytorch-internals/slide-36.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "37": {"item_id": "2595311616", "image_id": "37", "src": "http://blog.ezyang.com/img/pytorch-internals/slide-37.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "38": {"item_id": "2595311616", "image_id": "38", "src": "http://blog.ezyang.com/img/pytorch-internals/slide-38.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "39": {"item_id": "2595311616", "image_id": "39", "src": "http://blog.ezyang.com/img/pytorch-internals/slide-39.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "40": {"item_id": "2595311616", "image_id": "40", "src": "http://blog.ezyang.com/img/pytorch-internals/slide-40.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "41": {"item_id": "2595311616", "image_id": "41", "src": "http://blog.ezyang.com/img/pytorch-internals/slide-41.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "42": {"item_id": "2595311616", "image_id": "42", "src": "http://blog.ezyang.com/img/pytorch-internals/slide-43.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "43": {"item_id": "2595311616", "image_id": "43", "src": "http://blog.ezyang.com/img/pytorch-internals/slide-42.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "44": {"item_id": "2595311616", "image_id": "44", "src": "http://blog.ezyang.com/img/pytorch-internals/slide-44.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "45": {"item_id": "2595311616", "image_id": "45", "src": "http://blog.ezyang.com/img/pytorch-internals/slide-45.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "46": {"item_id": "2595311616", "image_id": "46", "src": "http://blog.ezyang.com/img/pytorch-internals/slide-46.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "47": {"item_id": "2595311616", "image_id": "47", "src": "http://blog.ezyang.com/img/pytorch-internals/slide-47.png", "width": "0", "height": "0", "credit": "", "caption": ""}}, "listen_duration_estimate": 2084}, "2569587144": {"item_id": "2569587144", "resolved_id": "2569587144", "given_url": "https://github.com/BloodAxe/pytorch-toolbelt", "given_title": "", "favorite": "0", "status": "1", "time_added": "1579369106", "time_updated": "1608264459", "time_read": "1582142973", "time_favorited": "0", "sort_id": 14, "resolved_title": "Pytorch-toolbelt", "resolved_url": "https://github.com/BloodAxe/pytorch-toolbelt", "excerpt": "Pytorch-toolbelt A pytorch-toolbelt is a Python library with a set of bells and whistles for PyTorch for fast R&D prototyping and Kaggle farming: What's inside Easy model building using flexible encoder-decoder architecture.", "is_article": "1", "is_index": "0", "has_video": "0", "has_image": "1", "word_count": "1087", "lang": "en", "time_to_read": 5, "top_image_url": "https://opengraph.githubassets.com/db7b2a4651e607e4ac4d4da8e183a83c0206fae831c453a476db7322218b0d7b/BloodAxe/pytorch-toolbelt", "tags": {"pytorch": {"item_id": "2569587144", "tag": "pytorch"}}, "image": {"item_id": "2569587144", "src": "https://camo.githubusercontent.com/3e95d0bc3417eb6c9fbd2eb3d6e87701f3084a4f619926b7d8eb1fe09e562126/68747470733a2f2f7472617669732d63692e6f72672f426c6f6f644178652f7079746f7263682d746f6f6c62656c742e7376673f6272616e63683d646576656c6f70", "width": "0", "height": "0"}, "images": {"1": {"item_id": "2569587144", "image_id": "1", "src": "https://camo.githubusercontent.com/3e95d0bc3417eb6c9fbd2eb3d6e87701f3084a4f619926b7d8eb1fe09e562126/68747470733a2f2f7472617669732d63692e6f72672f426c6f6f644178652f7079746f7263682d746f6f6c62656c742e7376673f6272616e63683d646576656c6f70", "width": "0", "height": "0", "credit": "", "caption": ""}, "2": {"item_id": "2569587144", "image_id": "2", "src": "https://camo.githubusercontent.com/e76eeaae7dc35b5d3aab7ba4a6f168e0c65e1091d8f9fb515d05068ab6ace087/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f7079746f7263682d746f6f6c62656c742f62616467652f3f76657273696f6e3d6c6174657374", "width": "0", "height": "0", "credit": "", "caption": ""}, "3": {"item_id": "2569587144", "image_id": "3", "src": "https://camo.githubusercontent.com/524bb3a8895c3657d0c468cdf32e40e407ea37577037377cd97420bb00121db4/68747470733a2f2f7374617469632e64656570736f757263652e696f2f64656570736f757263652d62616467652d6c696768742d6d696e692e737667", "width": "0", "height": "0", "credit": "", "caption": ""}}, "domain_metadata": {"name": "GitHub", "logo": "https://logo.clearbit.com/github.com?size=800", "greyscale_logo": "https://logo.clearbit.com/github.com?size=800&greyscale=true"}, "listen_duration_estimate": 421}, "3356687434": {"item_id": "3356687434", "resolved_id": "3356687434", "given_url": "https://huggingface.co/course/chapter1", "given_title": "", "favorite": "0", "status": "1", "time_added": "1623785720", "time_updated": "1638708525", "time_read": "1624292704", "time_favorited": "0", "sort_id": 15, "resolved_title": "Introduction", "resolved_url": "https://huggingface.co/course/chapter1", "excerpt": "Welcome to the 🤗 Course! This course will teach you about natural language processing (NLP) using libraries from the Hugging Face ecosystem — 🤗 Transformers, 🤗 Datasets, 🤗 Tokenizers, and 🤗 Accelerate — as well as the Hugging Face Hub. It’s completely free and without ads.", "is_article": "1", "is_index": "0", "has_video": "1", "has_image": "1", "word_count": "452", "lang": "en", "top_image_url": "https://huggingface.co/front/thumbnails/course.png", "tags": {"deep-learning": {"item_id": "3356687434", "tag": "deep-learning"}, "python": {"item_id": "3356687434", "tag": "python"}, "pytorch": {"item_id": "3356687434", "tag": "pytorch"}}, "image": {"item_id": "3356687434", "src": "https://huggingface.co/course/static/chapter1/summary.png", "width": "100", "height": "0"}, "images": {"1": {"item_id": "3356687434", "image_id": "1", "src": "https://huggingface.co/course/static/chapter1/summary.png", "width": "100", "height": "0", "credit": "", "caption": ""}}, "videos": {"1": {"item_id": "3356687434", "video_id": "1", "src": "https://www.youtube-nocookie.com/embed/7PhlevizVB4", "width": "0", "height": "0", "type": "1", "vid": "7PhlevizVB4", "length": "0"}}, "listen_duration_estimate": 175}, "3364389482": {"item_id": "3364389482", "resolved_id": "3364389482", "given_url": "https://pytorch.org/blog/torch-linalg-autograd/", "given_title": "", "favorite": "0", "status": "1", "time_added": "1624575626", "time_updated": "1671277463", "time_read": "1624634096", "time_favorited": "0", "sort_id": 16, "resolved_title": "The torch.linalg module: Accelerated Linear Algebra with Autograd in PyTorch", "resolved_url": "https://pytorch.org/blog/torch-linalg-autograd/", "excerpt": "Linear algebra is essential to deep learning and scientific computing, and it’s always been a core part of PyTorch. PyTorch 1.9 extends PyTorch’s support for linear algebra operations with the torch.linalg module.", "is_article": "1", "is_index": "0", "has_video": "0", "has_image": "1", "word_count": "1072", "lang": "en", "time_to_read": 5, "top_image_url": "https://pytorch.org/assets/images/cholesky-decomposition.png", "tags": {"linear-algebra": {"item_id": "3364389482", "tag": "linear-algebra"}, "python": {"item_id": "3364389482", "tag": "python"}, "pytorch": {"item_id": "3364389482", "tag": "pytorch"}}, "authors": {"147670091": {"item_id": "3364389482", "author_id": "147670091", "name": "Mike Ruberry", "url": ""}}, "image": {"item_id": "3364389482", "src": "https://pytorch.org/assets/images/cholesky-decomposition.png", "width": "100", "height": "0"}, "images": {"1": {"item_id": "3364389482", "image_id": "1", "src": "https://pytorch.org/assets/images/cholesky-decomposition.png", "width": "100", "height": "0", "credit": "", "caption": ""}}, "listen_duration_estimate": 415}, "3425933690": {"item_id": "3425933690", "resolved_id": "3425933690", "given_url": "https://www.exxactcorp.com/blog/Deep-Learning/introduction-to-pytorch-lightning", "given_title": "", "favorite": "0", "status": "1", "time_added": "1633349487", "time_updated": "1638708525", "time_read": "1634511700", "time_favorited": "0", "sort_id": 17, "resolved_title": "An Introduction to PyTorch Lightning", "resolved_url": "https://www.exxactcorp.com/blog/Deep-Learning/introduction-to-pytorch-lightning", "excerpt": "Anyone who’s been working with deep learning for more than a few years knows that it wasn't always as easy as it is today.", "is_article": "1", "is_index": "0", "has_video": "0", "has_image": "1", "word_count": "1793", "lang": "en", "time_to_read": 8, "tags": {"deep-learning": {"item_id": "3425933690", "tag": "deep-learning"}, "machine-learning": {"item_id": "3425933690", "tag": "machine-learning"}, "pytorch": {"item_id": "3425933690", "tag": "pytorch"}}, "authors": {"156457556": {"item_id": "3425933690", "author_id": "156457556", "name": "structural biology", "url": "https://deepmind.com/blog/article/alphafold-a-solution-to-a-50-year-old-grand-challenge-in-biology"}}, "image": {"item_id": "3425933690", "src": "https://images.contentstack.io/v3/assets/blt71da4c740e00faaa/bltf231241e1af4b6ce/60c122a42d47ce78c28ad331/grid.png", "width": "0", "height": "0"}, "images": {"1": {"item_id": "3425933690", "image_id": "1", "src": "https://images.contentstack.io/v3/assets/blt71da4c740e00faaa/bltf231241e1af4b6ce/60c122a42d47ce78c28ad331/grid.png", "width": "0", "height": "0", "credit": "", "caption": ""}}, "listen_duration_estimate": 694}, "1781422829": {"item_id": "1781422829", "resolved_id": "1781422829", "given_url": "https://pytorch.org/tutorials/beginner/data_loading_tutorial.html", "given_title": "", "favorite": "0", "status": "1", "time_added": "1638239964", "time_updated": "1642033425", "time_read": "1642031343", "time_favorited": "0", "sort_id": 18, "resolved_title": "Writing Custom Datasets, DataLoaders and Transforms — PyTorch Tutorials 1.9.0+cu102 documentation", "resolved_url": "https://pytorch.org/tutorials/beginner/data_loading_tutorial.html", "excerpt": "A lot of effort in solving any machine learning problem goes into preparing the data. PyTorch provides many tools to make data loading easy and hopefully, to make your code more readable. In this tutorial, we will see how to load and preprocess/augment data from a non trivial dataset.", "is_article": "1", "is_index": "0", "has_video": "0", "has_image": "1", "word_count": "1876", "lang": "en", "time_to_read": 9, "tags": {"pytorch": {"item_id": "1781422829", "tag": "pytorch"}}, "image": {"item_id": "1781422829", "src": "https://pytorch.org/tutorials/_images/landmarked_face2.png", "width": "0", "height": "0"}, "images": {"1": {"item_id": "1781422829", "image_id": "1", "src": "https://pytorch.org/tutorials/_images/landmarked_face2.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "2": {"item_id": "1781422829", "image_id": "2", "src": "https://pytorch.org/tutorials/_images/sphx_glr_data_loading_tutorial_001.png", "width": "0", "height": "0", "credit": "RandomCrop", "caption": ""}, "3": {"item_id": "1781422829", "image_id": "3", "src": "https://pytorch.org/tutorials/_images/sphx_glr_data_loading_tutorial_002.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "4": {"item_id": "1781422829", "image_id": "4", "src": "https://pytorch.org/tutorials/_images/sphx_glr_data_loading_tutorial_003.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "5": {"item_id": "1781422829", "image_id": "5", "src": "https://pytorch.org/tutorials/_images/sphx_glr_data_loading_tutorial_004.png", "width": "0", "height": "0", "credit": "", "caption": ""}}, "listen_duration_estimate": 726}, "3504505844": {"item_id": "3504505844", "resolved_id": "3504505844", "given_url": "https://www.assemblyai.com/blog/pytorch-vs-tensorflow-in-2022/", "given_title": "", "favorite": "0", "status": "1", "time_added": "1639518395", "time_updated": "1639519985", "time_read": "1639519985", "time_favorited": "0", "sort_id": 19, "resolved_title": "PyTorch vs TensorFlow in 2022", "resolved_url": "https://www.assemblyai.com/blog/pytorch-vs-tensorflow-in-2022/", "excerpt": "PyTorch and TensorFlow are far and away the two most popular Deep Learning frameworks today. The debate over which framework is superior is a longstanding point of contentious debate, with each camp having its share of fervent supporters.", "is_article": "1", "is_index": "0", "has_video": "0", "has_image": "1", "word_count": "5451", "lang": "en", "time_to_read": 25, "top_image_url": "https://www.assemblyai.com/blog/content/images/2021/12/PyTorch-vs-TensorFlow-in-2022.png", "tags": {"deep-learning": {"item_id": "3504505844", "tag": "deep-learning"}, "machine-learning": {"item_id": "3504505844", "tag": "machine-learning"}, "paperswithcode": {"item_id": "3504505844", "tag": "paperswithcode"}, "pytorch": {"item_id": "3504505844", "tag": "pytorch"}, "tensorflow": {"item_id": "3504505844", "tag": "tensorflow"}}, "authors": {"160653555": {"item_id": "3504505844", "author_id": "160653555", "name": "Ryan O'Connor", "url": "https://www.assemblyai.com/blog/author/ryan/"}}, "image": {"item_id": "3504505844", "src": "https://lh4.googleusercontent.com/Q_STziz6TIpPtb2lxgLA3G7v9ugxDcX_5D5ZnLBl0ZroHrzfBKy-FXP4KNnUsYrGJn4M8fg32JQWgsX-opK5rNqX0dOxrLffKYib7wKnCAP7wiV2PoCQSH1G9362BHXfkwEMlyjN", "width": "0", "height": "0"}, "images": {"1": {"item_id": "3504505844", "image_id": "1", "src": "https://lh4.googleusercontent.com/Q_STziz6TIpPtb2lxgLA3G7v9ugxDcX_5D5ZnLBl0ZroHrzfBKy-FXP4KNnUsYrGJn4M8fg32JQWgsX-opK5rNqX0dOxrLffKYib7wKnCAP7wiV2PoCQSH1G9362BHXfkwEMlyjN", "width": "0", "height": "0", "credit": "", "caption": "Image source"}, "2": {"item_id": "3504505844", "image_id": "2", "src": "https://www.assemblyai.com/blog/content/images/2021/12/Hobbyist_cropped.png", "width": "960", "height": "499", "credit": "", "caption": ""}, "3": {"item_id": "3504505844", "image_id": "3", "src": "https://www.assemblyai.com/blog/content/images/2021/12/Beginner_cropped.png", "width": "960", "height": "546", "credit": "", "caption": ""}}, "listen_duration_estimate": 2110}, "3650982173": {"item_id": "3650982173", "resolved_id": "3650347890", "given_url": "https://substack.com/redirect/e7484b15-7584-48b5-b946-7fe144ca3241?u=1135489", "given_title": "", "favorite": "0", "status": "1", "time_added": "1656523153", "time_updated": "1657053992", "time_read": "1657053991", "time_favorited": "0", "sort_id": 20, "resolved_title": "How Computational Graphs are Executed in PyTorch", "resolved_url": "https://pytorch.org/blog/how-computational-graphs-are-executed-in-pytorch/?utm_source=substack&utm_medium=email", "excerpt": "This post is based on PyTorch v1.11, so some highlighted parts may differ across versions. The last post showed how PyTorch constructs the graph to calculate the outputs’ derivatives w.r.t. the inputs when executing the forward pass.", "is_article": "1", "is_index": "0", "has_video": "0", "has_image": "1", "word_count": "6160", "lang": "en", "time_to_read": 28, "top_image_url": "https://pytorch.org/", "tags": {"autograd": {"item_id": "3650982173", "tag": "autograd"}, "pytorch": {"item_id": "3650982173", "tag": "pytorch"}}, "authors": {"30891999": {"item_id": "3650982173", "author_id": "30891999", "name": "Preferred Networks", "url": ""}}, "image": {"item_id": "3650982173", "src": "https://pytorch.org/assets/images/backward-grad-fig-1.png", "width": "100", "height": "0"}, "images": {"1": {"item_id": "3650982173", "image_id": "1", "src": "https://pytorch.org/assets/images/backward-grad-fig-1.png", "width": "100", "height": "0", "credit": "", "caption": ""}, "2": {"item_id": "3650982173", "image_id": "2", "src": "https://pytorch.org/assets/images/topological-number-fig-2.png", "width": "100", "height": "0", "credit": "", "caption": ""}, "3": {"item_id": "3650982173", "image_id": "3", "src": "https://pytorch.org/assets/images/node-fig-3.png", "width": "100", "height": "0", "credit": "", "caption": ""}, "4": {"item_id": "3650982173", "image_id": "4", "src": "https://pytorch.org/assets/images/forward-backward-function-fig-4.png", "width": "100", "height": "0", "credit": "", "caption": ""}}, "listen_duration_estimate": 2385}, "1647410488": {"item_id": "1647410488", "resolved_id": "1647410488", "given_url": "https://github.com/yunjey/pytorch-tutorial", "given_title": "", "favorite": "0", "status": "1", "time_added": "1495978036", "time_updated": "1611439795", "time_read": "1510366057", "time_favorited": "0", "sort_id": 21, "resolved_title": "yunjey/pytorch-tutorial", "resolved_url": "https://github.com/yunjey/pytorch-tutorial", "excerpt": "This repository provides tutorial code for deep learning researchers to learn PyTorch. In the tutorial, most of the models were implemented with less than 30 lines of code. Before starting this tutorial, it is recommended to finish Official Pytorch Tutorial.", "is_article": "1", "is_index": "0", "has_video": "0", "has_image": "1", "word_count": "108", "lang": "en", "top_image_url": "https://opengraph.githubassets.com/cab397168adfd41e357bb6585f9527a1219fc4b21e255a4bc3e231ab499a4967/yunjey/pytorch-tutorial", "tags": {"pytorch": {"item_id": "1647410488", "tag": "pytorch"}}, "image": {"item_id": "1647410488", "src": "https://github.com/yunjey/pytorch-tutorial/raw/master/logo/pytorch_logo_2018.svg", "width": "40", "height": "0"}, "images": {"1": {"item_id": "1647410488", "image_id": "1", "src": "https://github.com/yunjey/pytorch-tutorial/raw/master/logo/pytorch_logo_2018.svg", "width": "40", "height": "0", "credit": "", "caption": ""}}, "domain_metadata": {"name": "GitHub", "logo": "https://logo.clearbit.com/github.com?size=800", "greyscale_logo": "https://logo.clearbit.com/github.com?size=800&greyscale=true"}, "listen_duration_estimate": 42}, "3826267628": {"item_id": "3826267628", "resolved_id": "3826267628", "given_url": "https://pytorch.org/blog/pytorch-2.0-release/", "given_title": "", "favorite": "0", "status": "1", "time_added": "1678974244", "time_updated": "1678974514", "time_read": "1678974514", "time_favorited": "0", "sort_id": 22, "resolved_title": "PyTorch 2.0: Our next generation release that is faster, more Pythonic and Dynamic as ever", "resolved_url": "https://pytorch.org/blog/pytorch-2.0-release/", "excerpt": "We are excited to announce the release of PyTorch® 2.0 which we highlighted during the PyTorch Conference on 12/2/22! PyTorch 2.", "is_article": "1", "is_index": "0", "has_video": "0", "has_image": "1", "word_count": "2883", "lang": "en", "time_to_read": 13, "top_image_url": "https://pytorch.org/assets/images/pytorch-logo.png", "tags": {"python": {"item_id": "3826267628", "tag": "python"}, "pytorch": {"item_id": "3826267628", "tag": "pytorch"}}, "authors": {"113212845": {"item_id": "3826267628", "author_id": "113212845", "name": "Team PyTorch", "url": ""}}, "image": {"item_id": "3826267628", "src": "https://pytorch.org/assets/images/pytorch20post.png", "width": "100", "height": "0"}, "images": {"1": {"item_id": "3826267628", "image_id": "1", "src": "https://pytorch.org/assets/images/pytorch20post.png", "width": "100", "height": "0", "credit": "", "caption": ""}}, "listen_duration_estimate": 1116}, "2747149962": {"item_id": "2747149962", "resolved_id": "2747149962", "given_url": "https://www.youtube.com/watch?v=TM_jRrXYXxc&feature=youtu.be&app=desktop", "given_title": "(32) PyTorch Lightning - William Falcon - YouTube", "favorite": "0", "status": "1", "time_added": "1570245437", "time_updated": "1608339164", "time_read": "1576355373", "time_favorited": "0", "sort_id": 23, "resolved_title": "PyTorch Lightning - William Falcon", "resolved_url": "https://www.youtube.com/watch?v=TM_jRrXYXxc&feature=youtu.be&app=desktop", "excerpt": "In recent years, techniques such as 16-bit precision, accumulated gradients and distributed training have allowed models to train in record times.\n\nIn this talk William Falcon goes through the implementation details of the 10 most useful of these techniques, including DataLoaders, 16-bit precision,", "is_article": "0", "is_index": "0", "has_video": "2", "has_image": "1", "word_count": "0", "lang": "en", "tags": {"pytorch": {"item_id": "2747149962", "tag": "pytorch"}}, "authors": {"124666735": {"item_id": "2747149962", "author_id": "124666735", "name": "Kris Skrinak", "url": "https://www.youtube.com/channel/UC2TatV06c8SHsq-oseL-w9Q"}}, "image": {"item_id": "2747149962", "src": "https://i.ytimg.com/vi/TM_jRrXYXxc/maxresdefault.jpg", "width": "1280", "height": "720"}, "images": {"1": {"item_id": "2747149962", "image_id": "1", "src": "https://i.ytimg.com/vi/TM_jRrXYXxc/maxresdefault.jpg", "width": "1280", "height": "720", "credit": "", "caption": ""}}, "videos": {"1": {"item_id": "2747149962", "video_id": "1", "src": "http://www.youtube.com/watch?v=TM_jRrXYXxc", "width": "0", "height": "0", "type": "1", "vid": "TM_jRrXYXxc", "length": "3428"}}, "domain_metadata": {"name": "YouTube", "logo": "https://logo.clearbit.com/youtube.com?size=800", "greyscale_logo": "https://logo.clearbit.com/youtube.com?size=800&greyscale=true"}, "listen_duration_estimate": 0}, "2901913565": {"item_id": "2901913565", "resolved_id": "2901913565", "given_url": "https://www.reddit.com/r/MachineLearning/comments/fc3rgq/p_pytorchoptimizer_collections_of_ready_to_use/", "given_title": "[P] pytorch-optimizer -- collections of ready to use optimization algorithm", "favorite": "0", "status": "1", "time_added": "1583116976", "time_updated": "1612385105", "time_read": "1583785007", "time_favorited": "0", "sort_id": 24, "resolved_title": "[P] pytorch-optimizer -- collections of ready to use optimization algorithms for PyTorch", "resolved_url": "https://www.reddit.com/r/MachineLearning/comments/fc3rgq/p_pytorchoptimizer_collections_of_ready_to_use/", "excerpt": "pytorch-optimizer -- collections of ready to use optimization algorithms for PyTorch, includes: AccSGD, AdaBound, AdaMod, DiffGrad, Lamb, RAdam, Novograd, Yogi.", "is_article": "0", "is_index": "0", "has_video": "0", "has_image": "1", "word_count": "55", "lang": "en", "top_image_url": "https://external-preview.redd.it/tqsfZ-m6um-BHNzUi3X4DDO6-Y5wI_A4zlNFZIfzXx8.jpg?auto=webp&s=4c2d953c77381d1ec4523fb9cae0f7ee4abff8b1", "tags": {"machine-learning": {"item_id": "2901913565", "tag": "machine-learning"}, "pytorch": {"item_id": "2901913565", "tag": "pytorch"}}, "image": {"item_id": "2901913565", "src": "https://preview.redd.it/hve8nnrwn5k41.png?width=800&format=png&auto=webp&s=55dcb27769aba95b35b35e740bc0ff307e4f13ef", "width": "0", "height": "0"}, "images": {"1": {"item_id": "2901913565", "image_id": "1", "src": "https://preview.redd.it/hve8nnrwn5k41.png?width=800&format=png&auto=webp&s=55dcb27769aba95b35b35e740bc0ff307e4f13ef", "width": "0", "height": "0", "credit": "", "caption": ""}}, "domain_metadata": {"name": "Reddit", "logo": "https://logo.clearbit.com/reddit.com?size=800", "greyscale_logo": "https://logo.clearbit.com/reddit.com?size=800&greyscale=true"}, "listen_duration_estimate": 21}, "3336624850": {"item_id": "3336624850", "resolved_id": "3336624897", "given_url": "https://towardsdatascience.com/29-pytorch-snippets-to-speed-up-your-machine-learning-cycle-38e659e26b12?source=rss----7f60cf5620c9---4", "given_title": "29 Pytorch Snippets to Speed Up Your Machine Learning Cycle", "favorite": "0", "status": "1", "time_added": "1621520636", "time_updated": "1621828400", "time_read": "1621828399", "time_favorited": "0", "sort_id": 25, "resolved_title": "29 Pytorch Snippets to Speed Up Your Machine Learning Cycle", "resolved_url": "https://towardsdatascience.com/29-pytorch-snippets-to-speed-up-your-machine-learning-cycle-38e659e26b12", "excerpt": "I am a huge advocate for snippets of code to create faster cycles of iteration over traditional machine learning pipelines.", "is_article": "1", "is_index": "0", "has_video": "0", "has_image": "1", "word_count": "798", "lang": "en", "time_to_read": 4, "top_image_url": "https://miro.medium.com/max/1200/0*4vu8nj6_Ge9OBh2u", "tags": {"pytorch": {"item_id": "3336624850", "tag": "pytorch"}}, "authors": {"148189034": {"item_id": "3336624850", "author_id": "148189034", "name": "Medium", "url": "https://lucas-soares.medium.com"}}, "image": {"item_id": "3336624850", "src": "https://miro.medium.com/max/6048/0*4vu8nj6_Ge9OBh2u", "width": "3024", "height": "4032"}, "images": {"1": {"item_id": "3336624850", "image_id": "1", "src": "https://miro.medium.com/max/6048/0*4vu8nj6_Ge9OBh2u", "width": "3024", "height": "4032", "credit": "Ali Shah Lakhani on Unsplash", "caption": ""}, "2": {"item_id": "3336624850", "image_id": "2", "src": "https://miro.medium.com/fit/c/56/56/1*EOaBISrt1c6Zs_8QDHRxfQ.png", "width": "28", "height": "28", "credit": "", "caption": ""}}, "domain_metadata": {"name": "Towards Data Science", "logo": "https://logo.clearbit.com/towardsdatascience.com?size=800", "greyscale_logo": "https://logo.clearbit.com/towardsdatascience.com?size=800&greyscale=true"}, "listen_duration_estimate": 309}, "2899570222": {"item_id": "2899570222", "resolved_id": "2899555076", "given_url": "https://towardsdatascience.com/3d-deep-learning-made-easier-a-brief-introduction-to-facebooks-pytorch3d-framework-9fe3075f388a?source=rss----7f60cf5620c9---4", "given_title": "3D Deep Learning Made Easier — A Brief Introduction to Facebook’s PyTorch3D", "favorite": "0", "status": "1", "time_added": "1582915228", "time_updated": "1608259881", "time_read": "1583785007", "time_favorited": "0", "sort_id": 26, "resolved_title": "3D Deep Learning Made Easier", "resolved_url": "https://towardsdatascience.com/3d-deep-learning-made-easier-a-brief-introduction-to-facebooks-pytorch3d-framework-9fe3075f388a", "excerpt": "As an open source machine learning library, PyTorch has been gaining more and more popularity among artificial intelligence (AI) researchers for various applications, including computer vision and natural language processing.", "is_article": "1", "is_index": "0", "has_video": "0", "has_image": "1", "word_count": "443", "lang": "en", "top_image_url": "https://miro.medium.com/max/1200/1*I94v1tDDu4q_teZuFtlqZQ.png", "tags": {"pytorch": {"item_id": "2899570222", "tag": "pytorch"}}, "authors": {"125438474": {"item_id": "2899570222", "author_id": "125438474", "name": "Yong Cui", "url": "https://medium.com/@yong.cui01"}}, "image": {"item_id": "2899570222", "src": "https://miro.medium.com/max/1400/1*I94v1tDDu4q_teZuFtlqZQ.png", "width": "700", "height": "178"}, "images": {"1": {"item_id": "2899570222", "image_id": "1", "src": "https://miro.medium.com/max/1400/1*I94v1tDDu4q_teZuFtlqZQ.png", "width": "700", "height": "178", "credit": "", "caption": "Source: Facebook Research GitHub Page"}, "2": {"item_id": "2899570222", "image_id": "2", "src": "https://miro.medium.com/fit/c/56/56/1*RmtyuwLMWe8Ng4p_3SGzYw@2x.jpeg", "width": "28", "height": "28", "credit": "", "caption": ""}, "3": {"item_id": "2899570222", "image_id": "3", "src": "https://miro.medium.com/max/1400/1*95dTKIhF_8nYVwa_M0kChw.png", "width": "700", "height": "379", "credit": "Source: PyTorch3D", "caption": "Image Batching 2D vs. 3D"}, "4": {"item_id": "2899570222", "image_id": "4", "src": "https://miro.medium.com/max/1400/1*f1kbAXpwX93bmt0TJnIsVg.gif", "width": "700", "height": "396", "credit": "Source: Facebook", "caption": "Meshes as Data Structure in PyTorch3D"}, "5": {"item_id": "2899570222", "image_id": "5", "src": "https://miro.medium.com/max/1400/1*O_YFJAD8wlpsgfzvGyVmjA.gif", "width": "700", "height": "396", "credit": "Source: Facebook", "caption": "Operations on Triangle Meshes"}, "6": {"item_id": "2899570222", "image_id": "6", "src": "https://miro.medium.com/max/1400/1*cWBqxOk9YlV-Ja9Ol6m-GA.gif", "width": "700", "height": "396", "credit": "Source: Facebook", "caption": "Differentiable Mesh Renderer"}}, "domain_metadata": {"name": "Towards Data Science", "logo": "https://logo.clearbit.com/towardsdatascience.com?size=800", "greyscale_logo": "https://logo.clearbit.com/towardsdatascience.com?size=800&greyscale=true"}, "listen_duration_estimate": 171}, "3607009780": {"item_id": "3607009780", "resolved_id": "3607009780", "given_url": "https://towardsdatascience.com/a-comprehensive-guide-to-image-augmentation-using-pytorch-fb162f2444be", "given_title": "A Comprehensive Guide to Image Augmentation using Pytorch", "favorite": "0", "status": "1", "time_added": "1651233777", "time_updated": "1653700025", "time_read": "1653700025", "time_favorited": "0", "sort_id": 27, "resolved_title": "A Comprehensive Guide to Image Augmentation using Pytorch", "resolved_url": "https://towardsdatascience.com/a-comprehensive-guide-to-image-augmentation-using-pytorch-fb162f2444be", "excerpt": "Lately, while working on my research project, I began to understand the importance of image augmentation techniques. The aim of this project is to train a robust generative model able to reconstruct the original images.", "is_article": "1", "is_index": "0", "has_video": "0", "has_image": "1", "word_count": "919", "lang": "en", "time_to_read": 4, "top_image_url": "https://miro.medium.com/max/1000/0*kXJRrpkDPfjh6OqK", "tags": {"image-augmentation": {"item_id": "3607009780", "tag": "image-augmentation"}, "pytorch": {"item_id": "3607009780", "tag": "pytorch"}}, "authors": {"142761118": {"item_id": "3607009780", "author_id": "142761118", "name": "Eugenia Anello", "url": "https://eugenia-anello.medium.com"}}, "image": {"item_id": "3607009780", "src": "https://miro.medium.com/max/1400/0*kXJRrpkDPfjh6OqK", "width": "700", "height": "467"}, "images": {"1": {"item_id": "3607009780", "image_id": "1", "src": "https://miro.medium.com/max/1400/0*kXJRrpkDPfjh6OqK", "width": "700", "height": "467", "credit": "Dan Gold on Unsplash", "caption": ""}, "2": {"item_id": "3607009780", "image_id": "2", "src": "https://miro.medium.com/max/1400/1*h6mhVP2rGzE0jNGB0z6GTQ.png", "width": "700", "height": "349", "credit": "", "caption": "Surface Crack Dataset. Illustration by Author."}, "3": {"item_id": "3607009780", "image_id": "3", "src": "https://miro.medium.com/max/1400/1*toq7XZboBk_RJh6wSomWxQ.png", "width": "700", "height": "238", "credit": "", "caption": "Resized Images. Illustration by Author"}, "4": {"item_id": "3607009780", "image_id": "4", "src": "https://miro.medium.com/max/1400/1*-w9Y2_hlniohGFr8LracuA.png", "width": "700", "height": "327", "credit": "", "caption": "Original image vs Grayscale image. Illustration by Author"}, "5": {"item_id": "3607009780", "image_id": "5", "src": "https://miro.medium.com/max/1400/1*_zV_IGsOlEJUfJTXKPLxYQ.png", "width": "700", "height": "349", "credit": "", "caption": "Original Image vs Normalized Image. Illustration by Author"}, "6": {"item_id": "3607009780", "image_id": "6", "src": "https://miro.medium.com/max/1400/1*MkqqlpJ2RE9zpCBEXizSUw.png", "width": "700", "height": "182", "credit": "", "caption": "Different rotated images. Illustration by Author"}, "7": {"item_id": "3607009780", "image_id": "7", "src": "https://miro.medium.com/max/1400/1*u2meWbl68LxxrylUlqHSDg.png", "width": "700", "height": "188", "credit": "", "caption": "Center crop. Illustration by Author"}, "8": {"item_id": "3607009780", "image_id": "8", "src": "https://miro.medium.com/max/1400/1*svsrkQNI7QOFhGmA6IJg5A.png", "width": "700", "height": "194", "credit": "", "caption": "Random Crop. Illustration by Author"}, "9": {"item_id": "3607009780", "image_id": "9", "src": "https://miro.medium.com/max/1400/1*FflCMpKGYwUpCv_Z7gxutQ.png", "width": "700", "height": "252", "credit": "", "caption": "Gaussian Blur. Illustration by Author"}, "10": {"item_id": "3607009780", "image_id": "10", "src": "https://miro.medium.com/max/1400/1*v3KYy1s--059Z_QiYHUl4w.png", "width": "700", "height": "194", "credit": "", "caption": "Gaussian Noise. Illustration by Author"}, "11": {"item_id": "3607009780", "image_id": "11", "src": "https://miro.medium.com/max/1400/1*yNgdDR3rMLYw4Fdo5EZsDQ.png", "width": "700", "height": "244", "credit": "", "caption": "Random Blocks. Illustration by Author."}, "12": {"item_id": "3607009780", "image_id": "12", "src": "https://miro.medium.com/max/1400/1*ESmb9wYhnB_mjFxCkvSr7w.png", "width": "700", "height": "249", "credit": "", "caption": "Central Regione. Illustration by Author."}}, "domain_metadata": {"name": "Towards Data Science", "logo": "https://logo.clearbit.com/towardsdatascience.com?size=800", "greyscale_logo": "https://logo.clearbit.com/towardsdatascience.com?size=800&greyscale=true"}, "listen_duration_estimate": 356}, "3934751661": {"item_id": "3934751661", "resolved_id": "3934751661", "given_url": "https://pytorch.org/blog/accelerated-cpu-inference/", "given_title": "Accelerated CPU Inference with PyTorch Inductor using torch.compile", "favorite": "0", "status": "1", "time_added": "1695408630", "time_updated": "1695565834", "time_read": "1695565834", "time_favorited": "0", "sort_id": 28, "resolved_title": "Accelerated CPU Inference with PyTorch Inductor using torch.compile", "resolved_url": "https://pytorch.org/blog/accelerated-cpu-inference/", "excerpt": "The PyTorch Inductor C++/OpenMP backend enables users to take advantage of modern CPU architectures and parallel processing to accelerate computations.", "is_article": "1", "is_index": "0", "has_video": "0", "has_image": "1", "word_count": "1844", "lang": "en", "time_to_read": 8, "top_image_url": "https://pytorch.org/assets/images/pytorch-logo.png", "tags": {"pytorch": {"item_id": "3934751661", "tag": "pytorch"}}, "image": {"item_id": "3934751661", "src": "https://pytorch.org/assets/images/accelerated-cpu-inference/f1-pytorch-inference-speedup-ratio-trend-multi.png.rendition.intel.web.1648.927.png", "width": "0", "height": "0"}, "images": {"1": {"item_id": "3934751661", "image_id": "1", "src": "https://pytorch.org/assets/images/accelerated-cpu-inference/f1-pytorch-inference-speedup-ratio-trend-multi.png.rendition.intel.web.1648.927.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "2": {"item_id": "3934751661", "image_id": "2", "src": "https://pytorch.org/assets/images/accelerated-cpu-inference/f2-torchbench-fp32-performance-multithread.png.rendition.intel.web.1648.927.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "3": {"item_id": "3934751661", "image_id": "3", "src": "https://pytorch.org/assets/images/accelerated-cpu-inference/f3-huggingface-fp32-performance-multithread.png.rendition.intel.web.1648.927.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "4": {"item_id": "3934751661", "image_id": "4", "src": "https://pytorch.org/assets/images/accelerated-cpu-inference/f4-timm-fp32-performance-multithread.png.rendition.intel.web.1648.927.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "5": {"item_id": "3934751661", "image_id": "5", "src": "https://pytorch.org/assets/images/accelerated-cpu-inference/f5-torchbench-fp32-performance-single-thread.png.rendition.intel.web.1648.927.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "6": {"item_id": "3934751661", "image_id": "6", "src": "https://pytorch.org/assets/images/accelerated-cpu-inference/f6-huggingface-fp32-performance-single-thread.png.rendition.intel.web.1648.927.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "7": {"item_id": "3934751661", "image_id": "7", "src": "https://pytorch.org/assets/images/accelerated-cpu-inference/f7-timm-fp32-performance-single-thread.png.rendition.intel.web.1648.927.png", "width": "0", "height": "0", "credit": "", "caption": ""}}, "listen_duration_estimate": 714}, "3334343455": {"item_id": "3334343455", "resolved_id": "3334343475", "given_url": "https://towardsdatascience.com/an-introduction-of-pytorch-lightning-230d03bcb262?source=rss----7f60cf5620c9---4", "given_title": "An Introduction to PyTorch Lightning", "favorite": "0", "status": "1", "time_added": "1621289209", "time_updated": "1621356837", "time_read": "1621356837", "time_favorited": "0", "sort_id": 29, "resolved_title": "An Introduction to PyTorch Lightning", "resolved_url": "https://towardsdatascience.com/an-introduction-of-pytorch-lightning-230d03bcb262", "excerpt": "Word on the street is that PyTorch lightning is a much better version of normal PyTorch.", "is_article": "1", "is_index": "0", "has_video": "0", "has_image": "1", "word_count": "1225", "lang": "en", "time_to_read": 6, "top_image_url": "https://miro.medium.com/max/1200/1*-GDzOk_UJElhGtnc9g6zHA.png", "tags": {"machine-learning": {"item_id": "3334343455", "tag": "machine-learning"}, "python": {"item_id": "3334343455", "tag": "python"}, "pytorch": {"item_id": "3334343455", "tag": "pytorch"}}, "authors": {"150606160": {"item_id": "3334343455", "author_id": "150606160", "name": "medium", "url": "https://medium.com/@AnveeNaik"}}, "image": {"item_id": "3334343455", "src": "https://miro.medium.com/fit/c/56/56/1*Aj8SOZYL_d1TtCs0kCa4zw.jpeg", "width": "28", "height": "28"}, "images": {"1": {"item_id": "3334343455", "image_id": "1", "src": "https://miro.medium.com/fit/c/56/56/1*Aj8SOZYL_d1TtCs0kCa4zw.jpeg", "width": "28", "height": "28", "credit": "", "caption": ""}, "2": {"item_id": "3334343455", "image_id": "2", "src": "https://miro.medium.com/max/2510/1*-GDzOk_UJElhGtnc9g6zHA.png", "width": "1255", "height": "781", "credit": "Image by Author", "caption": "Comparison Between Two Frameworks"}, "3": {"item_id": "3334343455", "image_id": "3", "src": "https://miro.medium.com/max/1920/1*Z7ZzjPsEsbzUkwGyRhRxiw.png", "width": "960", "height": "540", "credit": "Image by Author", "caption": "Comparison of Model"}, "4": {"item_id": "3334343455", "image_id": "4", "src": "https://miro.medium.com/max/2268/1*m3up1rTfU_vZbX2O2ShbOg.png", "width": "1134", "height": "244", "credit": "Image by Author", "caption": "Loss Comparision"}, "5": {"item_id": "3334343455", "image_id": "5", "src": "https://miro.medium.com/max/1918/1*UV-AsA649-aCWzb8olXLdw.png", "width": "959", "height": "441", "credit": "Image by Author", "caption": "Optimizer Comparision"}, "6": {"item_id": "3334343455", "image_id": "6", "src": "https://miro.medium.com/max/2278/1*jF7AdkJ9mtlvqrvYBpwDpQ.png", "width": "1139", "height": "391", "credit": "Image by Author", "caption": "Train and Validation comparison"}}, "domain_metadata": {"name": "Towards Data Science", "logo": "https://logo.clearbit.com/towardsdatascience.com?size=800", "greyscale_logo": "https://logo.clearbit.com/towardsdatascience.com?size=800&greyscale=true"}, "listen_duration_estimate": 474}, "3765613172": {"item_id": "3765613172", "resolved_id": "3765613188", "given_url": "https://towardsdatascience.com/artificial-intelligence-for-geospatial-analysis-with-pytorchs-torchgeo-part-3-7521131f30b1?source=rss----7f60cf5620c9---4", "given_title": "Artificial Intelligence for Geospatial Analysis with Pytorch’s TorchGeo (pa", "favorite": "0", "status": "1", "time_added": "1671021651", "time_updated": "1706833159", "time_read": "1671403211", "time_favorited": "0", "sort_id": 30, "resolved_title": "Artificial Intelligence for Geospatial Analysis with Pytorch’s TorchGeo (Part 3)", "resolved_url": "https://towardsdatascience.com/artificial-intelligence-for-geospatial-analysis-with-pytorchs-torchgeo-part-3-7521131f30b1", "excerpt": "In the previous stories (Part 1 and Part 2), we saw how to prepare a dataset of raster (multispectral) images and combined them with the corresponding labels (ground truth masks) using the IntersectionDataset provided by TorchGeo.", "is_article": "1", "is_index": "0", "has_video": "0", "has_image": "0", "word_count": "1794", "lang": "en", "time_to_read": 8, "top_image_url": "https://miro.medium.com/max/1200/0*vm3VRhTtsjgUTJWF", "tags": {"geometry": {"item_id": "3765613172", "tag": "geometry"}, "programming": {"item_id": "3765613172", "tag": "programming"}, "pytorch": {"item_id": "3765613172", "tag": "pytorch"}, "spatial": {"item_id": "3765613172", "tag": "spatial"}}, "authors": {"143259721": {"item_id": "3765613172", "author_id": "143259721", "name": "Maurício Cordeiro", "url": "https://cordmaur.medium.com"}}, "domain_metadata": {"name": "Towards Data Science", "logo": "https://logo.clearbit.com/towardsdatascience.com?size=800", "greyscale_logo": "https://logo.clearbit.com/towardsdatascience.com?size=800&greyscale=true"}, "listen_duration_estimate": 694}, "2944238431": {"item_id": "2944238431", "resolved_id": "2944238466", "given_url": "https://www.kdnuggets.com/2020/04/pytorch-models-torchlayers.html", "given_title": "Build PyTorch Models Easily Using torchlayers", "favorite": "0", "status": "1", "time_added": "1586442261", "time_updated": "1612385105", "time_read": "1586972776", "time_favorited": "0", "sort_id": 31, "resolved_title": "Build PyTorch Models Easily Using torchlayers", "resolved_url": "https://www.kdnuggets.com/build-pytorch-models-easily-using-torchlayers.html/", "excerpt": "torchlayers aims to do what Keras did for TensorFlow, providing a higher-level model-building API and some handy defaults and add-ons useful for crafting PyTorch neural networks. By , KDnuggets.", "is_article": "1", "is_index": "0", "has_video": "0", "has_image": "1", "word_count": "509", "lang": "en", "top_image_url": "https://www.kdnuggets.com/wp-content/uploads/torchlayers-logo.jpg", "tags": {"machine-learning": {"item_id": "2944238431", "tag": "machine-learning"}, "pytorch": {"item_id": "2944238431", "tag": "pytorch"}}, "authors": {"77311567": {"item_id": "2944238431", "author_id": "77311567", "name": "Matthew Mayo", "url": "https://www.kdnuggets.com/author/matt-mayo"}}, "image": {"item_id": "2944238431", "src": "https://www.kdnuggets.com/wp-content/uploads/torchlayers.jpg", "width": "100", "height": "0"}, "images": {"1": {"item_id": "2944238431", "image_id": "1", "src": "https://www.kdnuggets.com/wp-content/uploads/torchlayers.jpg", "width": "100", "height": "0", "credit": "", "caption": ""}}, "domain_metadata": {"name": "KDnuggets", "logo": "https://logo.clearbit.com/kdnuggets.com?size=800", "greyscale_logo": "https://logo.clearbit.com/kdnuggets.com?size=800&greyscale=true"}, "listen_duration_estimate": 197}, "2898333397": {"item_id": "2898333397", "resolved_id": "2898333425", "given_url": "https://towardsdatascience.com/how-to-build-a-strong-baseline-recommender-using-pytorch-on-a-regular-laptop-2ad497504fe6?source=rss----7f60cf5620c9---4", "given_title": "Building a strong baseline recommender using PyTorch, on a regular laptop", "favorite": "0", "status": "1", "time_added": "1582811422", "time_updated": "1608259783", "time_read": "1583785007", "time_favorited": "0", "sort_id": 32, "resolved_title": "Building a strong baseline recommender using PyTorch, on a regular laptop", "resolved_url": "https://towardsdatascience.com/how-to-build-a-strong-baseline-recommender-using-pytorch-on-a-regular-laptop-2ad497504fe6", "excerpt": "Recommender systems (“recsys”) are a fairly old topic that started back in the 1990s. The key idea — we can use opinions and behaviours of users to suggest and personalize relevant and interesting content for them.", "is_article": "1", "is_index": "0", "has_video": "0", "has_image": "1", "word_count": "2337", "lang": "en", "time_to_read": 11, "top_image_url": "https://miro.medium.com/max/1200/1*L5Cj9seu4n7dFmep1h5osQ.png", "tags": {"pytorch": {"item_id": "2898333397", "tag": "pytorch"}, "recommenders": {"item_id": "2898333397", "tag": "recommenders"}}, "authors": {"104089372": {"item_id": "2898333397", "author_id": "104089372", "name": "Eugene Yan", "url": "https://towardsdatascience.com/@eugeneyan"}}, "image": {"item_id": "2898333397", "src": "https://miro.medium.com/max/3200/1*L5Cj9seu4n7dFmep1h5osQ.png", "width": "1600", "height": "616"}, "images": {"1": {"item_id": "2898333397", "image_id": "1", "src": "https://miro.medium.com/max/3200/1*L5Cj9seu4n7dFmep1h5osQ.png", "width": "1600", "height": "616", "credit": "", "caption": ""}, "2": {"item_id": "2898333397", "image_id": "2", "src": "https://miro.medium.com/max/1878/0*BFdXY6PR5Ze9O0u1.png", "width": "939", "height": "856", "credit": "", "caption": ""}, "3": {"item_id": "2898333397", "image_id": "3", "src": "https://miro.medium.com/max/1878/0*4xjkV_fs_ASnKmUp.png", "width": "939", "height": "350", "credit": "", "caption": ""}, "4": {"item_id": "2898333397", "image_id": "4", "src": "https://miro.medium.com/max/1854/0*32wjwkcI9S7cJS2R.png", "width": "927", "height": "352", "credit": "", "caption": ""}, "5": {"item_id": "2898333397", "image_id": "5", "src": "https://miro.medium.com/max/1862/0*uleF1RfiBXi5xqw2.png", "width": "931", "height": "345", "credit": "", "caption": ""}, "6": {"item_id": "2898333397", "image_id": "6", "src": "https://miro.medium.com/max/1848/0*Bd9VzcvUy4ekflAL.png", "width": "924", "height": "345", "credit": "", "caption": ""}, "7": {"item_id": "2898333397", "image_id": "7", "src": "https://miro.medium.com/max/1848/0*nh1MJADo0Z8_cpNB.png", "width": "924", "height": "345", "credit": "", "caption": ""}, "8": {"item_id": "2898333397", "image_id": "8", "src": "https://miro.medium.com/max/1848/0*cGHmcdfPAIYjZyGT.png", "width": "924", "height": "345", "credit": "", "caption": ""}, "9": {"item_id": "2898333397", "image_id": "9", "src": "https://miro.medium.com/max/2668/0*5kYGaQB-_vpbJ3Av.png", "width": "1334", "height": "624", "credit": "", "caption": ""}}, "domain_metadata": {"name": "Towards Data Science", "logo": "https://logo.clearbit.com/towardsdatascience.com?size=800", "greyscale_logo": "https://logo.clearbit.com/towardsdatascience.com?size=800&greyscale=true"}, "listen_duration_estimate": 905}, "3797143148": {"item_id": "3797143148", "resolved_id": "3797143148", "given_url": "https://sebastianraschka.com/blog/2023/data-augmentation-pytorch.html", "given_title": "Comparing Different Automatic Image Augmentation Methods in PyTorch", "favorite": "0", "status": "1", "time_added": "1675102295", "time_updated": "1675108419", "time_read": "1675108419", "time_favorited": "0", "sort_id": 33, "resolved_title": "Comparing Different Automatic Image Augmentation Methods in PyTorch", "resolved_url": "https://sebastianraschka.com/blog/2023/data-augmentation-pytorch.html", "excerpt": "One of the best ways to reduce overfitting is to collect more (good-quality) data. However, collecting more data is not always feasible or can be very expensive. A related technique is data augmentation.", "is_article": "1", "is_index": "0", "has_video": "0", "has_image": "1", "word_count": "1494", "lang": "en", "time_to_read": 7, "top_image_url": "https://sebastianraschka.com/images/blog/2023/data-augmentation-pytorch/hero.jpg", "tags": {"data-augmentation": {"item_id": "3797143148", "tag": "data-augmentation"}, "machine-learning": {"item_id": "3797143148", "tag": "machine-learning"}, "pytorch": {"item_id": "3797143148", "tag": "pytorch"}}, "authors": {"10017863": {"item_id": "3797143148", "author_id": "10017863", "name": "Sebastian Raschka", "url": ""}}, "image": {"item_id": "3797143148", "src": "https://sebastianraschka.com/images/blog/2023/data-augmentation-pytorch/augmentation-results.png", "width": "0", "height": "0"}, "images": {"1": {"item_id": "3797143148", "image_id": "1", "src": "https://sebastianraschka.com/images/blog/2023/data-augmentation-pytorch/augmentation-results.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "2": {"item_id": "3797143148", "image_id": "2", "src": "https://sebastianraschka.com/images/blog/2023/data-augmentation-pytorch/autoaugment.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "3": {"item_id": "3797143148", "image_id": "3", "src": "https://sebastianraschka.com/images/blog/2023/data-augmentation-pytorch/augmix.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "4": {"item_id": "3797143148", "image_id": "4", "src": "https://sebastianraschka.com/images/blog/2023/data-augmentation-pytorch/trivialaugment.png", "width": "0", "height": "0", "credit": "", "caption": ""}}, "listen_duration_estimate": 578}, "2186373608": {"item_id": "2186373608", "resolved_id": "2186373608", "given_url": "https://pytorch.org/tutorials/advanced/cpp_extension.html", "given_title": "Custom C   and CUDA Extensions — PyTorch Tutorials 1.7.0 documentation", "favorite": "0", "status": "1", "time_added": "1606677106", "time_updated": "1608290484", "time_read": "1608290484", "time_favorited": "0", "sort_id": 34, "resolved_title": "Custom C++ and CUDA Extensions — PyTorch Tutorials 1.10.0+cu102 documentation", "resolved_url": "https://pytorch.org/tutorials/advanced/cpp_extension.html", "excerpt": "PyTorch provides a plethora of operations related to neural networks, arbitrary tensor algebra, data wrangling and other purposes. However, you may still find yourself in need of a more customized operation.", "is_article": "1", "is_index": "0", "has_video": "0", "has_image": "0", "word_count": "6897", "lang": "en", "time_to_read": 31, "tags": {"cuda": {"item_id": "2186373608", "tag": "cuda"}, "pytorch": {"item_id": "2186373608", "tag": "pytorch"}}, "listen_duration_estimate": 2670}, "3512904708": {"item_id": "3512904708", "resolved_id": "3512904708", "given_url": "http://www.stochasticlifestyle.com/engineering-trade-offs-in-automatic-differentiation-from-tensorflow-and-pytorch-to-jax-and-julia/", "given_title": "Engineering Trade-Offs in Automatic Differentiation: from TensorFlow and Py", "favorite": "0", "status": "1", "time_added": "1640567984", "time_updated": "1640623178", "time_read": "1640623178", "time_favorited": "0", "sort_id": 35, "resolved_title": "Engineering Trade-Offs in Automatic Differentiation: from TensorFlow and PyTorch to Jax and Julia", "resolved_url": "http://www.stochasticlifestyle.com/engineering-trade-offs-in-automatic-differentiation-from-tensorflow-and-pytorch-to-jax-and-julia/", "excerpt": "To understand the differences between automatic differentiation libraries, let's talk about the engineering trade-offs that were made.", "is_article": "1", "is_index": "0", "has_video": "0", "has_image": "0", "word_count": "2233", "lang": "en", "time_to_read": 10, "top_image_url": "http://www.stochasticlifestyle.com/wp-content/themes/chrisrack/style/faviPic2.PNG", "tags": {"pytorch": {"item_id": "3512904708", "tag": "pytorch"}, "tensorflow": {"item_id": "3512904708", "tag": "tensorflow"}}, "listen_duration_estimate": 864}, "2957915212": {"item_id": "2957915212", "resolved_id": "2957915212", "given_url": "https://ai.facebook.com/blog/facebook-ai-aws-partner-to-release-new-pytorch-libraries-/", "given_title": "Facebook AI, AWS partner to release new PyTorch libraries", "favorite": "0", "status": "1", "time_added": "1587578587", "time_updated": "1587747132", "time_read": "1587747132", "time_favorited": "0", "sort_id": 36, "resolved_title": "Facebook AI, AWS partner to release new PyTorch libraries", "resolved_url": "https://ai.facebook.com/blog/facebook-ai-aws-partner-to-release-new-pytorch-libraries-/", "excerpt": "As part of the broader PyTorch community, Facebook AI and AWS engineers have partnered to develop new libraries targeted at large-scale elastic and fault-tolerant model training and high-performance PyTorch model deployment.", "is_article": "1", "is_index": "0", "has_video": "0", "has_image": "0", "word_count": "344", "lang": "en", "tags": {"pytorch": {"item_id": "2957915212", "tag": "pytorch"}}, "listen_duration_estimate": 133}, "2898924150": {"item_id": "2898924150", "resolved_id": "2898664670", "given_url": "https://towardsdatascience.com/from-pytorch-to-pytorch-lightning-a-gentle-introduction-b371b7caaf09?source=rss----7f60cf5620c9---4", "given_title": "From PyTorch to PyTorch Lightning — A gentle introduction", "favorite": "0", "status": "1", "time_added": "1582892394", "time_updated": "1596764252", "time_read": "1583785007", "time_favorited": "0", "sort_id": 37, "resolved_title": "From PyTorch to PyTorch Lightning", "resolved_url": "https://medium.com/@_willfalcon/from-pytorch-to-pytorch-lightning-a-gentle-introduction-b371b7caaf09", "excerpt": "This post answers the most frequent question about why you need Lightning if you’re using PyTorch. PyTorch is extremely easy to use to build complex AI models.", "is_article": "1", "is_index": "0", "has_video": "0", "has_image": "1", "word_count": "1581", "lang": "en", "time_to_read": 7, "top_image_url": "https://miro.medium.com/max/951/1*DgYiXo_5v3Zp68qGONosWw.png", "tags": {"pytorch": {"item_id": "2898924150", "tag": "pytorch"}}, "authors": {"26231656": {"item_id": "2898924150", "author_id": "26231656", "name": "William Falcon", "url": "https://medium.com/@_willfalcon"}}, "image": {"item_id": "2898924150", "src": "https://miro.medium.com/max/1600/1*oEkULsraelP7wNH6F8_zGg.png", "width": "531", "height": "147"}, "images": {"1": {"item_id": "2898924150", "image_id": "1", "src": "https://miro.medium.com/max/1600/1*oEkULsraelP7wNH6F8_zGg.png", "width": "531", "height": "147", "credit": "", "caption": "PyTorch Lightning was created while doing PhD research at both NYU and FAIR"}, "2": {"item_id": "2898924150", "image_id": "2", "src": "https://miro.medium.com/max/2020/1*SjW_ILtdER7gbBMIzxicLA.png", "width": "1010", "height": "69", "credit": "", "caption": ""}, "3": {"item_id": "2898924150", "image_id": "3", "src": "https://miro.medium.com/max/1638/1*EMpOIboMGGz9F1mNtQGp_g.png", "width": "819", "height": "338", "credit": "", "caption": ""}, "4": {"item_id": "2898924150", "image_id": "4", "src": "https://miro.medium.com/max/2310/1*b81_j__xv8M0Bb6nFTXbAA.png", "width": "1155", "height": "584", "credit": "", "caption": ""}, "5": {"item_id": "2898924150", "image_id": "5", "src": "https://miro.medium.com/max/1600/1*wS0o4efr2DQnDN6NJUTMvg.png", "width": "520", "height": "654", "credit": "", "caption": ""}, "6": {"item_id": "2898924150", "image_id": "6", "src": "https://miro.medium.com/max/1902/1*DgYiXo_5v3Zp68qGONosWw.png", "width": "951", "height": "625", "credit": "illustration by: William Falcon", "caption": "3-layer network"}, "7": {"item_id": "2898924150", "image_id": "7", "src": "https://miro.medium.com/max/1600/1*oq6G91hMTqHlvxgGfsgtcw.png", "width": "497", "height": "66", "credit": "", "caption": ""}, "8": {"item_id": "2898924150", "image_id": "8", "src": "https://miro.medium.com/max/5668/1*_mbNZKVOUQLLAAxMSl9bfg.png", "width": "2834", "height": "1812", "credit": "", "caption": ""}, "9": {"item_id": "2898924150", "image_id": "9", "src": "https://miro.medium.com/max/1600/0*XGBPxYSO2-hGEXNV.png", "width": "594", "height": "361", "credit": "", "caption": "Source: Wikipedia"}, "10": {"item_id": "2898924150", "image_id": "10", "src": "https://miro.medium.com/max/8172/1*IUDtNdGW-Cpk6Gc0mQKZVw.jpeg", "width": "4086", "height": "2152", "credit": "", "caption": ""}, "11": {"item_id": "2898924150", "image_id": "11", "src": "https://miro.medium.com/max/7392/1*r9w_K-bagPGRHIi_TgwjLQ.jpeg", "width": "3696", "height": "632", "credit": "", "caption": ""}, "12": {"item_id": "2898924150", "image_id": "12", "src": "https://miro.medium.com/max/1688/1*Zf3m5rYC8RbKuFhtsWjskA.png", "width": "844", "height": "174", "credit": "", "caption": ""}, "13": {"item_id": "2898924150", "image_id": "13", "src": "https://miro.medium.com/max/5168/1*_b5KEGf9bclvvUL2RdO-fA.jpeg", "width": "2584", "height": "668", "credit": "", "caption": ""}, "14": {"item_id": "2898924150", "image_id": "14", "src": "https://miro.medium.com/max/1600/1*4Rsl15bCoTpDmXFFpWw1hw.png", "width": "303", "height": "40", "credit": "", "caption": "in math"}, "15": {"item_id": "2898924150", "image_id": "15", "src": "https://miro.medium.com/max/1600/1*1cNPyK4x4tz99-iFsu7Wfg.png", "width": "348", "height": "59", "credit": "", "caption": "in code"}, "16": {"item_id": "2898924150", "image_id": "16", "src": "https://miro.medium.com/max/1600/1*ctKs6MsUkuELI7MPCyhRgA.png", "width": "98", "height": "43", "credit": "", "caption": "in math"}, "17": {"item_id": "2898924150", "image_id": "17", "src": "https://miro.medium.com/max/1600/1*ksSlgg3TDunDm5NUBpni6A.png", "width": "280", "height": "33", "credit": "", "caption": "in code"}, "18": {"item_id": "2898924150", "image_id": "18", "src": "https://miro.medium.com/max/1600/1*jaWtm-TYJN32oTZiiNQHhg.png", "width": "106", "height": "41", "credit": "", "caption": "in math"}, "19": {"item_id": "2898924150", "image_id": "19", "src": "https://miro.medium.com/max/1600/1*rQiaY9ySkLvP_u2Ivrndjg.png", "width": "197", "height": "40", "credit": "", "caption": "the code"}, "20": {"item_id": "2898924150", "image_id": "20", "src": "https://miro.medium.com/max/1600/1*9X7vyV74yr6raF91RVsIcg.png", "width": "235", "height": "85", "credit": "", "caption": "in math"}, "21": {"item_id": "2898924150", "image_id": "21", "src": "https://miro.medium.com/max/1600/1*vsqOLu_QZRMNEcWrsNK30A.png", "width": "405", "height": "39", "credit": "", "caption": "in code"}, "22": {"item_id": "2898924150", "image_id": "22", "src": "https://miro.medium.com/max/1600/1*d_5muKpCN1N8RKB4oCrOJQ.png", "width": "257", "height": "68", "credit": "", "caption": "in math"}, "23": {"item_id": "2898924150", "image_id": "23", "src": "https://miro.medium.com/max/1600/1*CL05a4uMji6PwZoEAlR63g.png", "width": "177", "height": "31", "credit": "", "caption": "in code"}, "24": {"item_id": "2898924150", "image_id": "24", "src": "https://miro.medium.com/max/1600/1*kS7nrQYzDhogIC0Iw_134Q.png", "width": "191", "height": "36", "credit": "", "caption": "in math"}, "25": {"item_id": "2898924150", "image_id": "25", "src": "https://miro.medium.com/max/1600/1*I6WNFV1KpbutsrL5NxX0og.png", "width": "187", "height": "35", "credit": "", "caption": "in code"}, "26": {"item_id": "2898924150", "image_id": "26", "src": "https://miro.medium.com/max/1600/1*0kIo7fsTwm5xFvTILazing.png", "width": "567", "height": "335", "credit": "", "caption": ""}, "27": {"item_id": "2898924150", "image_id": "27", "src": "https://miro.medium.com/max/7236/1*sary1TInxeXMLW-44-_RDg.jpeg", "width": "3618", "height": "1908", "credit": "", "caption": ""}, "28": {"item_id": "2898924150", "image_id": "28", "src": "https://miro.medium.com/max/6136/1*kswFi_ipCKuwR9vWpYlqxg.jpeg", "width": "3068", "height": "1908", "credit": "", "caption": ""}, "29": {"item_id": "2898924150", "image_id": "29", "src": "https://miro.medium.com/max/1600/1*kmG3OaNt1pjqC9SRB6N9Kw.png", "width": "679", "height": "104", "credit": "", "caption": ""}, "30": {"item_id": "2898924150", "image_id": "30", "src": "https://miro.medium.com/max/1600/1*MqY59LhJ9urAcR-V6K7YUA.png", "width": "287", "height": "89", "credit": "", "caption": ""}, "31": {"item_id": "2898924150", "image_id": "31", "src": "https://miro.medium.com/max/2652/1*GWVf6anY8VnDlKnBIMKcqg.png", "width": "1326", "height": "1334", "credit": "", "caption": ""}, "32": {"item_id": "2898924150", "image_id": "32", "src": "https://miro.medium.com/max/1600/1*pqTMd72wZJ0ULC0b5A03rQ.png", "width": "456", "height": "69", "credit": "", "caption": ""}, "33": {"item_id": "2898924150", "image_id": "33", "src": "https://miro.medium.com/max/1600/1*O_sKeBowpM_XV1osFZU1ug.gif", "width": "800", "height": "408", "credit": "credits: Neptune.ai", "caption": "Logging with Neptune.AI"}, "34": {"item_id": "2898924150", "image_id": "34", "src": "https://miro.medium.com/max/1600/1*ojvcqQf4jAyF8JXVJ85Exw.png", "width": "790", "height": "377", "credit": "", "caption": "Logging with Comet.ml"}, "35": {"item_id": "2898924150", "image_id": "35", "src": "https://miro.medium.com/max/1600/1*InjZqqlEVET0zCbDEgC1uQ.png", "width": "297", "height": "43", "credit": "", "caption": ""}, "36": {"item_id": "2898924150", "image_id": "36", "src": "https://miro.medium.com/max/1600/1*fVMoQU6hjgYHSHwr6UN_QQ.png", "width": "628", "height": "282", "credit": "", "caption": ""}, "37": {"item_id": "2898924150", "image_id": "37", "src": "https://miro.medium.com/max/1600/1*7ycXPIEJndXxrkLT34roWg.png", "width": "328", "height": "52", "credit": "", "caption": ""}, "38": {"item_id": "2898924150", "image_id": "38", "src": "https://miro.medium.com/max/1600/1*cw8OKKih9PxS9AHkgzc6VQ.png", "width": "695", "height": "334", "credit": "", "caption": ""}, "39": {"item_id": "2898924150", "image_id": "39", "src": "https://miro.medium.com/max/1600/1*YZJjv8uBzJ4n4BOgfhpxEw.png", "width": "677", "height": "63", "credit": "", "caption": ""}, "40": {"item_id": "2898924150", "image_id": "40", "src": "https://miro.medium.com/max/2336/1*Qmi7yHLL63UGzLrUhnodVg.png", "width": "1168", "height": "176", "credit": "", "caption": ""}, "41": {"item_id": "2898924150", "image_id": "41", "src": "https://miro.medium.com/max/2352/1*ZZldF5Wv-a73VTNrpt_uwg.png", "width": "1176", "height": "1294", "credit": "", "caption": ""}, "42": {"item_id": "2898924150", "image_id": "42", "src": "https://miro.medium.com/max/1956/1*KXOcANQDslOeOViUpObAAw.png", "width": "978", "height": "312", "credit": "", "caption": ""}, "43": {"item_id": "2898924150", "image_id": "43", "src": "https://miro.medium.com/max/2588/1*BjOAwCdcNcEKFQXkUYlY4w.png", "width": "1294", "height": "710", "credit": "", "caption": ""}, "44": {"item_id": "2898924150", "image_id": "44", "src": "https://miro.medium.com/max/2756/1*iMK5AehGEL6kgreM6yliBA.png", "width": "1378", "height": "274", "credit": "", "caption": ""}, "45": {"item_id": "2898924150", "image_id": "45", "src": "https://miro.medium.com/max/2792/1*OWvQ78_I5IUS8J_bCaMc0A.png", "width": "1396", "height": "740", "credit": "", "caption": "PyTorch Lightning Callback"}, "46": {"item_id": "2898924150", "image_id": "46", "src": "https://miro.medium.com/max/3888/1*_XoPKjwzW3vJKv76bvi2NQ.png", "width": "1944", "height": "136", "credit": "", "caption": ""}, "47": {"item_id": "2898924150", "image_id": "47", "src": "https://miro.medium.com/max/1948/1*160lmx0S6rTQfwem6ZM85Q.png", "width": "974", "height": "156", "credit": "", "caption": ""}}, "domain_metadata": {"name": "Medium", "logo": "https://logo.clearbit.com/medium.com?size=800", "greyscale_logo": "https://logo.clearbit.com/medium.com?size=800&greyscale=true"}, "listen_duration_estimate": 612}, "3050581975": {"item_id": "3050581975", "resolved_id": "3050582014", "given_url": "https://towardsdatascience.com/get-started-with-pytorch-with-these-5-basic-functions-33ae428bab97?source=rss----7f60cf5620c9---4", "given_title": "Get Started With PyTorch With These 5 Basic Functions.", "favorite": "0", "status": "1", "time_added": "1594908459", "time_updated": "1597023238", "time_read": "1597023238", "time_favorited": "0", "sort_id": 38, "resolved_title": "Get Started With PyTorch With These 5 Basic Functions.", "resolved_url": "https://towardsdatascience.com/get-started-with-pytorch-with-these-5-basic-functions-33ae428bab97", "excerpt": "PyTorch, an open-source library developed by Facebook, is very popular among data scientists. One of the main reasons behind its rise is the built-in support of GPU to developers. The torch.device enables you to specify the device type responsible to load a tensor into memory.", "is_article": "1", "is_index": "0", "has_video": "0", "has_image": "1", "word_count": "1179", "lang": "en", "time_to_read": 5, "top_image_url": "https://miro.medium.com/max/1200/0*1eIJwJrtE6yL-2p7", "tags": {"python": {"item_id": "3050581975", "tag": "python"}, "pytorch": {"item_id": "3050581975", "tag": "pytorch"}}, "authors": {"136783341": {"item_id": "3050581975", "author_id": "136783341", "name": "Aman Agarwal", "url": "https://medium.com/@aman.a.agg"}}, "image": {"item_id": "3050581975", "src": "https://miro.medium.com/fit/c/56/56/1*L3gQ8WdIw-FAbad4heOcXA.jpeg", "width": "28", "height": "28"}, "images": {"1": {"item_id": "3050581975", "image_id": "1", "src": "https://miro.medium.com/fit/c/56/56/1*L3gQ8WdIw-FAbad4heOcXA.jpeg", "width": "28", "height": "28", "credit": "", "caption": ""}, "2": {"item_id": "3050581975", "image_id": "2", "src": "https://miro.medium.com/max/1000/0*1eIJwJrtE6yL-2p7", "width": "500", "height": "334", "credit": "Trent Erwin on Unsplash", "caption": ""}}, "domain_metadata": {"name": "Towards Data Science", "logo": "https://logo.clearbit.com/towardsdatascience.com?size=800", "greyscale_logo": "https://logo.clearbit.com/towardsdatascience.com?size=800&greyscale=true"}, "listen_duration_estimate": 456}, "2147635503": {"item_id": "2147635503", "resolved_id": "2147635503", "given_url": "https://www.kdnuggets.com/2018/04/getting-started-pytorch-understanding-automatic-differentiation.html", "given_title": "Getting Started with PyTorch Part 1: Understanding How Automatic Differenti", "favorite": "0", "status": "1", "time_added": "1523457825", "time_updated": "1610316496", "time_read": "1528501158", "time_favorited": "0", "sort_id": 39, "resolved_title": "Getting Started with PyTorch Part 1: Understanding How Automatic Differentiation Works", "resolved_url": "https://www.kdnuggets.com/2018/04/getting-started-pytorch-understanding-automatic-differentiation.html", "excerpt": "When I started to code neural networks, I ended up using what everyone else around me was using. TensorFlow.  But recently, PyTorch has emerged as a major contender in the race to be the king of deep learning frameworks. What makes it really luring is it’s dynamic computation graph paradigm.", "is_article": "1", "is_index": "0", "has_video": "0", "has_image": "1", "word_count": "4120", "lang": "en", "time_to_read": 19, "tags": {"pytorch": {"item_id": "2147635503", "tag": "pytorch"}}, "image": {"item_id": "2147635503", "src": "https://cdn-images-1.medium.com/max/800/1*FDL9Se9otGzz83F3rofQuA.png", "width": "99", "height": "0"}, "images": {"1": {"item_id": "2147635503", "image_id": "1", "src": "https://cdn-images-1.medium.com/max/800/1*FDL9Se9otGzz83F3rofQuA.png", "width": "99", "height": "0", "credit": "", "caption": ""}, "2": {"item_id": "2147635503", "image_id": "2", "src": "https://cdn-images-1.medium.com/max/800/1*EWpoG5KayZSqkWmwM_wMFQ.png", "width": "99", "height": "0", "credit": "", "caption": ""}, "3": {"item_id": "2147635503", "image_id": "3", "src": "https://cdn-images-1.medium.com/max/800/1*wE1f2i7L8QRw8iuVx5mOpw.png", "width": "99", "height": "0", "credit": "", "caption": ""}, "4": {"item_id": "2147635503", "image_id": "4", "src": "https://cdn-images-1.medium.com/max/800/1*40LF-3EKdsZsbTP5JmzVjQ.png", "width": "99", "height": "0", "credit": "", "caption": ""}, "5": {"item_id": "2147635503", "image_id": "5", "src": "https://cdn-images-1.medium.com/max/800/1*aEo6hqBUhN-_2YmIBETB-w.png", "width": "99", "height": "0", "credit": "", "caption": ""}, "6": {"item_id": "2147635503", "image_id": "6", "src": "https://cdn-images-1.medium.com/max/800/1*gR7elwFSFrnvvao0d1XmGw.png", "width": "99", "height": "0", "credit": "", "caption": ""}}, "domain_metadata": {"name": "KDnuggets", "logo": "https://logo.clearbit.com/kdnuggets.com?size=800", "greyscale_logo": "https://logo.clearbit.com/kdnuggets.com?size=800&greyscale=true"}, "listen_duration_estimate": 1595}, "1695910057": {"item_id": "1695910057", "resolved_id": "1695910057", "given_url": "http://nuit-blanche.blogspot.com/2017/04/highly-technical-reference-page.html", "given_title": "Highly Technical Reference Page: The Incredible PyTorch", "favorite": "0", "status": "1", "time_added": "1510366152", "time_updated": "1611285138", "time_read": "1510366164", "time_favorited": "0", "sort_id": 40, "resolved_title": "Highly Technical Reference Page: The Incredible PyTorch", "resolved_url": "http://nuit-blanche.blogspot.com/2017/04/highly-technical-reference-page.html", "excerpt": "More than 838 readers receive every entries in their mailboxes while more than 1000 people come to this site directly everyday.  There are more detailed information in the following blog entries.", "is_article": "0", "is_index": "0", "has_video": "0", "has_image": "1", "word_count": "2883", "lang": "en", "time_to_read": 13, "top_image_url": "https://lh3.googleusercontent.com/proxy/s1tGjhyXgc-Q4nWOBN0YM8zzHSslqlFb0eUTXYAUThOnRTScWSwMP6_ixt5pV4wBf_NTuKXiPmrFHQ8joUe2KkuWrSRP97ySIqkWfREPKmRmJEFJYs_tfikx55k3q-8ArISvrbRTtmCo7w0BEjFn1GIpc2DX9Jnb=w1200-h630-p-k-no-nu", "tags": {"pytorch": {"item_id": "1695910057", "tag": "pytorch"}}, "authors": {"36137643": {"item_id": "1695910057", "author_id": "36137643", "name": "Igor", "url": "https://www.blogger.com/profile/17474880327699002140"}}, "image": {"item_id": "1695910057", "src": "http://2.bp.blogspot.com/_0ZCyAOBrUtA/SK8gEp_u-EI/AAAAAAAABv8/Itdy7gkjWYQ/S259/CS-group-logo.JPG", "width": "240", "height": "128"}, "images": {"1": {"item_id": "1695910057", "image_id": "1", "src": "http://2.bp.blogspot.com/_0ZCyAOBrUtA/SK8gEp_u-EI/AAAAAAAABv8/Itdy7gkjWYQ/S259/CS-group-logo.JPG", "width": "240", "height": "128", "credit": "Link to stats", "caption": "There are 3389 members right now. Be one of them."}}, "listen_duration_estimate": 1116}, "3727727144": {"item_id": "3727727144", "resolved_id": "3727727144", "given_url": "https://towardsdatascience.com/how-to-accelerate-your-pytorch-training-with-xla-on-aws-3d599bc8f6a9", "given_title": "How to Accelerate your PyTorch GPU Training with XLA", "favorite": "0", "status": "1", "time_added": "1666212671", "time_updated": "1666270533", "time_read": "1666270533", "time_favorited": "0", "sort_id": 41, "resolved_title": "How to Accelerate your PyTorch GPU Training with XLA", "resolved_url": "https://towardsdatascience.com/how-to-accelerate-your-pytorch-training-with-xla-on-aws-3d599bc8f6a9", "excerpt": "In many of our past posts (e.g., here) we have emphasized the importance of managing the cost of training. We are in constant pursuit of ways to increase the runtime performance of our training through an iterative process of 1.", "is_article": "1", "is_index": "0", "has_video": "0", "has_image": "0", "word_count": "2745", "lang": "en", "time_to_read": 12, "top_image_url": "https://miro.medium.com/max/1200/0*U3cCzkY7bhrJxvv-", "tags": {"gpus": {"item_id": "3727727144", "tag": "gpus"}, "pytorch": {"item_id": "3727727144", "tag": "pytorch"}}, "authors": {"142947264": {"item_id": "3727727144", "author_id": "142947264", "name": "Chaim Rand", "url": "https://chaimrand.medium.com"}}, "domain_metadata": {"name": "Towards Data Science", "logo": "https://logo.clearbit.com/towardsdatascience.com?size=800", "greyscale_logo": "https://logo.clearbit.com/towardsdatascience.com?size=800&greyscale=true"}, "listen_duration_estimate": 1063}, "3646292274": {"item_id": "3646292274", "resolved_id": "3646292300", "given_url": "https://towardsdatascience.com/how-to-build-an-image-captioning-model-in-pytorch-29b9d8fe2f8c?source=rss----7f60cf5620c9---4", "given_title": "How to Build an Image-Captioning Model in Pytorch", "favorite": "0", "status": "1", "time_added": "1656013225", "time_updated": "1656013465", "time_read": "1656013465", "time_favorited": "0", "sort_id": 42, "resolved_title": "How to Build an Image-Captioning Model in Pytorch", "resolved_url": "https://towardsdatascience.com/how-to-build-an-image-captioning-model-in-pytorch-29b9d8fe2f8c", "excerpt": "In this article, I will explain how you can build an image captioning model architecture using the Pytorch deep learning library. In addition to explaining the intuition behind the model architectures, I will also provide the Pytorch code for the models.", "is_article": "1", "is_index": "0", "has_video": "0", "has_image": "1", "word_count": "1636", "lang": "en", "time_to_read": 7, "top_image_url": "https://miro.medium.com/max/1200/0*9chjZxFWwGxc0gDh", "tags": {"deep-learning": {"item_id": "3646292274", "tag": "deep-learning"}, "image-classification": {"item_id": "3646292274", "tag": "image-classification"}, "pytorch": {"item_id": "3646292274", "tag": "pytorch"}}, "authors": {"145605341": {"item_id": "3646292274", "author_id": "145605341", "name": "Saketh Kotamraju", "url": "https://medium.com/@saketh.kotamraju"}}, "image": {"item_id": "3646292274", "src": "https://miro.medium.com/max/1400/0*9chjZxFWwGxc0gDh", "width": "700", "height": "1050"}, "images": {"1": {"item_id": "3646292274", "image_id": "1", "src": "https://miro.medium.com/max/1400/0*9chjZxFWwGxc0gDh", "width": "700", "height": "1050", "credit": "Adam Dutton on Unsplash", "caption": ""}, "2": {"item_id": "3646292274", "image_id": "2", "src": "https://miro.medium.com/max/1400/0*HxBDFFqwpjShEnyb", "width": "700", "height": "467", "credit": "LyAn Voyages on Unsplash", "caption": ""}, "3": {"item_id": "3646292274", "image_id": "3", "src": "https://miro.medium.com/max/1248/1*MqsV98FA4XA99QFs7BXldg.jpeg", "width": "624", "height": "219", "credit": "", "caption": "Image by Author"}}, "domain_metadata": {"name": "Towards Data Science", "logo": "https://logo.clearbit.com/towardsdatascience.com?size=800", "greyscale_logo": "https://logo.clearbit.com/towardsdatascience.com?size=800&greyscale=true"}, "listen_duration_estimate": 633}, "3058821525": {"item_id": "3058821525", "resolved_id": "3058821578", "given_url": "https://towardsdatascience.com/how-to-keep-track-of-pytorch-lightning-experiments-with-neptune-af467ec05600?source=rss----7f60cf5620c9---4", "given_title": "How to Keep Track of PyTorch Lightning Experiments with Neptune", "favorite": "0", "status": "1", "time_added": "1595616260", "time_updated": "1597192924", "time_read": "1597192923", "time_favorited": "0", "sort_id": 43, "resolved_title": "", "resolved_url": "https://towardsdatascience.com/how-to-keep-track-of-pytorch-lightning-experiments-with-neptune-af467ec05600", "excerpt": "", "is_article": "0", "is_index": "0", "has_video": "0", "has_image": "0", "word_count": "0", "lang": "en", "tags": {"pytorch": {"item_id": "3058821525", "tag": "pytorch"}}, "domain_metadata": {"name": "Towards Data Science", "logo": "https://logo.clearbit.com/towardsdatascience.com?size=800", "greyscale_logo": "https://logo.clearbit.com/towardsdatascience.com?size=800&greyscale=true"}, "listen_duration_estimate": 0}, "1675669825": {"item_id": "1675669825", "resolved_id": "1675669825", "given_url": "http://pytorch.org/tutorials/beginner/deep_learning_60min_blitz.html", "given_title": "https://pytorch.org/tutorials/beginner/deep_learning_60min_blitz.html", "favorite": "0", "status": "1", "time_added": "1571022957", "time_updated": "1608336596", "time_read": "1571144939", "time_favorited": "0", "sort_id": 44, "resolved_title": "A 60 Minute Blitz — PyTorch Tutorials 1.10.0+cu102 documentation", "resolved_url": "https://pytorch.org/tutorials/beginner/deep_learning_60min_blitz.html", "excerpt": "Make sure you have the torch and torchvision packages installed.", "is_article": "1", "is_index": "0", "has_video": "1", "has_image": "1", "word_count": "75", "lang": "en", "tags": {"pytorch": {"item_id": "1675669825", "tag": "pytorch"}}, "image": {"item_id": "1675669825", "src": "https://pytorch.org/tutorials/_images/tensor_illustration_flat.png", "width": "0", "height": "0"}, "images": {"1": {"item_id": "1675669825", "image_id": "1", "src": "https://pytorch.org/tutorials/_images/tensor_illustration_flat.png", "width": "0", "height": "0", "credit": "", "caption": "Tensors"}, "2": {"item_id": "1675669825", "image_id": "2", "src": "https://pytorch.org/tutorials/_images/autodiff.png", "width": "0", "height": "0", "credit": "", "caption": "A Gentle Introduction to torch.autograd"}, "3": {"item_id": "1675669825", "image_id": "3", "src": "https://pytorch.org/tutorials/_images/mnist1.png", "width": "0", "height": "0", "credit": "", "caption": "Neural Networks"}, "4": {"item_id": "1675669825", "image_id": "4", "src": "https://pytorch.org/tutorials/_images/cifar101.png", "width": "0", "height": "0", "credit": "", "caption": "Training a Classifier"}}, "videos": {"1": {"item_id": "1675669825", "video_id": "1", "src": "https://www.youtube.com/embed/u7x8RXwLKcA", "width": "560", "height": "315", "type": "1", "vid": "u7x8RXwLKcA", "length": "0"}}, "listen_duration_estimate": 29}, "3286840883": {"item_id": "3286840883", "resolved_id": "3286840900", "given_url": "https://towardsdatascience.com/image-feature-extraction-using-pytorch-e3b327c3607a?source=rss----7f60cf5620c9---4", "given_title": "Image Feature Extraction Using PyTorch", "favorite": "0", "status": "1", "time_added": "1616415334", "time_updated": "1616441523", "time_read": "1616441522", "time_favorited": "0", "sort_id": 45, "resolved_title": "Image Feature Extraction Using PyTorch", "resolved_url": "https://towardsdatascience.com/image-feature-extraction-using-pytorch-e3b327c3607a", "excerpt": "In summary, this article will show you how to implement a convolutional neural network (CNN) for feature extraction using PyTorch. Also, I will show you how to cluster images based on their features using the K-Means algorithm. Enjoy! Let’s say you see an image of a cat.", "is_article": "1", "is_index": "0", "has_video": "0", "has_image": "1", "word_count": "964", "lang": "en", "time_to_read": 4, "top_image_url": "https://miro.medium.com/max/1200/1*P69zpl--JsVRSIVXL0hUzw.jpeg", "tags": {"machine-vision": {"item_id": "3286840883", "tag": "machine-vision"}, "pytorch": {"item_id": "3286840883", "tag": "pytorch"}}, "authors": {"102778521": {"item_id": "3286840883", "author_id": "102778521", "name": "Irfan Alghani Khalid", "url": "https://medium.com/@irfanalghani11"}}, "image": {"item_id": "3286840883", "src": "https://miro.medium.com/fit/c/56/56/1*ygIS0pNZ95reHXZTWBcrkw.png", "width": "28", "height": "28"}, "images": {"1": {"item_id": "3286840883", "image_id": "1", "src": "https://miro.medium.com/fit/c/56/56/1*ygIS0pNZ95reHXZTWBcrkw.png", "width": "28", "height": "28", "credit": "", "caption": ""}, "2": {"item_id": "3286840883", "image_id": "2", "src": "https://miro.medium.com/max/3840/1*P69zpl--JsVRSIVXL0hUzw.jpeg", "width": "1920", "height": "1278", "credit": "NASA on Unsplash", "caption": ""}, "3": {"item_id": "3286840883", "image_id": "3", "src": "https://miro.medium.com/max/548/1*n9hOsxqF9Yc0mQstKpQ6DQ.png", "width": "274", "height": "94", "credit": "", "caption": ""}}, "domain_metadata": {"name": "Towards Data Science", "logo": "https://logo.clearbit.com/towardsdatascience.com?size=800", "greyscale_logo": "https://logo.clearbit.com/towardsdatascience.com?size=800&greyscale=true"}, "listen_duration_estimate": 373}, "3940585464": {"item_id": "3940585464", "resolved_id": "3940585464", "given_url": "https://pytorch.org/blog/inside-the-matrix/", "given_title": "Inside the Matrix: Visualizing Matrix Multiplication, Attention and Beyond", "favorite": "0", "status": "1", "time_added": "1695653501", "time_updated": "1706656387", "time_read": "1695656892", "time_favorited": "0", "sort_id": 46, "resolved_title": "Inside the Matrix: Visualizing Matrix Multiplication, Attention and Beyond", "resolved_url": "https://pytorch.org/blog/inside-the-matrix/", "excerpt": "Use 3D to visualize matrix multiplication expressions, attention heads with real weights, and more. Matrix multiplications (matmuls) are the building blocks of today’s ML models. This note presents mm, a visualization tool for matmuls and compositions of matmuls.", "is_article": "1", "is_index": "0", "has_video": "1", "has_image": "1", "word_count": "4761", "lang": "en", "time_to_read": 22, "top_image_url": "https://pytorch.org/assets/images/pytorch-logo.png", "tags": {"pytorch": {"item_id": "3940585464", "tag": "pytorch"}, "visualization": {"item_id": "3940585464", "tag": "visualization"}}, "authors": {"113212845": {"item_id": "3940585464", "author_id": "113212845", "name": "Team PyTorch", "url": ""}}, "image": {"item_id": "3940585464", "src": "https://pytorch.org/assets/images/inside-the-matrix/matmul3.jpg", "width": "0", "height": "0"}, "images": {"1": {"item_id": "3940585464", "image_id": "1", "src": "https://pytorch.org/assets/images/inside-the-matrix/matmul3.jpg", "width": "0", "height": "0", "credit": "", "caption": ""}, "2": {"item_id": "3940585464", "image_id": "2", "src": "https://pytorch.org/assets/images/inside-the-matrix/initial.jpg", "width": "0", "height": "0", "credit": "", "caption": ""}, "3": {"item_id": "3940585464", "image_id": "3", "src": "https://pytorch.org/assets/images/inside-the-matrix/la2still.jpg", "width": "0", "height": "0", "credit": "", "caption": ""}, "4": {"item_id": "3940585464", "image_id": "4", "src": "https://pytorch.org/assets/images/inside-the-matrix/lacontract.jpg", "width": "0", "height": "0", "credit": "", "caption": ""}, "5": {"item_id": "3940585464", "image_id": "5", "src": "https://pytorch.org/assets/images/inside-the-matrix/nlayerbottleneck.jpg", "width": "0", "height": "0", "credit": "", "caption": ""}, "6": {"item_id": "3940585464", "image_id": "6", "src": "https://pytorch.org/assets/images/inside-the-matrix/raffn.jpg", "width": "0", "height": "0", "credit": "", "caption": ""}, "7": {"item_id": "3940585464", "image_id": "7", "src": "https://pytorch.org/assets/images/inside-the-matrix/binary4.jpg", "width": "0", "height": "0", "credit": "", "caption": ""}, "8": {"item_id": "3940585464", "image_id": "8", "src": "https://pytorch.org/assets/images/inside-the-matrix/bottleneck_part.jpg", "width": "0", "height": "0", "credit": "", "caption": ""}, "9": {"item_id": "3940585464", "image_id": "9", "src": "https://pytorch.org/assets/images/inside-the-matrix/binary_part.jpg", "width": "0", "height": "0", "credit": "", "caption": ""}, "10": {"item_id": "3940585464", "image_id": "10", "src": "https://pytorch.org/assets/images/inside-the-matrix/mha1.jpg", "width": "0", "height": "0", "credit": "", "caption": ""}, "11": {"item_id": "3940585464", "image_id": "11", "src": "https://pytorch.org/assets/images/inside-the-matrix/gpt2_0_2c.jpg", "width": "0", "height": "0", "credit": "", "caption": ""}, "12": {"item_id": "3940585464", "image_id": "12", "src": "https://pytorch.org/assets/images/inside-the-matrix/gpt2_decode2.jpg", "width": "0", "height": "0", "credit": "", "caption": ""}, "13": {"item_id": "3940585464", "image_id": "13", "src": "https://pytorch.org/assets/images/inside-the-matrix/gpt2_parti.jpg", "width": "0", "height": "0", "credit": "", "caption": ""}, "14": {"item_id": "3940585464", "image_id": "14", "src": "https://pytorch.org/assets/images/inside-the-matrix/gpt2_ik.jpg", "width": "0", "height": "0", "credit": "", "caption": ""}, "15": {"item_id": "3940585464", "image_id": "15", "src": "https://pytorch.org/assets/images/inside-the-matrix/attnlayer2.jpg", "width": "0", "height": "0", "credit": "", "caption": ""}, "16": {"item_id": "3940585464", "image_id": "16", "src": "https://pytorch.org/assets/images/inside-the-matrix/bptlayer.jpg", "width": "0", "height": "0", "credit": "", "caption": ""}, "17": {"item_id": "3940585464", "image_id": "17", "src": "https://pytorch.org/assets/images/inside-the-matrix/attnlayer_ffnsplitk.jpg", "width": "0", "height": "0", "credit": "", "caption": ""}, "18": {"item_id": "3940585464", "image_id": "18", "src": "https://pytorch.org/assets/images/inside-the-matrix/bptlayer_ffnsplitk.jpg", "width": "0", "height": "0", "credit": "", "caption": ""}, "19": {"item_id": "3940585464", "image_id": "19", "src": "https://pytorch.org/assets/images/inside-the-matrix/decoding.jpg", "width": "0", "height": "0", "credit": "", "caption": ""}, "20": {"item_id": "3940585464", "image_id": "20", "src": "https://pytorch.org/assets/images/inside-the-matrix/lora_single.jpg", "width": "0", "height": "0", "credit": "", "caption": ""}}, "videos": {"1": {"item_id": "3940585464", "video_id": "1", "src": "https://pytorch.org/assets/videos/inside-the-matrix/dotprod1.mp4", "width": "100", "height": "0", "type": "5", "vid": "", "length": "0"}, "2": {"item_id": "3940585464", "video_id": "2", "src": "https://pytorch.org/assets/videos/inside-the-matrix/mvprod1.mp4", "width": "100", "height": "0", "type": "5", "vid": "", "length": "0"}, "3": {"item_id": "3940585464", "video_id": "3", "src": "https://pytorch.org/assets/videos/inside-the-matrix/mvprod2.mp4", "width": "100", "height": "0", "type": "5", "vid": "", "length": "0"}, "4": {"item_id": "3940585464", "video_id": "4", "src": "https://pytorch.org/assets/videos/inside-the-matrix/vmprod_check.mp4", "width": "100", "height": "0", "type": "5", "vid": "", "length": "0"}, "5": {"item_id": "3940585464", "video_id": "5", "src": "https://pytorch.org/assets/videos/inside-the-matrix/vmprod3.mp4", "width": "100", "height": "0", "type": "5", "vid": "", "length": "0"}, "6": {"item_id": "3940585464", "video_id": "6", "src": "https://pytorch.org/assets/videos/inside-the-matrix/vmprod_id.mp4", "width": "100", "height": "0", "type": "5", "vid": "", "length": "0"}, "7": {"item_id": "3940585464", "video_id": "7", "src": "https://pytorch.org/assets/videos/inside-the-matrix/vvprod_check.mp4", "width": "100", "height": "0", "type": "5", "vid": "", "length": "0"}, "8": {"item_id": "3940585464", "video_id": "8", "src": "https://pytorch.org/assets/videos/inside-the-matrix/vvprod_random_fast.mp4", "width": "100", "height": "0", "type": "5", "vid": "", "length": "0"}, "9": {"item_id": "3940585464", "video_id": "9", "src": "https://pytorch.org/assets/videos/inside-the-matrix/gpt2_big2b.mp4", "width": "100", "height": "0", "type": "5", "vid": "", "length": "0"}, "10": {"item_id": "3940585464", "video_id": "10", "src": "https://pytorch.org/assets/videos/inside-the-matrix/lora_spin4b.mp4", "width": "100", "height": "0", "type": "5", "vid": "", "length": "0"}}, "listen_duration_estimate": 1843}, "3559474553": {"item_id": "3559474553", "resolved_id": "3559474553", "given_url": "https://pytorch.org/blog/introducing-torchrec/", "given_title": "Introducing TorchRec, a library for modern production recommendation system", "favorite": "0", "status": "1", "time_added": "1645758353", "time_updated": "1645758962", "time_read": "1645758962", "time_favorited": "0", "sort_id": 47, "resolved_title": "Introducing TorchRec, a library for modern production recommendation systems", "resolved_url": "https://pytorch.org/blog/introducing-torchrec/", "excerpt": "We are excited to announce TorchRec, a PyTorch domain library for Recommendation Systems. This new library provides common sparsity and parallelism primitives, enabling researchers to build state-of-the-art personalization models and deploy them in production.", "is_article": "1", "is_index": "0", "has_video": "0", "has_image": "1", "word_count": "809", "lang": "en", "time_to_read": 4, "top_image_url": "https://pytorch.org/", "tags": {"machine-learning": {"item_id": "3559474553", "tag": "machine-learning"}, "pytorch": {"item_id": "3559474553", "tag": "pytorch"}, "recommenders": {"item_id": "3559474553", "tag": "recommenders"}}, "authors": {"164147688": {"item_id": "3559474553", "author_id": "164147688", "name": "Meta AI", "url": ""}}, "image": {"item_id": "3559474553", "src": "https://pytorch.org/assets/images/introducing-torchrec/torchrec_lockup.png", "width": "40", "height": "0"}, "images": {"1": {"item_id": "3559474553", "image_id": "1", "src": "https://pytorch.org/assets/images/introducing-torchrec/torchrec_lockup.png", "width": "40", "height": "0", "credit": "", "caption": ""}}, "listen_duration_estimate": 313}, "2779314935": {"item_id": "2779314935", "resolved_id": "2779314935", "given_url": "https://github.com/kornia/kornia", "given_title": "kornia/kornia: Open Source Differentiable Computer Vision Library for PyTor", "favorite": "0", "status": "1", "time_added": "1578973729", "time_updated": "1608264752", "time_read": "1582142817", "time_favorited": "0", "sort_id": 48, "resolved_title": "Open Source Differentiable Computer Vision Library for PyTorch", "resolved_url": "https://github.com/kornia/kornia", "excerpt": "Kornia is a differentiable computer vision library for PyTorch. It consists of a set of routines and differentiable modules to solve generic computer vision problems.", "is_article": "1", "is_index": "1", "has_video": "0", "has_image": "1", "word_count": "483", "lang": "en", "top_image_url": "https://opengraph.githubassets.com/63b50a69e8ab122d37bd1a33cd090512165133a04894957344b8dd82f65d8216/kornia/kornia", "tags": {"pytorch": {"item_id": "2779314935", "tag": "pytorch"}, "vision": {"item_id": "2779314935", "tag": "vision"}}, "image": {"item_id": "2779314935", "src": "https://github.com/kornia/kornia/blob/master/docs/source/_static/img/kornia_logo.png", "width": "50", "height": "0"}, "images": {"1": {"item_id": "2779314935", "image_id": "1", "src": "https://github.com/kornia/kornia/blob/master/docs/source/_static/img/kornia_logo.png", "width": "50", "height": "0", "credit": "", "caption": ""}, "2": {"item_id": "2779314935", "image_id": "2", "src": "https://camo.githubusercontent.com/0cc23d1c2df343a2e1311c0455127207437483715d8ce64dabf3533abb47cff7/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f6b6f726e6961", "width": "0", "height": "0", "credit": "", "caption": ""}, "3": {"item_id": "2779314935", "image_id": "3", "src": "https://camo.githubusercontent.com/62413b3f716b956b722ebe64eeb5c6c1c7c5b1880c5f0aafb3abaa97749fce00/68747470733a2f2f62616467652e667572792e696f2f70792f6b6f726e69612e737667", "width": "0", "height": "0", "credit": "", "caption": ""}, "4": {"item_id": "2779314935", "image_id": "4", "src": "https://camo.githubusercontent.com/a7bfb5443c90b645547e8164ccbdb20747216d0d8eccaacc1812941f34f8c1c6/68747470733a2f2f706570792e746563682f62616467652f6b6f726e6961", "width": "0", "height": "0", "credit": "", "caption": ""}, "5": {"item_id": "2779314935", "image_id": "5", "src": "https://camo.githubusercontent.com/2a2157c971b7ae1deb8eb095799440551c33dcf61ea3d965d86b496a5a65df55/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d417061636865253230322e302d626c75652e737667", "width": "0", "height": "0", "credit": "", "caption": ""}, "6": {"item_id": "2779314935", "image_id": "6", "src": "https://camo.githubusercontent.com/8df26cc38dabf1035cddfbed79714744bb93785bc8341cb883fef4cdc412572d/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f536c61636b2d3441313534423f6c6f676f3d736c61636b266c6f676f436f6c6f723d7768697465", "width": "0", "height": "0", "credit": "", "caption": ""}, "7": {"item_id": "2779314935", "image_id": "7", "src": "https://camo.githubusercontent.com/0373ac8b17412d8ff181c95d8e1c161d89872a1730de3dccb6e4fd4a79d29578/68747470733a2f2f696d672e736869656c64732e696f2f747769747465722f666f6c6c6f772f6b6f726e69615f666f73733f7374796c653d736f6369616c", "width": "0", "height": "0", "credit": "", "caption": ""}, "8": {"item_id": "2779314935", "image_id": "8", "src": "https://github.com/kornia/kornia/actions/workflows/tests_cpu_versions.yml/badge.svg", "width": "0", "height": "0", "credit": "", "caption": ""}, "9": {"item_id": "2779314935", "image_id": "9", "src": "https://github.com/kornia/kornia/actions/workflows/tests_cuda.yml/badge.svg", "width": "0", "height": "0", "credit": "", "caption": ""}, "10": {"item_id": "2779314935", "image_id": "10", "src": "https://camo.githubusercontent.com/254f67cde5f9cd67837ee3d8d3fe36f61b9a530ba32e638e19a783f5b6a28b29/68747470733a2f2f636f6465636f762e696f2f67682f6b6f726e69612f6b6f726e69612f6272616e63682f6d61737465722f67726170682f62616467652e7376673f746f6b656e3d467a436237653042736f", "width": "0", "height": "0", "credit": "", "caption": ""}, "11": {"item_id": "2779314935", "image_id": "11", "src": "https://camo.githubusercontent.com/3dd6e103c9af571cb95c9b020f0fd31bb5476862c53fb10c141ca69899b9e75b/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f6b6f726e69612f62616467652f3f76657273696f6e3d6c6174657374", "width": "0", "height": "0", "credit": "", "caption": ""}, "12": {"item_id": "2779314935", "image_id": "12", "src": "https://camo.githubusercontent.com/147c6adce2a56712a4c21e04d47972d5ad0c4381f8a95615774892052fbcc056/68747470733a2f2f726573756c74732e7072652d636f6d6d69742e63692f62616467652f6769746875622f6b6f726e69612f6b6f726e69612f6d61737465722e737667", "width": "0", "height": "0", "credit": "", "caption": ""}, "13": {"item_id": "2779314935", "image_id": "13", "src": "https://raw.githubusercontent.com/kornia/data/main/hello_world_arturito.png", "width": "75", "height": "75", "credit": "", "caption": ""}}, "domain_metadata": {"name": "GitHub", "logo": "https://logo.clearbit.com/github.com?size=800", "greyscale_logo": "https://logo.clearbit.com/github.com?size=800&greyscale=true"}, "listen_duration_estimate": 187}, "3897712130": {"item_id": "3897712130", "resolved_id": "3897712130", "given_url": "https://lightning.ai/pages/community/tutorial/pytorch-memory-vit-llm/", "given_title": "Optimizing Memory Usage for Training LLMs and Vision Transformers in PyTorc", "favorite": "0", "status": "1", "time_added": "1688429038", "time_updated": "1690156786", "time_read": "1690156786", "time_favorited": "0", "sort_id": 49, "resolved_title": "Optimizing Memory Usage for Training LLMs and Vision Transformers in PyTorch", "resolved_url": "https://lightning.ai/pages/community/tutorial/pytorch-memory-vit-llm/", "excerpt": "Key takeaway Peak memory consumption is a common bottleneck when training deep learning models such as vision transformers and LLMs.", "is_article": "1", "is_index": "0", "has_video": "0", "has_image": "1", "word_count": "2795", "lang": "en", "time_to_read": 13, "top_image_url": "https://lightningaidev.wpengine.com/wp-content/uploads/2023/07/pytorch-memory-hero.png", "tags": {"llms": {"item_id": "3897712130", "tag": "llms"}, "pytorch": {"item_id": "3897712130", "tag": "pytorch"}, "transformers": {"item_id": "3897712130", "tag": "transformers"}}, "authors": {"179934693": {"item_id": "3897712130", "author_id": "179934693", "name": "Sebastian Raschka", "url": "https://lightning.ai/pages/author/sebastian-raschka/"}}, "image": {"item_id": "3897712130", "src": "https://lightningaidev.wpengine.com/wp-content/uploads/2023/07/8_mixed-training-1024x339.png", "width": "622", "height": "206"}, "images": {"1": {"item_id": "3897712130", "image_id": "1", "src": "https://lightningaidev.wpengine.com/wp-content/uploads/2023/07/8_mixed-training-1024x339.png", "width": "622", "height": "206", "credit": "", "caption": ""}, "2": {"item_id": "3897712130", "image_id": "2", "src": "https://lightningaidev.wpengine.com/wp-content/uploads/2023/07/bfloat16.png", "width": "634", "height": "493", "credit": "", "caption": ""}, "3": {"item_id": "3897712130", "image_id": "3", "src": "https://lightningaidev.wpengine.com/wp-content/uploads/2023/07/data-para-new.png", "width": "674", "height": "239", "credit": "", "caption": ""}, "4": {"item_id": "3897712130", "image_id": "4", "src": "https://lightningaidev.wpengine.com/wp-content/uploads/2023/07/tensor-para-1-new.png", "width": "647", "height": "262", "credit": "", "caption": ""}, "5": {"item_id": "3897712130", "image_id": "5", "src": "https://lightningaidev.wpengine.com/wp-content/uploads/2023/07/tensor-para-2-new.png", "width": "687", "height": "295", "credit": "", "caption": ""}}, "listen_duration_estimate": 1082}, "1569510079": {"item_id": "1569510079", "resolved_id": "1569510079", "given_url": "http://pytorch.org/", "given_title": "PyTorch", "favorite": "0", "status": "1", "time_added": "1509663243", "time_updated": "1611285148", "time_read": "1514397959", "time_favorited": "0", "sort_id": 50, "resolved_title": "PyTorch", "resolved_url": "https://www.pytorch.org", "excerpt": "An open source machine learning framework that accelerates the path from research prototyping to production deployment. Transition seamlessly between eager and graph modes with TorchScript, and accelerate the path to production with TorchServe.", "is_article": "0", "is_index": "1", "has_video": "0", "has_image": "1", "word_count": "524", "lang": "en", "top_image_url": "https://pytorch.org/assets/images/pytorch-logo.png", "tags": {"pytorch": {"item_id": "1569510079", "tag": "pytorch"}}, "image": {"item_id": "1569510079", "src": "https://pytorch.org/assets/images/salesforce.png", "width": "140", "height": "0"}, "images": {"1": {"item_id": "1569510079", "image_id": "1", "src": "https://pytorch.org/assets/images/salesforce.png", "width": "140", "height": "0", "credit": "", "caption": "Pushing the state of the art in NLP and Multi-task learning. --"}, "2": {"item_id": "1569510079", "image_id": "2", "src": "https://pytorch.org/assets/images/stanford-university.png", "width": "140", "height": "0", "credit": "", "caption": "Using PyTorch’s flexibility to efficiently research new algorithmic approaches. --"}, "3": {"item_id": "1569510079", "image_id": "3", "src": "https://pytorch.org/assets/images/udacity.png", "width": "140", "height": "0", "credit": "", "caption": "Educating the next wave of AI Innovators using PyTorch. --"}, "4": {"item_id": "1569510079", "image_id": "4", "src": "https://pytorch.org/assets/images/pytorch-x.svg", "width": "0", "height": "0", "credit": "", "caption": ""}}, "listen_duration_estimate": 203}, "2814473118": {"item_id": "2814473118", "resolved_id": "2814473118", "given_url": "https://github.com/pytorch/elastic", "given_title": "PyTorch elastic training", "favorite": "0", "status": "1", "time_added": "1575720147", "time_updated": "1608317787", "time_read": "1576355740", "time_favorited": "0", "sort_id": 51, "resolved_title": "TorchElastic", "resolved_url": "https://github.com/pytorch/elastic", "excerpt": "IMPORTANT: This repository is deprecated. TorchElastic has been upstreamed to PyTorch 1.9 under torch.distributed.elastic. Please refer to the PyTorch documentation here.", "is_article": "1", "is_index": "1", "has_video": "0", "has_image": "0", "word_count": "29", "lang": "en", "top_image_url": "https://opengraph.githubassets.com/67413f1328f79f3d78b9dbbaab0a385a1af7229923fc53959ca2795397dc024c/pytorch/elastic", "tags": {"pytorch": {"item_id": "2814473118", "tag": "pytorch"}}, "domain_metadata": {"name": "GitHub", "logo": "https://logo.clearbit.com/github.com?size=800", "greyscale_logo": "https://logo.clearbit.com/github.com?size=800&greyscale=true"}, "listen_duration_estimate": 11}, "2907866502": {"item_id": "2907866502", "resolved_id": "728603", "given_url": "https://pytorch-lightning.readthedocs.io/en/latest/", "given_title": "PyTorch Lightning Documentation — PyTorch Lightning 1.3.0dev documentation", "favorite": "0", "status": "1", "time_added": "1615923456", "time_updated": "1638708525", "time_read": "1616192077", "time_favorited": "0", "sort_id": 52, "resolved_title": "Let’s build from here", "resolved_url": "https://github.com/", "excerpt": "Skip to content Sign in Sign in Sign up You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session. You switched accounts on another tab or window. Reload to refresh your session.", "is_article": "0", "is_index": "1", "has_video": "1", "has_image": "1", "word_count": "59", "lang": "en", "top_image_url": "https://github.githubassets.com/assets/campaign-social-031d6161fa10.png", "tags": {"deep-learning": {"item_id": "2907866502", "tag": "deep-learning"}, "pytorch": {"item_id": "2907866502", "tag": "pytorch"}}, "image": {"item_id": "2907866502", "src": "https://github.githubassets.com/assets/shape-0-df97fa6b0c27.svg", "width": "626", "height": "626"}, "images": {"1": {"item_id": "2907866502", "image_id": "1", "src": "https://github.githubassets.com/assets/shape-0-df97fa6b0c27.svg", "width": "626", "height": "626", "credit": "", "caption": ""}, "2": {"item_id": "2907866502", "image_id": "2", "src": "https://github.githubassets.com/assets/shape-1-c219318e479a.svg", "width": "584", "height": "584", "credit": "", "caption": ""}, "3": {"item_id": "2907866502", "image_id": "3", "src": "https://github.githubassets.com/assets/shape-2-f30dcc9bd35c.svg", "width": "595", "height": "595", "credit": "", "caption": ""}}, "videos": {"1": {"item_id": "2907866502", "video_id": "1", "src": "https://github.githubassets.com/assets/globe-900.hevc-58019d77b21c.mp4", "width": "916", "height": "918", "type": "5", "vid": "", "length": "0"}, "2": {"item_id": "2907866502", "video_id": "2", "src": "https://github.githubassets.com/assets/globe-500.hevc-42032a395ff1.mp4", "width": "0", "height": "0", "type": "5", "vid": "", "length": "0"}, "3": {"item_id": "2907866502", "video_id": "3", "src": "https://github.githubassets.com/assets/aurora.h264-25af1afc4e69.mp4", "width": "0", "height": "0", "type": "5", "vid": "", "length": "0"}}, "domain_metadata": {"name": "GitHub", "logo": "https://logo.clearbit.com/github.com?size=800", "greyscale_logo": "https://logo.clearbit.com/github.com?size=800&greyscale=true"}, "listen_duration_estimate": 23}, "3938375927": {"item_id": "3938375927", "resolved_id": "3938375936", "given_url": "https://towardsdatascience.com/pytorch-model-performance-analysis-and-optimization-part-6-b87412a0371b?source=rss----7f60cf5620c9---4", "given_title": "PyTorch Model Performance Analysis and Optimization — Part 6", "favorite": "0", "status": "1", "time_added": "1695248908", "time_updated": "1695566742", "time_read": "1695566742", "time_favorited": "0", "sort_id": 53, "resolved_title": "PyTorch Model Performance Analysis and Optimization — Part 6", "resolved_url": "https://towardsdatascience.com/pytorch-model-performance-analysis-and-optimization-part-6-b87412a0371b", "excerpt": "This is the sixth part in our series of posts on the topic of analyzing and optimizing PyTorch models using PyTorch Profiler and TensorBoard.", "is_article": "1", "is_index": "0", "has_video": "0", "has_image": "1", "word_count": "2158", "lang": "en", "time_to_read": 10, "top_image_url": "https://miro.medium.com/v2/resize:fit:1200/0*mY1zmXYnEfE44Pma", "tags": {"pytorch": {"item_id": "3938375927", "tag": "pytorch"}}, "authors": {"142947264": {"item_id": "3938375927", "author_id": "142947264", "name": "Chaim Rand", "url": "https://chaimrand.medium.com"}}, "image": {"item_id": "3938375927", "src": "https://miro.medium.com/v2/resize:fill:88:88/1*u4pzP95sl2wOlLhWKFgczg.jpeg", "width": "44", "height": "44"}, "images": {"1": {"item_id": "3938375927", "image_id": "1", "src": "https://miro.medium.com/v2/resize:fill:88:88/1*u4pzP95sl2wOlLhWKFgczg.jpeg", "width": "44", "height": "44", "credit": "", "caption": ""}, "2": {"item_id": "3938375927", "image_id": "2", "src": "https://miro.medium.com/v2/resize:fill:48:48/1*CJe3891yB1A1mzMdqemkdg.jpeg", "width": "24", "height": "24", "credit": "", "caption": ""}}, "domain_metadata": {"name": "Towards Data Science", "logo": "https://logo.clearbit.com/towardsdatascience.com?size=800", "greyscale_logo": "https://logo.clearbit.com/towardsdatascience.com?size=800&greyscale=true"}, "listen_duration_estimate": 835}, "2183481207": {"item_id": "2183481207", "resolved_id": "2183481207", "given_url": "https://www.kdnuggets.com/2018/05/pytorch-tensor-basics.html", "given_title": "PyTorch Tensor Basics", "favorite": "0", "status": "1", "time_added": "1526094704", "time_updated": "1610314806", "time_read": "1528501000", "time_favorited": "0", "sort_id": 54, "resolved_title": "PyTorch Tensor Basics", "resolved_url": "https://www.kdnuggets.com/2018/05/pytorch-tensor-basics.html", "excerpt": "Now that we know WTF a tensor is, and saw how Numpy's ndarray can be used to represent them, let's switch gears and see how they are represented in PyTorch.  PyTorch has made an impressive dent on the machine learning scene since Facebook open-sourced it in early 2017.", "is_article": "1", "is_index": "0", "has_video": "0", "has_image": "1", "word_count": "667", "lang": "en", "time_to_read": 3, "tags": {"pytorch": {"item_id": "2183481207", "tag": "pytorch"}}, "authors": {"77311567": {"item_id": "2183481207", "author_id": "77311567", "name": "Matthew Mayo", "url": "https://www.kdnuggets.com/author/matt-mayo"}}, "image": {"item_id": "2183481207", "src": "https://www.kdnuggets.com/wp-content/uploads/tensor-examples.jpg", "width": "85", "height": "0"}, "images": {"1": {"item_id": "2183481207", "image_id": "1", "src": "https://www.kdnuggets.com/wp-content/uploads/tensor-examples.jpg", "width": "85", "height": "0", "credit": "", "caption": ""}}, "domain_metadata": {"name": "KDnuggets", "logo": "https://logo.clearbit.com/kdnuggets.com?size=800", "greyscale_logo": "https://logo.clearbit.com/kdnuggets.com?size=800&greyscale=true"}, "listen_duration_estimate": 258}, "3132443931": {"item_id": "3132443931", "resolved_id": "3132443931", "given_url": "https://www.tooploox.com/blog/pytorch-vs-tensorflow-a-detailed-comparison", "given_title": "PyTorch vs. TensorFlow – a detailed comparison", "favorite": "0", "status": "1", "time_added": "1602931496", "time_updated": "1604360868", "time_read": "1604360868", "time_favorited": "0", "sort_id": 55, "resolved_title": "PyTorch vs. TensorFlow – a detailed comparison", "resolved_url": "https://www.tooploox.com/blog/pytorch-vs-tensorflow-a-detailed-comparison", "excerpt": "TensorFlow and PyTorch are two of the most popular frameworks for delivering machine learning projects. Both are great and versatile tools, yet there are several important differences between them, making them better suited for particular projects. So, what are the differences?", "is_article": "1", "is_index": "0", "has_video": "0", "has_image": "1", "word_count": "2265", "lang": "en", "time_to_read": 10, "top_image_url": "https://www.tooploox.com/wp-content/uploads/2020/10/Keras-vs.-Pytorch_COVER.jpg", "tags": {"pytorch": {"item_id": "3132443931", "tag": "pytorch"}, "tensorflow": {"item_id": "3132443931", "tag": "tensorflow"}}, "image": {"item_id": "3132443931", "src": "https://www.tooploox.com/wp-content/uploads/2020/10/Zrzut-ekranu-2020-10-2-o-14.34.59.png", "width": "0", "height": "0"}, "images": {"1": {"item_id": "3132443931", "image_id": "1", "src": "https://www.tooploox.com/wp-content/uploads/2020/10/Zrzut-ekranu-2020-10-2-o-14.34.59.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "2": {"item_id": "3132443931", "image_id": "2", "src": "https://www.tooploox.com/wp-content/uploads/2020/10/Keras-vs.-Pytorch_inside-txt_graph-1024x206.jpg", "width": "0", "height": "0", "credit": "", "caption": ""}, "3": {"item_id": "3132443931", "image_id": "3", "src": "https://www.tooploox.com/wp-content/uploads/2020/10/Keras-vs.-Pytorch_inside-txt-_1024.jpg", "width": "0", "height": "0", "credit": "", "caption": ""}, "4": {"item_id": "3132443931", "image_id": "4", "src": "https://www.tooploox.com/wp-content/uploads/2020/10/Keras-vs.-Pytorch_inside-txt-_2.jpg", "width": "0", "height": "0", "credit": "", "caption": ""}}, "listen_duration_estimate": 877}, "3189740136": {"item_id": "3189740136", "resolved_id": "3189740171", "given_url": "https://towardsdatascience.com/semantic-hand-segmentation-using-pytorch-3e7a0a0386fa?source=rss----7f60cf5620c9---4", "given_title": "Semantic hand segmentation using Pytorch", "favorite": "0", "status": "1", "time_added": "1606909319", "time_updated": "1638708525", "time_read": "1608254890", "time_favorited": "0", "sort_id": 56, "resolved_title": "Semantic hand segmentation using Pytorch", "resolved_url": "https://towardsdatascience.com/semantic-hand-segmentation-using-pytorch-3e7a0a0386fa", "excerpt": "Semantic segmentation is the task of predicting the class of each pixel in an image. This problem is more difficult than object detection, where you have to predict a box around the object.", "is_article": "1", "is_index": "0", "has_video": "0", "has_image": "1", "word_count": "1179", "lang": "en", "time_to_read": 5, "top_image_url": "https://miro.medium.com/freeze/max/600/1*J_ZxnuUMcCQt_fxoG4ffOQ.gif", "tags": {"deep-learning": {"item_id": "3189740136", "tag": "deep-learning"}, "pytorch": {"item_id": "3189740136", "tag": "pytorch"}, "vision": {"item_id": "3189740136", "tag": "vision"}}, "authors": {"143511438": {"item_id": "3189740136", "author_id": "143511438", "name": "Saurabh Kumar", "url": "https://saurabhk660.medium.com"}}, "image": {"item_id": "3189740136", "src": "https://miro.medium.com/fit/c/56/56/1*Kv-dyWlyTEb_KEHs8a8zlA.jpeg", "width": "28", "height": "28"}, "images": {"1": {"item_id": "3189740136", "image_id": "1", "src": "https://miro.medium.com/fit/c/56/56/1*Kv-dyWlyTEb_KEHs8a8zlA.jpeg", "width": "28", "height": "28", "credit": "", "caption": ""}, "2": {"item_id": "3189740136", "image_id": "2", "src": "https://miro.medium.com/max/1400/1*aNkDoJu9EkH_15f1v3Pdcg.png", "width": "700", "height": "303", "credit": "", "caption": "A sample of semantic hand segmentation. (images from HOF dataset[1])"}, "3": {"item_id": "3189740136", "image_id": "3", "src": "https://miro.medium.com/max/1400/1*CPtuThn8l44a6jj0wcXeog.png", "width": "700", "height": "219", "credit": "", "caption": "Outputs : 1. Hands prediction mask 2. No-hands prediction mask 3. Mask generated after comparing"}, "4": {"item_id": "3189740136", "image_id": "4", "src": "https://miro.medium.com/max/1200/1*J_ZxnuUMcCQt_fxoG4ffOQ.gif", "width": "600", "height": "532", "credit": "", "caption": "Sample hand segmentation"}}, "domain_metadata": {"name": "Towards Data Science", "logo": "https://logo.clearbit.com/towardsdatascience.com?size=800", "greyscale_logo": "https://logo.clearbit.com/towardsdatascience.com?size=800&greyscale=true"}, "listen_duration_estimate": 456}, "3812635120": {"item_id": "3812635120", "resolved_id": "3812635120", "given_url": "https://sebastianraschka.com/blog/2023/pytorch-faster.html", "given_title": "Some Techniques To Make Your PyTorch Models Train Faster", "favorite": "0", "status": "1", "time_added": "1677171978", "time_updated": "1677242026", "time_read": "1677242025", "time_favorited": "0", "sort_id": 57, "resolved_title": "Some Techniques To Make Your PyTorch Models Train Faster", "resolved_url": "https://sebastianraschka.com/blog/2023/pytorch-faster.html", "excerpt": "This blog post outlines techniques for improving the training performance of your PyTorch model without compromising its accuracy. To do so, we will wrap a PyTorch model in a LightningModule and use the Trainer class to enable various training optimizations.", "is_article": "1", "is_index": "0", "has_video": "0", "has_image": "1", "word_count": "3178", "lang": "en", "time_to_read": 14, "top_image_url": "https://sebastianraschka.com/images/blog/2023/pytorch-faster/hero.png", "tags": {"pytorch": {"item_id": "3812635120", "tag": "pytorch"}}, "authors": {"10017863": {"item_id": "3812635120", "author_id": "10017863", "name": "Sebastian Raschka", "url": ""}}, "image": {"item_id": "3812635120", "src": "https://sebastianraschka.com/images/blog/2023/pytorch-faster/3-techniques.png", "width": "0", "height": "0"}, "images": {"1": {"item_id": "3812635120", "image_id": "1", "src": "https://sebastianraschka.com/images/blog/2023/pytorch-faster/3-techniques.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "2": {"item_id": "3812635120", "image_id": "2", "src": "https://sebastianraschka.com/images/blog/2023/pytorch-faster/2-trainer.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "3": {"item_id": "3812635120", "image_id": "3", "src": "https://sebastianraschka.com/images/blog/2023/pytorch-faster/mixed-precision.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "4": {"item_id": "3812635120", "image_id": "4", "src": "https://sebastianraschka.com/images/blog/2023/pytorch-faster/benchmark-2.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "5": {"item_id": "3812635120", "image_id": "5", "src": "https://sebastianraschka.com/images/blog/2023/pytorch-faster/pytorch-2.0-img4.jpg", "width": "0", "height": "0", "credit": "", "caption": ""}, "6": {"item_id": "3812635120", "image_id": "6", "src": "https://sebastianraschka.com/images/blog/2023/pytorch-faster/multi-gpu.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "7": {"item_id": "3812635120", "image_id": "7", "src": "https://sebastianraschka.com/images/blog/2023/pytorch-faster/benchmark-3.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "8": {"item_id": "3812635120", "image_id": "8", "src": "https://sebastianraschka.com/images/blog/2023/pytorch-faster/ddp.png", "width": "0", "height": "0", "credit": "", "caption": ""}}, "listen_duration_estimate": 1230}, "2334152708": {"item_id": "2334152708", "resolved_id": "2334152708", "given_url": "https://pytorch.org/get-started/locally/", "given_title": "Start Locally | PyTorch", "favorite": "0", "status": "1", "time_added": "1607701386", "time_updated": "1607701395", "time_read": "1607701395", "time_favorited": "0", "sort_id": 58, "resolved_title": "PyTorch", "resolved_url": "https://pytorch.org/get-started/locally/", "excerpt": "Select your preferences and run the install command. Stable represents the most currently tested and supported version of PyTorch. This should be suitable for many users. Preview is available if you want the latest, not fully tested and supported, 1.10 builds that are generated nightly.", "is_article": "1", "is_index": "0", "has_video": "0", "has_image": "0", "word_count": "2071", "lang": "en", "time_to_read": 9, "top_image_url": "https://pytorch.org/assets/images/pytorch-logo.png", "tags": {"cuda": {"item_id": "2334152708", "tag": "cuda"}, "pytorch": {"item_id": "2334152708", "tag": "pytorch"}}, "listen_duration_estimate": 802}, "3638545504": {"item_id": "3638545504", "resolved_id": "3638545504", "given_url": "https://sebastianraschka.com/blog/2022/datapipes.html", "given_title": "Taking Datasets, DataLoaders, and PyTorch’s New DataPipes for a Spin", "favorite": "0", "status": "1", "time_added": "1655052103", "time_updated": "1655170083", "time_read": "1655170082", "time_favorited": "0", "sort_id": 59, "resolved_title": "Taking Datasets, DataLoaders, and PyTorch’s New DataPipes for a Spin", "resolved_url": "https://sebastianraschka.com/blog/2022/datapipes.html", "excerpt": "The PyTorch team recently announced TorchData, a prototype library focused on implementing composable and reusable data loading utilities for PyTorch.", "is_article": "1", "is_index": "0", "has_video": "0", "has_image": "1", "word_count": "3423", "lang": "en", "time_to_read": 16, "top_image_url": "https://sebastianraschka.com/images/blog/2022/datapipes/card.png", "tags": {"pytorch": {"item_id": "3638545504", "tag": "pytorch"}}, "authors": {"10017863": {"item_id": "3638545504", "author_id": "10017863", "name": "Sebastian Raschka", "url": ""}}, "image": {"item_id": "3638545504", "src": "https://sebastianraschka.com/images/blog/2022/datapipes/dataflow-bad.png", "width": "600", "height": "0"}, "images": {"1": {"item_id": "3638545504", "image_id": "1", "src": "https://sebastianraschka.com/images/blog/2022/datapipes/dataflow-bad.png", "width": "600", "height": "0", "credit": "", "caption": ""}, "2": {"item_id": "3638545504", "image_id": "2", "src": "https://sebastianraschka.com/images/blog/2022/datapipes/dataflow-good.png", "width": "600", "height": "0", "credit": "", "caption": ""}, "3": {"item_id": "3638545504", "image_id": "3", "src": "https://sebastianraschka.com/images/blog/2022/datapipes/mnist-folder.jpg", "width": "0", "height": "0", "credit": "", "caption": ""}, "4": {"item_id": "3638545504", "image_id": "4", "src": "https://sebastianraschka.com/images/blog/2022/datapipes/csv-files.jpg", "width": "0", "height": "0", "credit": "", "caption": ""}, "5": {"item_id": "3638545504", "image_id": "5", "src": "https://sebastianraschka.com/images/blog/2022/datapipes/loader-flow.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "6": {"item_id": "3638545504", "image_id": "6", "src": "https://sebastianraschka.com/images/blog/2022/datapipes/image-folder-2.jpg", "width": "500", "height": "0", "credit": "", "caption": ""}, "7": {"item_id": "3638545504", "image_id": "7", "src": "https://sebastianraschka.com/images/blog/2022/datapipes/datapipe-dropin.png", "width": "0", "height": "0", "credit": "", "caption": ""}}, "listen_duration_estimate": 1325}, "3105394082": {"item_id": "3105394082", "resolved_id": "3105394082", "given_url": "https://mlwhiz.com/blog/2020/09/09/pytorch_guide/", "given_title": "The Most Complete Guide to PyTorch for Data Scientists", "favorite": "0", "status": "1", "time_added": "1599595339", "time_updated": "1638708525", "time_read": "1604363865", "time_favorited": "0", "sort_id": 60, "resolved_title": "The Most Complete Guide to PyTorch for Data Scientists", "resolved_url": "https://mlwhiz.com/blog/2020/09/09/pytorch_guide/", "excerpt": "PyTorch has sort of became one of the de facto standards for creating Neural Networks now, and I love its interface. Yet, it is somehow a little difficult for beginners to get a hold of. I remember picking PyTorch up only after some extensive experimentation a couple of years back.", "is_article": "1", "is_index": "0", "has_video": "0", "has_image": "1", "word_count": "4578", "lang": "en", "time_to_read": 21, "top_image_url": "https://mlwhiz.com/images/pytorch_guide/main.png", "tags": {"deep-learning": {"item_id": "3105394082", "tag": "deep-learning"}, "pytorch": {"item_id": "3105394082", "tag": "pytorch"}}, "authors": {"8623619": {"item_id": "3105394082", "author_id": "8623619", "name": "Rahul Agarwal", "url": ""}}, "image": {"item_id": "3105394082", "src": "https://mlwhiz.com/images/pytorch_guide/0.png", "width": "0", "height": "0"}, "images": {"1": {"item_id": "3105394082", "image_id": "1", "src": "https://mlwhiz.com/images/pytorch_guide/0.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "2": {"item_id": "3105394082", "image_id": "2", "src": "https://mlwhiz.com/images/pytorch_guide/1.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "3": {"item_id": "3105394082", "image_id": "3", "src": "https://mlwhiz.com/images/pytorch_guide/2.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "4": {"item_id": "3105394082", "image_id": "4", "src": "https://mlwhiz.com/images/pytorch_guide/3.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "5": {"item_id": "3105394082", "image_id": "5", "src": "https://mlwhiz.com/images/pytorch_guide/4.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "6": {"item_id": "3105394082", "image_id": "6", "src": "https://mlwhiz.com/images/pytorch_guide/5.png", "width": "0", "height": "0", "credit": "", "caption": "Example of one random sequence and label. Each integer in the sequence corresponds to a word in the sentence."}, "7": {"item_id": "3105394082", "image_id": "7", "src": "https://mlwhiz.com/images/pytorch_guide/6.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "8": {"item_id": "3105394082", "image_id": "8", "src": "https://mlwhiz.com/images/pytorch_guide/7.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "9": {"item_id": "3105394082", "image_id": "9", "src": "https://mlwhiz.com/images/pytorch_guide/8.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "10": {"item_id": "3105394082", "image_id": "10", "src": "https://mlwhiz.com/images/pytorch_guide/9.png", "width": "0", "height": "0", "credit": "", "caption": ""}}, "listen_duration_estimate": 1772}, "3779070368": {"item_id": "3779070368", "resolved_id": "3779070368", "given_url": "https://towardsdatascience.com/torch-and-torchvision-c-installation-and-debugging-on-linux-263676c38fa2", "given_title": "Torch and Torchvision C   installation and debugging on Linux", "favorite": "0", "status": "1", "time_added": "1672766836", "time_updated": "1706833069", "time_read": "1673904097", "time_favorited": "0", "sort_id": 61, "resolved_title": "Torch and Torchvision C++ installation and debugging on Linux", "resolved_url": "https://towardsdatascience.com/torch-and-torchvision-c-installation-and-debugging-on-linux-263676c38fa2", "excerpt": "In this tutorial we are going to install Torch and Torchvision C++ libraries on a Linux machine to debug a function that is not written in Python but in C++.", "is_article": "1", "is_index": "0", "has_video": "0", "has_image": "0", "word_count": "2409", "lang": "en", "time_to_read": 11, "top_image_url": "https://miro.medium.com/max/825/1*sdG0loJNkXjq83kB6_BAVg.png", "tags": {"cpp": {"item_id": "3779070368", "tag": "cpp"}, "linux": {"item_id": "3779070368", "tag": "linux"}, "pytorch": {"item_id": "3779070368", "tag": "pytorch"}}, "authors": {"160244866": {"item_id": "3779070368", "author_id": "160244866", "name": "Alexey Kravets", "url": "https://medium.com/@alexml0123"}}, "domain_metadata": {"name": "Towards Data Science", "logo": "https://logo.clearbit.com/towardsdatascience.com?size=800", "greyscale_logo": "https://logo.clearbit.com/towardsdatascience.com?size=800&greyscale=true"}, "listen_duration_estimate": 933}, "4010591871": {"item_id": "4010591871", "resolved_id": "4010591871", "given_url": "https://towardsdatascience.com/differentiable-principal-component-analysis-in-pytorch-using-power-iteration-ee93ac9fa2c4", "given_title": "Understanding Principal Component Analysis in PyTorch", "favorite": "0", "status": "1", "time_added": "1708442585", "time_updated": "1708442609", "time_read": "1708442609", "time_favorited": "0", "sort_id": 62, "resolved_title": "Understanding Principal Component Analysis in PyTorch", "resolved_url": "https://towardsdatascience.com/differentiable-principal-component-analysis-in-pytorch-using-power-iteration-ee93ac9fa2c4", "excerpt": "PCA is an important tool for dimensionality reduction in data science and to compute grasp poses for robotic manipulation from point cloud data. PCA can also directly used within a larger machine learning framework as it is differentiable.", "is_article": "1", "is_index": "0", "has_video": "0", "has_image": "1", "word_count": "1838", "lang": "en", "time_to_read": 8, "top_image_url": "https://miro.medium.com/v2/resize:fit:1192/1*bLWUKmsBU0wi080CUgEhxA.png", "tags": {"pca": {"item_id": "4010591871", "tag": "pca"}, "pytorch": {"item_id": "4010591871", "tag": "pytorch"}}, "authors": {"188193409": {"item_id": "4010591871", "author_id": "188193409", "name": "Nikolaus Correll", "url": "https://medium.com/@nikolaus.correll"}}, "image": {"item_id": "4010591871", "src": "https://miro.medium.com/v2/da:true/resize:fill:88:88/0*16C4ZpLAHBnmozRf", "width": "44", "height": "44"}, "images": {"1": {"item_id": "4010591871", "image_id": "1", "src": "https://miro.medium.com/v2/da:true/resize:fill:88:88/0*16C4ZpLAHBnmozRf", "width": "44", "height": "44", "credit": "", "caption": ""}, "2": {"item_id": "4010591871", "image_id": "2", "src": "https://miro.medium.com/v2/resize:fill:48:48/1*CJe3891yB1A1mzMdqemkdg.jpeg", "width": "24", "height": "24", "credit": "", "caption": ""}}, "domain_metadata": {"name": "Towards Data Science", "logo": "https://logo.clearbit.com/towardsdatascience.com?size=800", "greyscale_logo": "https://logo.clearbit.com/towardsdatascience.com?size=800&greyscale=true"}, "listen_duration_estimate": 711}, "3279270461": {"item_id": "3279270461", "resolved_id": "3279270461", "given_url": "https://developer.nvidia.com/blog/using-rapids-with-pytorch/", "given_title": "Using RAPIDS with PyTorch", "favorite": "0", "status": "1", "time_added": "1615591167", "time_updated": "1615840103", "time_read": "1615840103", "time_favorited": "0", "sort_id": 63, "resolved_title": "Using RAPIDS with PyTorch", "resolved_url": "https://developer.nvidia.com/blog/using-rapids-with-pytorch/", "excerpt": "This post was originally published on the RAPIDS AI blog.", "is_article": "1", "is_index": "0", "has_video": "0", "has_image": "1", "word_count": "1675", "lang": "en", "time_to_read": 8, "top_image_url": "https://developer-blogs.nvidia.com/wp-content/uploads/2021/01/RAPIDSPyTorch_Image1-1.jpg", "tags": {"gpus": {"item_id": "3279270461", "tag": "gpus"}, "nvidia": {"item_id": "3279270461", "tag": "nvidia"}, "pytorch": {"item_id": "3279270461", "tag": "pytorch"}}, "authors": {"147999889": {"item_id": "3279270461", "author_id": "147999889", "name": "Even Oldridge", "url": "https://developer.nvidia.com/blog/author/eoldridge/"}}, "image": {"item_id": "3279270461", "src": "https://developer-blogs.nvidia.com/wp-content/uploads/2021/01/RAPIDSPyTorch_Image1-625x313.jpg", "width": "578", "height": "289"}, "images": {"1": {"item_id": "3279270461", "image_id": "1", "src": "https://developer-blogs.nvidia.com/wp-content/uploads/2021/01/RAPIDSPyTorch_Image1-625x313.jpg", "width": "578", "height": "289", "credit": "", "caption": ""}, "2": {"item_id": "3279270461", "image_id": "2", "src": "https://developer-blogs.nvidia.com/wp-content/uploads/2021/01/RAPIDSPython_Image2.png", "width": "456", "height": "217", "credit": "", "caption": ""}, "3": {"item_id": "3279270461", "image_id": "3", "src": "https://developer-blogs.nvidia.com/wp-content/uploads/2021/01/RAPIDSPyTorch_Image3.png", "width": "432", "height": "246", "credit": "", "caption": ""}, "4": {"item_id": "3279270461", "image_id": "4", "src": "https://developer-blogs.nvidia.com/wp-content/uploads/2021/01/RAPIDSPyTorch_Image4.png", "width": "529", "height": "398", "credit": "", "caption": ""}, "5": {"item_id": "3279270461", "image_id": "5", "src": "https://developer-blogs.nvidia.com/wp-content/uploads/2021/01/RAPIDSPyTorch_Image5-625x130.png", "width": "625", "height": "130", "credit": "", "caption": ""}}, "listen_duration_estimate": 648}, "3917153167": {"item_id": "3917153167", "resolved_id": "3917134072", "given_url": "https://towardsdatascience.com/variational-autoencoder-vae-with-discrete-distribution-using-gumbel-softmax-b3f749b3417e?source=rss----7f60cf5620c9---4", "given_title": "Variational Autoencoder (VAE) with Discrete Distribution using Gumbel Softm", "favorite": "0", "status": "1", "time_added": "1691621740", "time_updated": "1691682640", "time_read": "1691682640", "time_favorited": "0", "sort_id": 64, "resolved_title": "Variational Autoencoder (VAE) with Discrete Distribution using Gumbel Softmax", "resolved_url": "https://towardsdatascience.com/variational-autoencoder-vae-with-discrete-distribution-using-gumbel-softmax-b3f749b3417e", "excerpt": "Generative models have become very popular nowadays thanks to their ability to generate novel samples with inherent variability by learning and capturing the underlying probability distribution of the training data.", "is_article": "1", "is_index": "0", "has_video": "0", "has_image": "1", "word_count": "292", "lang": "en", "top_image_url": "https://miro.medium.com/v2/resize:fit:640/1*IB22-8qoNpIITYqKA034lQ.png", "tags": {"autoencoders": {"item_id": "3917153167", "tag": "autoencoders"}, "deep-learning": {"item_id": "3917153167", "tag": "deep-learning"}, "generative": {"item_id": "3917153167", "tag": "generative"}, "pytorch": {"item_id": "3917153167", "tag": "pytorch"}}, "authors": {"160244866": {"item_id": "3917153167", "author_id": "160244866", "name": "Alexey Kravets", "url": "https://medium.com/@alexml0123"}}, "image": {"item_id": "3917153167", "src": "https://miro.medium.com/v2/resize:fill:88:88/1*Sk0BsQAVvq8-jQhT9iVrwQ.jpeg", "width": "44", "height": "44"}, "images": {"1": {"item_id": "3917153167", "image_id": "1", "src": "https://miro.medium.com/v2/resize:fill:88:88/1*Sk0BsQAVvq8-jQhT9iVrwQ.jpeg", "width": "44", "height": "44", "credit": "", "caption": ""}, "2": {"item_id": "3917153167", "image_id": "2", "src": "https://miro.medium.com/v2/resize:fill:48:48/1*CJe3891yB1A1mzMdqemkdg.jpeg", "width": "24", "height": "24", "credit": "", "caption": ""}}, "domain_metadata": {"name": "Towards Data Science", "logo": "https://logo.clearbit.com/towardsdatascience.com?size=800", "greyscale_logo": "https://logo.clearbit.com/towardsdatascience.com?size=800&greyscale=true"}, "listen_duration_estimate": 113}, "1667130288": {"item_id": "1667130288", "resolved_id": "1667130288", "given_url": "https://pytorch.org/tutorials/", "given_title": "Welcome to PyTorch Tutorials — PyTorch Tutorials 1.3.0 documentation", "favorite": "0", "status": "1", "time_added": "1571231409", "time_updated": "1608336444", "time_read": "1576355481", "time_favorited": "0", "sort_id": 65, "resolved_title": "Welcome to PyTorch Tutorials — PyTorch Tutorials 1.10.0+cu102 documentation", "resolved_url": "http://pytorch.org/tutorials/", "excerpt": "Familiarize yourself with PyTorch concepts and modules. Learn how to load data, build deep neural networks, train and save your models in this quickstart guide. Bite-size, ready-to-deploy PyTorch code examples.", "is_article": "1", "is_index": "1", "has_video": "0", "has_image": "1", "word_count": "1319", "lang": "en", "time_to_read": 6, "tags": {"pytorch": {"item_id": "1667130288", "tag": "pytorch"}}, "image": {"item_id": "1667130288", "src": "https://pytorch.org/tutorials/_static/img/thumbnails/cropped/learning-pytorch-with-examples.png", "width": "0", "height": "0"}, "images": {"1": {"item_id": "1667130288", "image_id": "1", "src": "https://pytorch.org/tutorials/_static/img/thumbnails/cropped/learning-pytorch-with-examples.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "2": {"item_id": "1667130288", "image_id": "2", "src": "https://pytorch.org/tutorials/_static/img/thumbnails/cropped/torch-nn.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "3": {"item_id": "1667130288", "image_id": "3", "src": "https://pytorch.org/tutorials/_static/img/thumbnails/cropped/visualizing-with-tensorboard.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "4": {"item_id": "1667130288", "image_id": "4", "src": "https://pytorch.org/tutorials/_static/img/thumbnails/cropped/TorchVision-Object-Detection-Finetuning-Tutorial.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "5": {"item_id": "1667130288", "image_id": "5", "src": "https://pytorch.org/tutorials/_static/img/thumbnails/cropped/Transfer-Learning-for-Computer-Vision-Tutorial.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "6": {"item_id": "1667130288", "image_id": "6", "src": "https://pytorch.org/tutorials/_static/img/thumbnails/cropped/Adversarial-Example-Generation.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "7": {"item_id": "1667130288", "image_id": "7", "src": "https://pytorch.org/tutorials/_static/img/thumbnails/cropped/DCGAN-Tutorial.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "8": {"item_id": "1667130288", "image_id": "8", "src": "https://pytorch.org/tutorials/_static/img/thumbnails/cropped/torchaudio-asr.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "9": {"item_id": "1667130288", "image_id": "9", "src": "https://pytorch.org/tutorials/_static/img/thumbnails/cropped/torchaudio-alignment.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "10": {"item_id": "1667130288", "image_id": "10", "src": "https://pytorch.org/tutorials/_static/img/thumbnails/cropped/Sequence-to-Sequence-Modeling-with-nnTransformer-andTorchText.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "11": {"item_id": "1667130288", "image_id": "11", "src": "https://pytorch.org/tutorials/_static/img/thumbnails/cropped/NLP-From-Scratch-Classifying-Names-with-a-Character-Level-RNN.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "12": {"item_id": "1667130288", "image_id": "12", "src": "https://pytorch.org/tutorials/_static/img/thumbnails/cropped/NLP-From-Scratch-Generating-Names-with-a-Character-Level-RNN.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "13": {"item_id": "1667130288", "image_id": "13", "src": "https://pytorch.org/tutorials/_static/img/thumbnails/cropped/NLP-From-Scratch-Translation-with-a-Sequence-to-Sequence-Network-and-Attention.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "14": {"item_id": "1667130288", "image_id": "14", "src": "https://pytorch.org/tutorials/_static/img/thumbnails/cropped/Text-Classification-with-TorchText.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "15": {"item_id": "1667130288", "image_id": "15", "src": "https://pytorch.org/tutorials/_static/img/thumbnails/cropped/Language-Translation-with-TorchText.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "16": {"item_id": "1667130288", "image_id": "16", "src": "https://pytorch.org/tutorials/_static/img/thumbnails/cropped/Introduction-to-TorchScript.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "17": {"item_id": "1667130288", "image_id": "17", "src": "https://pytorch.org/tutorials/_static/img/thumbnails/cropped/Loading-a-TorchScript-Model-in-Cpp.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "18": {"item_id": "1667130288", "image_id": "18", "src": "https://pytorch.org/tutorials/_static/img/thumbnails/cropped/optional-Exporting-a-Model-from-PyTorch-to-ONNX-and-Running-it-using-ONNX-Runtime.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "19": {"item_id": "1667130288", "image_id": "19", "src": "https://pytorch.org/tutorials/_static/img/thumbnails/cropped/experimental-Channels-Last-Memory-Format-in-PyTorch.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "20": {"item_id": "1667130288", "image_id": "20", "src": "https://pytorch.org/tutorials/_static/img/thumbnails/cropped/Using-the-PyTorch-Cpp-Frontend.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "21": {"item_id": "1667130288", "image_id": "21", "src": "https://pytorch.org/tutorials/_static/img/thumbnails/cropped/Custom-Cpp-and-CUDA-Extensions.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "22": {"item_id": "1667130288", "image_id": "22", "src": "https://pytorch.org/tutorials/_static/img/thumbnails/cropped/Extending-TorchScript-with-Custom-Cpp-Operators.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "23": {"item_id": "1667130288", "image_id": "23", "src": "https://pytorch.org/tutorials/_static/img/thumbnails/cropped/Extending-TorchScript-with-Custom-Cpp-Classes.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "24": {"item_id": "1667130288", "image_id": "24", "src": "https://pytorch.org/tutorials/_static/img/thumbnails/cropped/TorchScript-Parallelism.jpg", "width": "0", "height": "0", "credit": "", "caption": ""}, "25": {"item_id": "1667130288", "image_id": "25", "src": "https://pytorch.org/tutorials/_static/img/thumbnails/cropped/Autograd-in-Cpp-Frontend.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "26": {"item_id": "1667130288", "image_id": "26", "src": "https://pytorch.org/tutorials/_static/img/thumbnails/cropped/parametrizations.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "27": {"item_id": "1667130288", "image_id": "27", "src": "https://pytorch.org/tutorials/_static/img/thumbnails/cropped/Pruning-Tutorial.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "28": {"item_id": "1667130288", "image_id": "28", "src": "https://pytorch.org/tutorials/_static/img/thumbnails/cropped/experimental-Dynamic-Quantization-on-an-LSTM-Word-Language-Model.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "29": {"item_id": "1667130288", "image_id": "29", "src": "https://pytorch.org/tutorials/_static/img/thumbnails/cropped/experimental-Dynamic-Quantization-on-BERT.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "30": {"item_id": "1667130288", "image_id": "30", "src": "https://pytorch.org/tutorials/_static/img/thumbnails/cropped/PyTorch-Distributed-Overview.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "31": {"item_id": "1667130288", "image_id": "31", "src": "https://pytorch.org/tutorials/_static/img/thumbnails/cropped/Model-Parallel-Best-Practices.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "32": {"item_id": "1667130288", "image_id": "32", "src": "https://pytorch.org/tutorials/_static/img/thumbnails/cropped/Getting-Started-with-Distributed-Data-Parallel.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "33": {"item_id": "1667130288", "image_id": "33", "src": "https://pytorch.org/tutorials/_static/img/thumbnails/cropped/Writing-Distributed-Applications-with-PyTorch.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "34": {"item_id": "1667130288", "image_id": "34", "src": "https://pytorch.org/tutorials/_static/img/thumbnails/cropped/Getting%20Started%20with%20Distributed-RPC-Framework.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "35": {"item_id": "1667130288", "image_id": "35", "src": "https://pytorch.org/tutorials/_static/img/thumbnails/cropped/Implementing-a-Parameter-Server-Using-Distributed-RPC-Framework.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "36": {"item_id": "1667130288", "image_id": "36", "src": "https://pytorch.org/tutorials/_static/img/thumbnails/cropped/Distributed-Pipeline-Parallelism-Using-RPC.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "37": {"item_id": "1667130288", "image_id": "37", "src": "https://pytorch.org/tutorials/_static/img/thumbnails/cropped/Implementing-Batch-RPC-Processing-Using-Asynchronous-Executions.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "38": {"item_id": "1667130288", "image_id": "38", "src": "https://pytorch.org/tutorials/_static/img/thumbnails/cropped/Combining-Distributed-DataParallel-with-Distributed-RPC-Framework.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "39": {"item_id": "1667130288", "image_id": "39", "src": "https://pytorch.org/tutorials/_static/img/thumbnails/cropped/Training-Transformer-models-using-Pipeline-Parallelism.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "40": {"item_id": "1667130288", "image_id": "40", "src": "https://pytorch.org/tutorials/_static/img/thumbnails/cropped/Training-Transformer-Models-using-Distributed-Data-Parallel-and-Pipeline-Parallelism.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "41": {"item_id": "1667130288", "image_id": "41", "src": "https://pytorch.org/tutorials/_static/img/thumbnails/cropped/ios.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "42": {"item_id": "1667130288", "image_id": "42", "src": "https://pytorch.org/tutorials/_static/img/thumbnails/cropped/android.png", "width": "0", "height": "0", "credit": "", "caption": ""}}, "listen_duration_estimate": 511}, "3785999411": {"item_id": "3785999411", "resolved_id": "3785999411", "given_url": "https://thenextweb.com/news/why-tensorflow-for-python-is-dying-a-slow-death", "given_title": "Why TensorFlow for Python is dying a slow death", "favorite": "0", "status": "1", "time_added": "1673624332", "time_updated": "1673625815", "time_read": "1673625815", "time_favorited": "0", "sort_id": 66, "resolved_title": "Why TensorFlow for Python is dying a slow death", "resolved_url": "https://thenextweb.com/news/why-tensorflow-for-python-is-dying-a-slow-death", "excerpt": "Religious wars have been a cornerstone in tech. Whether it’s debating about the pros and cons of different operating systems, cloud providers, or deep learning frameworks — a few beers in, the facts slide aside and people start fighting for their technology like it’s the holy grail.", "is_article": "1", "is_index": "0", "has_video": "0", "has_image": "1", "word_count": "1203", "lang": "en", "time_to_read": 5, "top_image_url": "https://img-cdn.tnwcdn.com/image/tnw?filter_last=1&fit=1280%2C640&url=https%3A%2F%2Fcdn0.tnwcdn.com%2Fwp-content%2Fblogs.dir%2F1%2Ffiles%2F2023%2F01%2FAdd-a-heading-1.jpg&signature=0118422d6dab7f09d89f3c0b7b7e58df", "tags": {"deep-learning": {"item_id": "3785999411", "tag": "deep-learning"}, "python": {"item_id": "3785999411", "tag": "python"}, "pytorch": {"item_id": "3785999411", "tag": "pytorch"}, "tensorflow": {"item_id": "3785999411", "tag": "tensorflow"}}, "authors": {"159777247": {"item_id": "3785999411", "author_id": "159777247", "name": "Ari Joury", "url": ""}}, "image": {"item_id": "3785999411", "src": "https://cdn0.tnwcdn.com/wp-content/blogs.dir/1/files/2023/01/Screenshot-2023-01-13-at-2.32.32-PM.png", "width": "1390", "height": "942"}, "images": {"1": {"item_id": "3785999411", "image_id": "1", "src": "https://cdn0.tnwcdn.com/wp-content/blogs.dir/1/files/2023/01/Screenshot-2023-01-13-at-2.32.32-PM.png", "width": "1390", "height": "942", "credit": "", "caption": ""}}, "domain_metadata": {"name": "The Next Web", "logo": "https://logo.clearbit.com/thenextweb.com?size=800", "greyscale_logo": "https://logo.clearbit.com/thenextweb.com?size=800&greyscale=true"}, "listen_duration_estimate": 466}, "1601007829": {"item_id": "1601007829", "resolved_id": "1601007829", "given_url": "https://github.com/wiseodd/generative-models", "given_title": "wiseodd/generative-models: Collection of generative models, e.g. GAN, VAE i", "favorite": "0", "status": "1", "time_added": "1492438290", "time_updated": "1638708525", "time_read": "1510366393", "time_favorited": "0", "sort_id": 67, "resolved_title": "Generative Models", "resolved_url": "https://github.com/wiseodd/generative-models", "excerpt": "Collection of generative models, e.g. GAN, VAE in Pytorch and Tensorflow. Also present here are RBM and Helmholtz Machine. Generated samples will be stored in GAN/{gan_model}/out (or VAE/{vae_model}/out, etc) directory during training.", "is_article": "1", "is_index": "0", "has_video": "0", "has_image": "0", "word_count": "161", "lang": "en", "top_image_url": "https://opengraph.githubassets.com/8460f0d0de76e5f14c5afd4a41483ec9bb0ea9135da09b2c8142ccae4ee25e55/wiseodd/generative-models", "tags": {"deep-learning": {"item_id": "1601007829", "tag": "deep-learning"}, "pytorch": {"item_id": "1601007829", "tag": "pytorch"}, "tensorflow": {"item_id": "1601007829", "tag": "tensorflow"}}, "domain_metadata": {"name": "GitHub", "logo": "https://logo.clearbit.com/github.com?size=800", "greyscale_logo": "https://logo.clearbit.com/github.com?size=800&greyscale=true"}, "listen_duration_estimate": 62}, "3746112338": {"item_id": "3746112338", "resolved_id": "3746112338", "given_url": "https://exxactcorp.com/blog/Deep-Learning/YOLOv5-PyTorch-Tutorial", "given_title": "YOLOv5 PyTorch Tutorial", "favorite": "0", "status": "1", "time_added": "1671133984", "time_updated": "1671237142", "time_read": "1671237142", "time_favorited": "0", "sort_id": 68, "resolved_title": "YOLOv5 PyTorch Tutorial", "resolved_url": "https://www.exxactcorp.com/blog/Deep-Learning/YOLOv5-PyTorch-Tutorial", "excerpt": "YOLO, an acronym for 'You only look once,’ is an open-source software tool utilized for its efficient capability of detecting objects in a given image in real time. The YOLO algorithm uses convolutional neural network (CNN) models to detect objects in an image.", "is_article": "1", "is_index": "0", "has_video": "0", "has_image": "1", "word_count": "1999", "lang": "en", "time_to_read": 9, "tags": {"object-detection": {"item_id": "3746112338", "tag": "object-detection"}, "pytorch": {"item_id": "3746112338", "tag": "pytorch"}}, "image": {"item_id": "3746112338", "src": "https://images.contentstack.io/v3/assets/blt71da4c740e00faaa/blt18465d54bbedd95b/6359ac9f7a7bad106b9abf97/EXX-Blog-pytorch-yolo5-tutorial-2.jpg", "width": "0", "height": "0"}, "images": {"1": {"item_id": "3746112338", "image_id": "1", "src": "https://images.contentstack.io/v3/assets/blt71da4c740e00faaa/blt18465d54bbedd95b/6359ac9f7a7bad106b9abf97/EXX-Blog-pytorch-yolo5-tutorial-2.jpg", "width": "0", "height": "0", "credit": "", "caption": ""}, "2": {"item_id": "3746112338", "image_id": "2", "src": "https://images.contentstack.io/v3/assets/blt71da4c740e00faaa/blt12696d71361cb994/6359ac9f6eed4a5820f4ab7b/EXX-Blog-pytorch-yolo5-tutorial-3.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "3": {"item_id": "3746112338", "image_id": "3", "src": "https://images.contentstack.io/v3/assets/blt71da4c740e00faaa/blt0f880ebc89b64f9b/6359ac9fcf87d95f7d46e7ab/EXX-Blog-pytorch-yolo5-tutorial-4.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "4": {"item_id": "3746112338", "image_id": "4", "src": "https://images.contentstack.io/v3/assets/blt71da4c740e00faaa/bltab1f26f9f9b49f54/6359ac9f64e87d5f88c56469/EXX-Blog-pytorch-yolo5-tutorial-5.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "5": {"item_id": "3746112338", "image_id": "5", "src": "https://images.contentstack.io/v3/assets/blt71da4c740e00faaa/blt34437cddedeb95eb/6359ac9fe63a425d5dc5b4b0/EXX-Blog-pytorch-yolo5-tutorial-6.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "6": {"item_id": "3746112338", "image_id": "6", "src": "https://images.contentstack.io/v3/assets/blt71da4c740e00faaa/blt70e4bb431e684baf/6359ac9f9a123e5dbdbc9457/EXX-Blog-pytorch-yolo5-tutorial-7.png", "width": "0", "height": "0", "credit": "", "caption": ""}}, "listen_duration_estimate": 774}}, "error": nil, "search_meta": {"search_type": "normal"}, "since": 1709934853}