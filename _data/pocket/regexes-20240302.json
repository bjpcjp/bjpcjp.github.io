{"status": 1, "complete": 1, "list": {"497253591": {"item_id": "497253591", "resolved_id": "497253591", "given_url": "http://regexr.com/", "given_title": "", "favorite": "0", "status": "1", "time_added": "1638240363", "time_updated": "1706833159", "time_read": "1640553142", "time_favorited": "0", "sort_id": 0, "resolved_title": "", "resolved_url": "https://regexr.com/", "excerpt": "", "is_article": "0", "is_index": "0", "has_video": "0", "has_image": "0", "word_count": "0", "lang": "", "tags": {"programming": {"item_id": "497253591", "tag": "programming"}, "regexes": {"item_id": "497253591", "tag": "regexes"}}, "listen_duration_estimate": 0}, "624851051": {"item_id": "624851051", "resolved_id": "624851051", "given_url": "http://rexegg.com/regex-best-trick.html", "given_title": "The Best Regex Trick", "favorite": "0", "status": "1", "time_added": "1625857148", "time_updated": "1682421867", "time_read": "1625912037", "time_favorited": "0", "sort_id": 1, "resolved_title": "The Best Regex Trick Ever (at last!)", "resolved_url": "https://www.rexegg.com/regex-best-trick.html", "excerpt": "Here are some of the questions that our regex trick is able to answer with speed and grace: To see how convenient the trick is, it helps to first see how inconvenient some matching tasks can be when you don't know it. So let's see what other solutions exist.", "is_article": "1", "is_index": "0", "has_video": "0", "has_image": "1", "word_count": "5415", "lang": "en", "time_to_read": 25, "tags": {"regexes": {"item_id": "624851051", "tag": "regexes"}}, "image": {"item_id": "624851051", "src": "https://d1go27vtttaqyn.cloudfront.net/next_regex.png", "width": "125", "height": "40"}, "images": {"1": {"item_id": "624851051", "image_id": "1", "src": "https://d1go27vtttaqyn.cloudfront.net/next_regex.png", "width": "125", "height": "40", "credit": "", "caption": ""}, "2": {"item_id": "624851051", "image_id": "2", "src": "https://d1go27vtttaqyn.cloudfront.net/rightgraphic_rexegg3.png", "width": "100", "height": "100", "credit": "", "caption": ""}}, "listen_duration_estimate": 2096}, "4007209653": {"item_id": "4007209653", "resolved_id": "4007209653", "given_url": "https://dev.to/sh20raj/top-50-useful-regex-patterns-2jab", "given_title": "Top 50 Useful Regex Patterns", "favorite": "0", "status": "1", "time_added": "1707844731", "time_updated": "1707940415", "time_read": "1707940415", "time_favorited": "0", "sort_id": 2, "resolved_title": "Top 50 Useful Regex Patterns", "resolved_url": "https://dev.to/sh20raj/top-50-useful-regex-patterns-2jab", "excerpt": "Regular expressions (regex) are a powerful tool for pattern matching and text manipulation in JavaScript. Whether you're validating user input, extracting data from strings, or replacing text, regex can streamline your coding tasks.", "is_article": "1", "is_index": "0", "has_video": "0", "has_image": "1", "word_count": "647", "lang": "en", "time_to_read": 3, "top_image_url": "https://media.dev.to/cdn-cgi/image/width=1000,height=500,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fhkjzg3sg1xr9cqk64d0t.jpeg", "tags": {"regexes": {"item_id": "4007209653", "tag": "regexes"}}, "image": {"item_id": "4007209653", "src": "https://media.dev.to/cdn-cgi/image/width=1000,height=420,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fhkjzg3sg1xr9cqk64d0t.jpeg", "width": "1000", "height": "420"}, "images": {"1": {"item_id": "4007209653", "image_id": "1", "src": "https://media.dev.to/cdn-cgi/image/width=1000,height=420,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fhkjzg3sg1xr9cqk64d0t.jpeg", "width": "1000", "height": "420", "credit": "", "caption": ""}}, "domain_metadata": {"name": "The Practical Dev", "logo": "https://logo.clearbit.com/dev.to?size=800", "greyscale_logo": "https://logo.clearbit.com/dev.to?size=800&greyscale=true"}, "listen_duration_estimate": 250}, "3939478666": {"item_id": "3939478666", "resolved_id": "3939478666", "given_url": "https://dev.to/tanushree_aggarwal/linux-3-ways-to-search-patterns-in-files-1do0", "given_title": "Linux: 3 ways to search patterns in files", "favorite": "0", "status": "1", "time_added": "1695431940", "time_updated": "1695469549", "time_read": "1695469549", "time_favorited": "0", "sort_id": 3, "resolved_title": "Linux: 3 ways to search patterns in files", "resolved_url": "https://dev.to/tanushree_aggarwal/linux-3-ways-to-search-patterns-in-files-1do0", "excerpt": "This is the first post in my bite-sized learning series. In this series we will be taking simple every day use cases and walking through multiple ways to achieve them.", "is_article": "1", "is_index": "0", "has_video": "0", "has_image": "1", "word_count": "862", "lang": "en", "time_to_read": 4, "top_image_url": "https://res.cloudinary.com/practicaldev/image/fetch/s--ci91h6VL--/c_imagga_scale,f_auto,fl_progressive,h_500,q_auto,w_1000/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s5ys2rqks4pdh64z6e36.jpg", "tags": {"awk": {"item_id": "3939478666", "tag": "awk"}, "linux": {"item_id": "3939478666", "tag": "linux"}, "regexes": {"item_id": "3939478666", "tag": "regexes"}}, "image": {"item_id": "3939478666", "src": "https://res.cloudinary.com/practicaldev/image/fetch/s--cJ2j40SG--/c_imagga_scale,f_auto,fl_progressive,h_420,q_auto,w_1000/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s5ys2rqks4pdh64z6e36.jpg", "width": "1000", "height": "420"}, "images": {"1": {"item_id": "3939478666", "image_id": "1", "src": "https://res.cloudinary.com/practicaldev/image/fetch/s--cJ2j40SG--/c_imagga_scale,f_auto,fl_progressive,h_420,q_auto,w_1000/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s5ys2rqks4pdh64z6e36.jpg", "width": "1000", "height": "420", "credit": "", "caption": ""}, "2": {"item_id": "3939478666", "image_id": "2", "src": "https://res.cloudinary.com/practicaldev/image/fetch/s--rVONo_wh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5ap1zfunstm4io7bcem4.png", "width": "513", "height": "147", "credit": "", "caption": ""}, "3": {"item_id": "3939478666", "image_id": "3", "src": "https://res.cloudinary.com/practicaldev/image/fetch/s--S_15dK6C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q4qmeaarm0uhqok34y2x.png", "width": "557", "height": "89", "credit": "", "caption": ""}, "4": {"item_id": "3939478666", "image_id": "4", "src": "https://res.cloudinary.com/practicaldev/image/fetch/s--pH9-jR13--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tupcoeddovtreq0kchd1.png", "width": "578", "height": "124", "credit": "", "caption": ""}, "5": {"item_id": "3939478666", "image_id": "5", "src": "https://res.cloudinary.com/practicaldev/image/fetch/s--XqWWduno--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_800/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ec2eocrbvbz047uyi22i.png", "width": "784", "height": "140", "credit": "", "caption": ""}}, "domain_metadata": {"name": "The Practical Dev", "logo": "https://logo.clearbit.com/dev.to?size=800", "greyscale_logo": "https://logo.clearbit.com/dev.to?size=800&greyscale=true"}, "listen_duration_estimate": 334}, "3477756693": {"item_id": "3477756693", "resolved_id": "3477756693", "given_url": "https://regexlearn.com/", "given_title": "", "favorite": "0", "status": "1", "time_added": "1637250131", "time_updated": "1682421867", "time_read": "1637258740", "time_favorited": "0", "sort_id": 4, "resolved_title": "Learn Regex step by step, from zero to advanced.", "resolved_url": "https://regexlearn.com//", "excerpt": "Regular Expressions, abbreviated as Regex or Regexp, are a string of characters created within the framework of Regex syntax rules. You can easily manage your data with Regex, which uses commands like finding, matching, and editing.", "is_article": "1", "is_index": "1", "has_video": "0", "has_image": "0", "word_count": "70", "lang": "en", "top_image_url": "https://regexlearn.com//images/og-regexlearn-image.jpg", "tags": {"regexes": {"item_id": "3477756693", "tag": "regexes"}}, "listen_duration_estimate": 27}, "625743435": {"item_id": "625743435", "resolved_id": "625743435", "given_url": "https://stackoverflow.com/questions/6109882/regex-match-all-characters-between-two-strings", "given_title": "Regex Match all characters between two strings - Stack Overflow", "favorite": "0", "status": "1", "time_added": "1638219881", "time_updated": "1682421867", "time_read": "1656162277", "time_favorited": "0", "sort_id": 5, "resolved_title": "Regex Match all characters between two strings", "resolved_url": "https://stackoverflow.com/questions/6109882/regex-match-all-characters-between-two-strings", "excerpt": "Example: \"This is just\\na simple sentence\". I want to match every character between \"This is\" and \"sentence\". Line breaks should be ignored. I can't figure out the correct syntax.", "is_article": "1", "is_index": "0", "has_video": "0", "has_image": "1", "word_count": "1206", "lang": "en", "time_to_read": 5, "top_image_url": "https://cdn.sstatic.net/Sites/stackoverflow/Img/apple-touch-icon@2.png?v=73d79a89bded", "tags": {"regexes": {"item_id": "625743435", "tag": "regexes"}}, "authors": {"69008433": {"item_id": "625743435", "author_id": "69008433", "name": "Dave Jarvis", "url": "https://stackoverflow.com/users/59087/dave-jarvis"}, "74024915": {"item_id": "625743435", "author_id": "74024915", "name": "0xbadf00d", "url": "https://stackoverflow.com/users/547231/0xbadf00d"}}, "image": {"item_id": "625743435", "src": "https://i.stack.imgur.com/pgAl7.png?s=32&g=1", "width": "32", "height": "32"}, "images": {"1": {"item_id": "625743435", "image_id": "1", "src": "https://i.stack.imgur.com/pgAl7.png?s=32&g=1", "width": "32", "height": "32", "credit": "", "caption": ""}, "2": {"item_id": "625743435", "image_id": "2", "src": "https://i.stack.imgur.com/mVM0V.png?s=32&g=1", "width": "32", "height": "32", "credit": "", "caption": ""}, "3": {"item_id": "625743435", "image_id": "3", "src": "https://lh4.googleusercontent.com/-kDNI-FRSQ6E/AAAAAAAAAAI/AAAAAAAAE_A/P_wcPr3z-3Y/photo.jpg?sz=32", "width": "32", "height": "32", "credit": "", "caption": ""}, "4": {"item_id": "625743435", "image_id": "4", "src": "https://graph.facebook.com/1394917570634518/picture?type=large", "width": "32", "height": "32", "credit": "", "caption": ""}, "5": {"item_id": "625743435", "image_id": "5", "src": "https://i.stack.imgur.com/Z0g8T.png?s=32&g=1", "width": "32", "height": "32", "credit": "", "caption": ""}, "6": {"item_id": "625743435", "image_id": "6", "src": "https://i.stack.imgur.com/lw1z3.png?s=32&g=1", "width": "32", "height": "32", "credit": "", "caption": ""}}, "domain_metadata": {"name": "Stack Overflow", "logo": "https://logo.clearbit.com/stackoverflow.com?size=800", "greyscale_logo": "https://logo.clearbit.com/stackoverflow.com?size=800&greyscale=true"}, "listen_duration_estimate": 467}, "3831590357": {"item_id": "3831590357", "resolved_id": "3831590357", "given_url": "https://towardsdatascience.com/how-to-parse-html-with-regex-6b9c0980382f", "given_title": "How To Parse HTML With Regex", "favorite": "0", "status": "1", "time_added": "1679599248", "time_updated": "1682421867", "time_read": "1679752412", "time_favorited": "0", "sort_id": 6, "resolved_title": "How To Parse HTML With Regex", "resolved_url": "https://towardsdatascience.com/how-to-parse-html-with-regex-6b9c0980382f", "excerpt": "Python allows you to natively parse HTML and extract the data you need from it. Whether you are an experienced Python developer or just getting started, this step-by-step tutorial will teach you how to parse HTML with regex like a pro. Let’s dig into HTML parsing in Python!", "is_article": "1", "is_index": "0", "has_video": "0", "has_image": "0", "word_count": "2776", "lang": "en", "time_to_read": 13, "top_image_url": "https://miro.medium.com/v2/resize:fit:1200/0*PZSgzhnMpultg8mV", "tags": {"python": {"item_id": "3831590357", "tag": "python"}, "regexes": {"item_id": "3831590357", "tag": "regexes"}, "web-scraping": {"item_id": "3831590357", "tag": "web-scraping"}}, "authors": {"146854547": {"item_id": "3831590357", "author_id": "146854547", "name": "Antonello Zanini", "url": "https://antozanini.medium.com"}}, "domain_metadata": {"name": "Towards Data Science", "logo": "https://logo.clearbit.com/towardsdatascience.com?size=800", "greyscale_logo": "https://logo.clearbit.com/towardsdatascience.com?size=800&greyscale=true"}, "listen_duration_estimate": 1075}, "2702482697": {"item_id": "2702482697", "resolved_id": "2702482697", "given_url": "https://www.bounteous.com/files/uploads/Regular-Expressions-Google-Analytics_2019.pdf", "given_title": "", "favorite": "0", "status": "1", "time_added": "1581253180", "time_updated": "1682421867", "time_read": "1581275843", "time_favorited": "0", "sort_id": 7, "resolved_title": "", "resolved_url": "https://www.bounteous.com/files/uploads/Regular-Expressions-Google-Analytics_2019.pdf", "excerpt": "", "is_article": "0", "is_index": "0", "has_video": "0", "has_image": "0", "word_count": "0", "lang": "", "tags": {"analytics": {"item_id": "2702482697", "tag": "analytics"}, "regexes": {"item_id": "2702482697", "tag": "regexes"}}, "listen_duration_estimate": 0}, "138637740": {"item_id": "138637740", "resolved_id": "138637740", "given_url": "https://www.crummy.com/software/BeautifulSoup/bs4/doc/", "given_title": "Beautiful Soup Documentation — Beautiful Soup 4.9.0 documentation", "favorite": "0", "status": "1", "time_added": "1631123172", "time_updated": "1706833159", "time_read": "1631137991", "time_favorited": "0", "sort_id": 8, "resolved_title": "Beautiful Soup Documentation — Beautiful Soup 4.12.0 documentation", "resolved_url": "https://www.crummy.com/software/BeautifulSoup/bs4/doc/", "excerpt": "Beautiful Soup is a Python library for pulling data out of HTML and XML files. It works with your favorite parser to provide idiomatic ways of navigating, searching, and modifying the parse tree. It commonly saves programmers hours or days of work.", "is_article": "1", "is_index": "0", "has_video": "0", "has_image": "1", "word_count": "10693", "lang": "en", "time_to_read": 49, "tags": {"programming": {"item_id": "138637740", "tag": "programming"}, "python": {"item_id": "138637740", "tag": "python"}, "regexes": {"item_id": "138637740", "tag": "regexes"}, "web-scraping": {"item_id": "138637740", "tag": "web-scraping"}}, "image": {"item_id": "138637740", "src": "https://www.crummy.com/software/BeautifulSoup/bs4/doc/_images/6.1.jpg", "width": "0", "height": "0"}, "images": {"1": {"item_id": "138637740", "image_id": "1", "src": "https://www.crummy.com/software/BeautifulSoup/bs4/doc/_images/6.1.jpg", "width": "0", "height": "0", "credit": "", "caption": ""}}, "listen_duration_estimate": 4139}, "2681195922": {"item_id": "2681195922", "resolved_id": "2681195922", "given_url": "https://www.janmeppe.com/blog/regex-for-noobs/", "given_title": "", "favorite": "0", "status": "1", "time_added": "1638240364", "time_updated": "1682421867", "time_read": "1639186837", "time_favorited": "0", "sort_id": 9, "resolved_title": "Regex For Noobs (like me!) - An Illustrated Guide", "resolved_url": "https://www.janmeppe.com/blog/regex-for-noobs/", "excerpt": "This blog post is an illustrated guide to regex and aims to provide a gentle introduction for people who never have fiddled with regex, want to, but are kind of intimidated by the whole thing.", "is_article": "1", "is_index": "0", "has_video": "0", "has_image": "1", "word_count": "956", "lang": "en", "time_to_read": 4, "top_image_url": "https://www.janmeppe.com/assets/2019-08-01-regex/regex-for-noobs.jpg", "tags": {"regexes": {"item_id": "2681195922", "tag": "regexes"}}, "authors": {"117545722": {"item_id": "2681195922", "author_id": "117545722", "name": "Jan Meppe", "url": ""}}, "image": {"item_id": "2681195922", "src": "https://www.janmeppe.com/assets/2019-08-01-regex/regex-for-noobs.jpg", "width": "0", "height": "0"}, "images": {"1": {"item_id": "2681195922", "image_id": "1", "src": "https://www.janmeppe.com/assets/2019-08-01-regex/regex-for-noobs.jpg", "width": "0", "height": "0", "credit": "", "caption": ""}, "2": {"item_id": "2681195922", "image_id": "2", "src": "https://www.janmeppe.com/assets/2019-08-01-regex/cat.jpg", "width": "0", "height": "0", "credit": "", "caption": ""}, "3": {"item_id": "2681195922", "image_id": "3", "src": "https://www.janmeppe.com/assets/2019-08-01-regex/two-special-guests.jpg", "width": "0", "height": "0", "credit": "", "caption": ""}, "4": {"item_id": "2681195922", "image_id": "4", "src": "https://www.janmeppe.com/assets/2019-08-01-regex/cat-match.jpg", "width": "0", "height": "0", "credit": "", "caption": ""}, "5": {"item_id": "2681195922", "image_id": "5", "src": "https://www.janmeppe.com/assets/2019-08-01-regex/trifecta.jpg", "width": "0", "height": "0", "credit": "", "caption": ""}, "6": {"item_id": "2681195922", "image_id": "6", "src": "https://www.janmeppe.com/assets/2019-08-01-regex/anchors.jpg", "width": "0", "height": "0", "credit": "", "caption": ""}, "7": {"item_id": "2681195922", "image_id": "7", "src": "https://www.janmeppe.com/assets/2019-08-01-regex/character-sets.jpg", "width": "0", "height": "0", "credit": "", "caption": ""}}, "listen_duration_estimate": 370}, "2900681142": {"item_id": "2900681142", "resolved_id": "2900681142", "given_url": "https://www.linkedin.com/posts/rahulagwl_the-ultimate-guide-to-using-the-python-regex-activity-6639584596629512192-2kDf", "given_title": "", "favorite": "0", "status": "1", "time_added": "1583001247", "time_updated": "1682421867", "time_read": "1583785007", "time_favorited": "0", "sort_id": 10, "resolved_title": "Rahul Agarwal posted on LinkedIn", "resolved_url": "https://www.linkedin.com/posts/rahulagwl_the-ultimate-guide-to-using-the-python-regex-activity-6639584596629512192-2kDf", "excerpt": "\"The Ultimate Guide to using the Python regex module\" https://lttr.", "is_article": "0", "is_index": "0", "has_video": "0", "has_image": "0", "word_count": "18", "lang": "en", "top_image_url": "https://s3-external-1.amazonaws.com/missinglettr-media/_versions/engine/supporting_photos/3269662d6aaf82f7fa171bca3905a3a4_social.png", "tags": {"python": {"item_id": "2900681142", "tag": "python"}, "regexes": {"item_id": "2900681142", "tag": "regexes"}}, "authors": {"120874792": {"item_id": "2900681142", "author_id": "120874792", "name": "View public", "url": "https://in.linkedin.com/in/rahulagwl?trk=d_public_post_follow_view_profile"}}, "domain_metadata": {"name": "LinkedIn", "logo": "https://logo.clearbit.com/linkedin.com?size=800", "greyscale_logo": "https://logo.clearbit.com/linkedin.com?size=800&greyscale=true"}, "listen_duration_estimate": 7}}, "error": nil, "search_meta": {"search_type": "normal"}, "since": 1709419590}