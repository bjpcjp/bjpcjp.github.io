{"status": 1, "complete": 1, "list": {"209046668": {"item_id": "209046668", "resolved_id": "209046668", "given_url": "https://numba.pydata.org/", "given_title": "", "favorite": "0", "status": "1", "time_added": "1672169916", "time_updated": "1672242755", "time_read": "1672242755", "time_favorited": "0", "sort_id": 0, "resolved_title": "Numba: A High Performance Python Compiler", "resolved_url": "https://numba.pydata.org/", "excerpt": "Numba translates Python functions to optimized machine code at runtime using the industry-standard LLVM compiler library. Numba-compiled numerical algorithms in Python can approach the speeds of C or FORTRAN.", "is_article": "0", "is_index": "1", "has_video": "0", "has_image": "1", "word_count": "401", "lang": "en", "tags": {"numba": {"item_id": "209046668", "tag": "numba"}, "python": {"item_id": "209046668", "tag": "python"}}, "image": {"item_id": "209046668", "src": "https://numba.pydata.org/_static/numba-blue-horizontal-rgb.svg", "width": "0", "height": "0"}, "images": {"1": {"item_id": "209046668", "image_id": "1", "src": "https://numba.pydata.org/_static/numba-blue-horizontal-rgb.svg", "width": "0", "height": "0", "credit": "", "caption": ""}, "2": {"item_id": "209046668", "image_id": "2", "src": "https://numba.pydata.org/_static/nvidia_cuda.jpg", "width": "0", "height": "0", "credit": "", "caption": ""}, "3": {"item_id": "209046668", "image_id": "3", "src": "https://numba.pydata.org/_static/anaconda_logo.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "4": {"item_id": "209046668", "image_id": "4", "src": "https://numba.pydata.org/_static/darpa_logo.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "5": {"item_id": "209046668", "image_id": "5", "src": "https://numba.pydata.org/_static/moore_logo.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "6": {"item_id": "209046668", "image_id": "6", "src": "https://numba.pydata.org/_static/intel_logo.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "7": {"item_id": "209046668", "image_id": "7", "src": "https://numba.pydata.org/_static/nvidia_logo.png", "width": "0", "height": "0", "credit": "", "caption": ""}, "8": {"item_id": "209046668", "image_id": "8", "src": "https://numba.pydata.org/_static/amd_logo.png", "width": "0", "height": "0", "credit": "", "caption": ""}}, "listen_duration_estimate": 155}, "2373625029": {"item_id": "2373625029", "resolved_id": "2971272866", "given_url": "https://numba.pydata.org/numba-doc/dev/user/5minguide.html", "given_title": "", "favorite": "0", "status": "1", "time_added": "1638239964", "time_updated": "1642373330", "time_read": "1642373330", "time_favorited": "0", "sort_id": 1, "resolved_title": "A ~5 minute guide to Numba ‚Äî Numba 0.52.0.dev0+274.g626b40e-py3.7-linux-x86_64.egg documentation", "resolved_url": "https://numba.pydata.org/numba-doc/latest/index.htmluser/5minguide.html", "excerpt": "Numba can also be compiled from source, although we do not recommend it for first-time Numba users. This depends on what your code looks like, if your code is numerically orientated (does a lot of math), uses NumPy a lot and/or has a lot of loops, then Numba is often a good choice.", "is_article": "1", "is_index": "0", "has_video": "0", "has_image": "0", "word_count": "1159", "lang": "en", "time_to_read": 5, "tags": {"numba": {"item_id": "2373625029", "tag": "numba"}, "python": {"item_id": "2373625029", "tag": "python"}}, "listen_duration_estimate": 449}, "3140113698": {"item_id": "3140113698", "resolved_id": "3140113698", "given_url": "https://towardsdatascience.com/numba-jit-compilation-but-for-python-373fc2f848d6", "given_title": "", "favorite": "0", "status": "1", "time_added": "1602546312", "time_updated": "1604367708", "time_read": "1604367708", "time_favorited": "0", "sort_id": 2, "resolved_title": "Numba: JIT Compilation, But For Python", "resolved_url": "https://towardsdatascience.com/numba-jit-compilation-but-for-python-373fc2f848d6", "excerpt": "Statistical computing has always been a very difficult discipline for programmers and computer-scientists to provide for. There are certain attributes and characteristics that programmers look for in not only a statistical programming language, but also a general-purpose programming language.", "is_article": "1", "is_index": "0", "has_video": "0", "has_image": "1", "word_count": "988", "lang": "en", "time_to_read": 4, "top_image_url": "https://miro.medium.com/max/1200/1*jkav9qrxhUN1XxMJ0lUo-g.jpeg", "tags": {"numba": {"item_id": "3140113698", "tag": "numba"}, "python": {"item_id": "3140113698", "tag": "python"}}, "authors": {"120940595": {"item_id": "3140113698", "author_id": "120940595", "name": "Emmett Boudreau", "url": "https://medium.com/@emmettgb"}}, "image": {"item_id": "3140113698", "src": "https://miro.medium.com/fit/c/56/56/2*W_eqMnrJ8bsRz-qJZmRnhA.jpeg", "width": "28", "height": "28"}, "images": {"1": {"item_id": "3140113698", "image_id": "1", "src": "https://miro.medium.com/fit/c/56/56/2*W_eqMnrJ8bsRz-qJZmRnhA.jpeg", "width": "28", "height": "28", "credit": "", "caption": ""}, "2": {"item_id": "3140113698", "image_id": "2", "src": "https://miro.medium.com/max/3840/1*jkav9qrxhUN1XxMJ0lUo-g.jpeg", "width": "1920", "height": "1080", "credit": "", "caption": ""}}, "domain_metadata": {"name": "Towards Data Science", "logo": "https://logo.clearbit.com/towardsdatascience.com?size=800", "greyscale_logo": "https://logo.clearbit.com/towardsdatascience.com?size=800&greyscale=true"}, "listen_duration_estimate": 382}, "3713013281": {"item_id": "3713013281", "resolved_id": "3713013281", "given_url": "https://towardsdatascience.com/cuda-by-numba-examples-c583474124b0", "given_title": "CUDA by Numba Examples", "favorite": "0", "status": "1", "time_added": "1664393314", "time_updated": "1665774179", "time_read": "1665774179", "time_favorited": "0", "sort_id": 3, "resolved_title": "CUDA by Numba Examples: Atomics and Mutexes", "resolved_url": "https://towardsdatascience.com/cuda-by-numba-examples-c583474124b0", "excerpt": "Part 4 in the series concludes the journey of learning CUDA programming from scratch with PythonIntroductionIn the first three installments of this series (part 1 here, part 2 here, and part 3 here), we‚Äôve gone through most of the basics of CUDA development such as launching kernels to perform emb", "is_article": "1", "is_index": "0", "has_video": "0", "has_image": "1", "word_count": "2655", "lang": "en", "time_to_read": 12, "top_image_url": "https://miro.medium.com/max/1024/1*ZKaQL6AiJxOPe9Cgmt6-gg.png", "tags": {"cuda": {"item_id": "3713013281", "tag": "cuda"}, "numba": {"item_id": "3713013281", "tag": "numba"}, "python": {"item_id": "3713013281", "tag": "python"}}, "authors": {"172077559": {"item_id": "3713013281", "author_id": "172077559", "name": "Carlos Costa", "url": "https://medium.com/@cdacostaf"}}, "image": {"item_id": "3713013281", "src": "https://miro.medium.com/max/1400/1*ZKaQL6AiJxOPe9Cgmt6-gg.png", "width": "700", "height": "350"}, "images": {"1": {"item_id": "3713013281", "image_id": "1", "src": "https://miro.medium.com/max/1400/1*ZKaQL6AiJxOPe9Cgmt6-gg.png", "width": "700", "height": "350", "credit": "", "caption": "Figure 3.0. Running Stable Diffusion with ‚Äúatom heart mother album cover in the style of dali‚Äù. Credits: Own work under the CreativeML Open RAIL-M license."}, "2": {"item_id": "3713013281", "image_id": "2", "src": "https://miro.medium.com/max/1400/1*lhgO-McHWkorkrDGELHF0g.png", "width": "700", "height": "325", "credit": "", "caption": "Figure 4.1. Several threads trying to read and write from the same global memory may result in a race condition. Credit: own work."}, "3": {"item_id": "3713013281", "image_id": "3", "src": "https://miro.medium.com/max/1400/1*vkE70sAHWKKcX08zc41c-g.png", "width": "700", "height": "262", "credit": "", "caption": "Figure 4.2. When the resource is locked from read/write while the thread is operating on the contents, we ensure that each thread gets an updated value upon read, and its write are seen by the other threads. Atomic operations are generally slower. Credits: own work."}, "4": {"item_id": "3713013281", "image_id": "4", "src": "https://miro.medium.com/max/1198/1*19HwTlYrspUELml37MJeSw.png", "width": "599", "height": "210", "credit": "", "caption": "Histogram of CUDA by ‚ÄúNumba Examples‚Äù. Credit: own work."}, "5": {"item_id": "3713013281", "image_id": "5", "src": "https://miro.medium.com/max/802/1*4wRZhluoKZkO6aF_HTNtXg.png", "width": "401", "height": "264", "credit": "own work", "caption": ""}, "6": {"item_id": "3713013281", "image_id": "6", "src": "https://miro.medium.com/max/788/1*oLjKcCCFejnBCXB6LIjl2Q.png", "width": "394", "height": "264", "credit": "own work", "caption": ""}, "7": {"item_id": "3713013281", "image_id": "7", "src": "https://miro.medium.com/max/846/1*96CZMHi53R-EPsKk8S1ZOw.png", "width": "423", "height": "248", "credit": "own work", "caption": ""}}, "domain_metadata": {"name": "Towards Data Science", "logo": "https://logo.clearbit.com/towardsdatascience.com?size=800", "greyscale_logo": "https://logo.clearbit.com/towardsdatascience.com?size=800&greyscale=true"}, "listen_duration_estimate": 1028}, "3726939252": {"item_id": "3726939252", "resolved_id": "3726939252", "given_url": "https://towardsdatascience.com/how-to-boost-pandas-speed-and-process-10m-row-datasets-in-milliseconds-48d5468e269?source=rss----7f60cf5620c9---4", "given_title": "How to Boost Pandas Speed And Process 10M-row Datasets in Milliseconds", "favorite": "0", "status": "1", "time_added": "1666116148", "time_updated": "1666188442", "time_read": "1666188441", "time_favorited": "0", "sort_id": 4, "resolved_title": "Medium", "resolved_url": "https://towardsdatascience.com/how-to-boost-pandas-speed-and-process-10m-row-datasets-in-milliseconds-48d5468e269?source=rss----7f60cf5620c9---4", "excerpt": "Bex T. | DataCamp Instructor |ü•áTop 10 AI/ML Writer on Medium | Kaggle Master | https://www.linkedin.com/in/bextuychiev/", "is_article": "1", "is_index": "0", "has_video": "0", "has_image": "1", "word_count": "18", "lang": "en", "tags": {"numba": {"item_id": "3726939252", "tag": "numba"}, "pandas": {"item_id": "3726939252", "tag": "pandas"}, "python": {"item_id": "3726939252", "tag": "python"}}, "image": {"item_id": "3726939252", "src": "https://miro.medium.com/fit/c/176/176/1*dEWNYKjVLledNST1EBuL_A.png", "width": "88", "height": "88"}, "images": {"1": {"item_id": "3726939252", "image_id": "1", "src": "https://miro.medium.com/fit/c/176/176/1*dEWNYKjVLledNST1EBuL_A.png", "width": "88", "height": "88", "credit": "", "caption": ""}}, "domain_metadata": {"name": "Towards Data Science", "logo": "https://logo.clearbit.com/towardsdatascience.com?size=800", "greyscale_logo": "https://logo.clearbit.com/towardsdatascience.com?size=800&greyscale=true"}, "listen_duration_estimate": 7}, "1896680617": {"item_id": "1896680617", "resolved_id": "1896680617", "given_url": "https://devblogs.nvidia.com/parallelforall/numba-python-cuda-acceleration/", "given_title": "Numba: High-Performance Python with CUDA Acceleration", "favorite": "0", "status": "1", "time_added": "1506023720", "time_updated": "1611280489", "time_read": "1514398033", "time_favorited": "0", "sort_id": 5, "resolved_title": "Numba: High-Performance Python with CUDA Acceleration", "resolved_url": "https://devblogs.nvidia.com/parallelforall/numba-python-cuda-acceleration/", "excerpt": "Python is a high-productivity dynamic programming language that is widely used in science, engineering, and data analytics applications.", "is_article": "1", "is_index": "0", "has_video": "0", "has_image": "1", "word_count": "1419", "lang": "en", "time_to_read": 6, "top_image_url": "https://devblogs.nvidia.com/parallelforall/wp-content/uploads/2013/09/numba_blue_icon_rgb-300x300.png", "tags": {"cuda": {"item_id": "1896680617", "tag": "cuda"}, "numba": {"item_id": "1896680617", "tag": "numba"}, "python": {"item_id": "1896680617", "tag": "python"}}, "authors": {"16771545": {"item_id": "1896680617", "author_id": "16771545", "name": "Mark Harris", "url": "https://devblogs.nvidia.com/parallelforall/author/mharris/"}}, "image": {"item_id": "1896680617", "src": "https://devblogs.nvidia.com/parallelforall/wp-content/uploads/2013/09/numba_blue_icon_rgb-300x300.png", "width": "300", "height": "300"}, "images": {"1": {"item_id": "1896680617", "image_id": "1", "src": "https://devblogs.nvidia.com/parallelforall/wp-content/uploads/2013/09/numba_blue_icon_rgb-300x300.png", "width": "300", "height": "300", "credit": "", "caption": ""}, "2": {"item_id": "1896680617", "image_id": "2", "src": "https://devblogs.nvidia.com/wp-content/uploads/2013/09/Python_Mandelbrot.png", "width": "391", "height": "268", "credit": "", "caption": ""}}, "listen_duration_estimate": 549}, "1912526257": {"item_id": "1912526257", "resolved_id": "1912526257", "given_url": "https://www.reddit.com/r/Python/comments/742ycz/seven_things_you_might_not_know_about_numba/", "given_title": "Seven Things You Might Not Know About Numba | Parallel Forall", "favorite": "0", "status": "1", "time_added": "1507068436", "time_updated": "1611284250", "time_read": "1514397996", "time_favorited": "0", "sort_id": 6, "resolved_title": "Seven Things You Might Not Know About Numba | Parallel Forall", "resolved_url": "https://www.reddit.com/r/Python/comments/742ycz/seven_things_you_might_not_know_about_numba/", "excerpt": "Seven Things You Might Not Know About Numba | Parallel Forall (devblogs.nvidia.", "is_article": "0", "is_index": "0", "has_video": "0", "has_image": "0", "word_count": "17", "lang": "en", "top_image_url": "https://www.redditstatic.com/icon.png", "tags": {"numba": {"item_id": "1912526257", "tag": "numba"}}, "authors": {"39710374": {"item_id": "1912526257", "author_id": "39710374", "name": "brombaer", "url": ""}}, "domain_metadata": {"name": "Reddit", "logo": "https://logo.clearbit.com/reddit.com?size=800", "greyscale_logo": "https://logo.clearbit.com/reddit.com?size=800&greyscale=true"}, "listen_duration_estimate": 7}}, "error": nil, "search_meta": {"search_type": "normal"}, "since": 1709934784}